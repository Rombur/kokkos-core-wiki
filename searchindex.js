Search.setIndex({"docnames": ["API/algorithms-index", "API/algorithms/Random-Number", "API/algorithms/Sort", "API/algorithms/std-algorithms-index", "API/algorithms/std-algorithms/Iterators", "API/algorithms/std-algorithms/StdMinMaxElement", "API/algorithms/std-algorithms/StdModSeq", "API/algorithms/std-algorithms/StdNonModSeq", "API/algorithms/std-algorithms/StdNumeric", "API/algorithms/std-algorithms/StdPartioningOps", "API/algorithms/std-algorithms/StdSorting", "API/algorithms/std-algorithms/all/StdAdjacentDifference", "API/algorithms/std-algorithms/all/StdAdjacentFind", "API/algorithms/std-algorithms/all/StdAllOf", "API/algorithms/std-algorithms/all/StdAnyOf", "API/algorithms/std-algorithms/all/StdCopy", "API/algorithms/std-algorithms/all/StdCopyBackward", "API/algorithms/std-algorithms/all/StdCopyIf", "API/algorithms/std-algorithms/all/StdCopy_n", "API/algorithms/std-algorithms/all/StdCount", "API/algorithms/std-algorithms/all/StdCountIf", "API/algorithms/std-algorithms/all/StdEqual", "API/algorithms/std-algorithms/all/StdExclusiveScan", "API/algorithms/std-algorithms/all/StdFill", "API/algorithms/std-algorithms/all/StdFill_n", "API/algorithms/std-algorithms/all/StdFind", "API/algorithms/std-algorithms/all/StdFindEnd", "API/algorithms/std-algorithms/all/StdFindFirstOf", "API/algorithms/std-algorithms/all/StdFindIf", "API/algorithms/std-algorithms/all/StdFindIfNot", "API/algorithms/std-algorithms/all/StdForEach", "API/algorithms/std-algorithms/all/StdForEachN", "API/algorithms/std-algorithms/all/StdGenerate", "API/algorithms/std-algorithms/all/StdGenerate_n", "API/algorithms/std-algorithms/all/StdInclusiveScan", "API/algorithms/std-algorithms/all/StdIsPartitioned", "API/algorithms/std-algorithms/all/StdIsSorted", "API/algorithms/std-algorithms/all/StdIsSortedUntil", "API/algorithms/std-algorithms/all/StdLexicographicalCompare", "API/algorithms/std-algorithms/all/StdMaxElement", "API/algorithms/std-algorithms/all/StdMinElement", "API/algorithms/std-algorithms/all/StdMinMaxElement", "API/algorithms/std-algorithms/all/StdMismatch", "API/algorithms/std-algorithms/all/StdMove", "API/algorithms/std-algorithms/all/StdMoveBackward", "API/algorithms/std-algorithms/all/StdNoneOf", "API/algorithms/std-algorithms/all/StdPartitionCopy", "API/algorithms/std-algorithms/all/StdPartitionPoint", "API/algorithms/std-algorithms/all/StdReduce", "API/algorithms/std-algorithms/all/StdRemove", "API/algorithms/std-algorithms/all/StdRemoveCopy", "API/algorithms/std-algorithms/all/StdRemoveCopyIf", "API/algorithms/std-algorithms/all/StdRemoveIf", "API/algorithms/std-algorithms/all/StdReplace", "API/algorithms/std-algorithms/all/StdReplaceCopy", "API/algorithms/std-algorithms/all/StdReplaceCopyIf", "API/algorithms/std-algorithms/all/StdReplaceIf", "API/algorithms/std-algorithms/all/StdReverse", "API/algorithms/std-algorithms/all/StdReverseCopy", "API/algorithms/std-algorithms/all/StdRotate", "API/algorithms/std-algorithms/all/StdRotateCopy", "API/algorithms/std-algorithms/all/StdSearch", "API/algorithms/std-algorithms/all/StdSearchN", "API/algorithms/std-algorithms/all/StdShiftLeft", "API/algorithms/std-algorithms/all/StdShiftRight", "API/algorithms/std-algorithms/all/StdSwapRanges", "API/algorithms/std-algorithms/all/StdTransform", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan", "API/algorithms/std-algorithms/all/StdTransformReduce", "API/algorithms/std-algorithms/all/StdUnique", "API/algorithms/std-algorithms/all/StdUniqueCopy", "API/alphabetical", "API/containers-index", "API/containers/Bitset", "API/containers/DualView", "API/containers/DynRankView", "API/containers/DynamicView", "API/containers/Offset-View", "API/containers/ScatterView", "API/containers/StaticCrsGraph", "API/containers/Unordered-Map", "API/containers/vector", "API/core-index", "API/core/Detection-Idiom", "API/core/Execution-Policies", "API/core/Initialize-and-Finalize", "API/core/KokkosConcepts", "API/core/Macros", "API/core/Numerics", "API/core/ParallelDispatch", "API/core/Profiling", "API/core/STL-Compatibility", "API/core/SpaceAccessibility", "API/core/Spaces", "API/core/Task-Parallelism", "API/core/Traits", "API/core/Utilities", "API/core/View", "API/core/atomics", "API/core/atomics/atomic_compare_exchange", "API/core/atomics/atomic_compare_exchange_strong", "API/core/atomics/atomic_exchange", "API/core/atomics/atomic_fetch_op", "API/core/atomics/atomic_load", "API/core/atomics/atomic_op", "API/core/atomics/atomic_op_fetch", "API/core/atomics/atomic_store", "API/core/builtin_reducers", "API/core/builtinreducers/BAnd", "API/core/builtinreducers/BOr", "API/core/builtinreducers/LAnd", "API/core/builtinreducers/LOr", "API/core/builtinreducers/Max", "API/core/builtinreducers/MaxLoc", "API/core/builtinreducers/Min", "API/core/builtinreducers/MinLoc", "API/core/builtinreducers/MinMax", "API/core/builtinreducers/MinMaxLoc", "API/core/builtinreducers/MinMaxLocScalar", "API/core/builtinreducers/MinMaxScalar", "API/core/builtinreducers/Prod", "API/core/builtinreducers/ReducerConcept", "API/core/builtinreducers/ReductionScalarTypes", "API/core/builtinreducers/Sum", "API/core/builtinreducers/ValLocScalar", "API/core/c_style_memory_management", "API/core/c_style_memory_management/free", "API/core/c_style_memory_management/malloc", "API/core/c_style_memory_management/realloc", "API/core/execution_spaces", "API/core/initialize_finalize/InitArguments", "API/core/initialize_finalize/InitializationSettings", "API/core/initialize_finalize/ScopeGuard", "API/core/initialize_finalize/finalize", "API/core/initialize_finalize/initialize", "API/core/initialize_finalize/push_finalize_hook", "API/core/memory_spaces", "API/core/numerics/bit-manipulation", "API/core/numerics/mathematical-constants", "API/core/numerics/mathematical-functions", "API/core/numerics/numeric-traits", "API/core/parallel-dispatch/ParallelForTag", "API/core/parallel-dispatch/ParallelReduceTag", "API/core/parallel-dispatch/ParallelScanTag", "API/core/parallel-dispatch/fence", "API/core/parallel-dispatch/parallel_for", "API/core/parallel-dispatch/parallel_reduce", "API/core/parallel-dispatch/parallel_scan", "API/core/policies/ExecutionPolicyConcept", "API/core/policies/MDRangePolicy", "API/core/policies/NestedPolicies", "API/core/policies/RangePolicy", "API/core/policies/TeamHandleConcept", "API/core/policies/TeamPolicy", "API/core/policies/TeamThreadMDRange", "API/core/policies/TeamThreadRange", "API/core/policies/TeamVectorMDRange", "API/core/policies/TeamVectorRange", "API/core/policies/ThreadVectorMDRange", "API/core/policies/ThreadVectorRange", "API/core/profiling/profiling_section", "API/core/profiling/scoped_region", "API/core/spaces/partition_space", "API/core/stl-compat/pair", "API/core/utilities/abort", "API/core/utilities/all", "API/core/utilities/assert", "API/core/utilities/complex", "API/core/utilities/device_id", "API/core/utilities/experimental", "API/core/utilities/min_max_clamp", "API/core/utilities/num_devices", "API/core/utilities/num_threads", "API/core/utilities/printf", "API/core/utilities/swap", "API/core/utilities/timer", "API/core/view/Subview_type", "API/core/view/create_mirror", "API/core/view/deep_copy", "API/core/view/layoutLeft", "API/core/view/layoutRight", "API/core/view/layoutStride", "API/core/view/realloc", "API/core/view/resize", "API/core/view/subview", "API/core/view/view", "API/core/view/view_alloc", "API/core/view/view_like", "API/simd-index", "API/simd/simd", "API/simd/simd_mask", "API/simd/where_expression", "ProgrammingGuide/Atomic-Operations", "ProgrammingGuide/Compatibility", "ProgrammingGuide/Compiling", "ProgrammingGuide/Custom-Reductions", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types", "ProgrammingGuide/Custom-Reductions-Custom-Reducers", "ProgrammingGuide/HierarchicalParallelism", "ProgrammingGuide/Initialization", "ProgrammingGuide/Interoperability", "ProgrammingGuide/Introduction", "ProgrammingGuide/Kokkos-and-Virtual-Functions", "ProgrammingGuide/Machine-Model", "ProgrammingGuide/ParallelDispatch", "ProgrammingGuide/ProgrammingModel", "ProgrammingGuide/SIMD", "ProgrammingGuide/Subviews", "ProgrammingGuide/View", "building", "citation", "contributing", "deprecation_page", "faq", "index", "keywords", "known-issues", "license", "mydefs", "programmingguide", "requirements", "templates/class_api", "templates/index", "testing-and-issue-tracking", "testing-and-issue-tracking/Kokkos-Project-Planning", "testing-and-issue-tracking/Requirements-Issues-and-Feedback", "testing-and-issue-tracking/Testing-Process-Details", "testing-and-issue-tracking/Testing-Processes", "testing-and-issue-tracking/Testing-Workflow-Components", "usecases", "usecases/Average-To-Nodes", "usecases/Kokkos-Fortran-Interoperability", "usecases/MDRangePolicy", "usecases/MPI-Halo-Exchange", "usecases/Moving_from_EnableUVM_to_SharedSpace", "usecases/OverlappingHostAndDeviceWork", "usecases/SoA-and-AoSoA-with-Cabana", "usecases/TaggedOperators", "usecases/Tasking", "usecases/VirtualFunctions", "usecases/WindowsHeader", "videolectures"], "filenames": ["API/algorithms-index.rst", "API/algorithms/Random-Number.rst", "API/algorithms/Sort.rst", "API/algorithms/std-algorithms-index.rst", "API/algorithms/std-algorithms/Iterators.rst", "API/algorithms/std-algorithms/StdMinMaxElement.rst", "API/algorithms/std-algorithms/StdModSeq.rst", "API/algorithms/std-algorithms/StdNonModSeq.rst", "API/algorithms/std-algorithms/StdNumeric.rst", "API/algorithms/std-algorithms/StdPartioningOps.rst", "API/algorithms/std-algorithms/StdSorting.rst", "API/algorithms/std-algorithms/all/StdAdjacentDifference.md", "API/algorithms/std-algorithms/all/StdAdjacentFind.rst", "API/algorithms/std-algorithms/all/StdAllOf.rst", "API/algorithms/std-algorithms/all/StdAnyOf.rst", "API/algorithms/std-algorithms/all/StdCopy.md", "API/algorithms/std-algorithms/all/StdCopyBackward.md", "API/algorithms/std-algorithms/all/StdCopyIf.md", "API/algorithms/std-algorithms/all/StdCopy_n.md", "API/algorithms/std-algorithms/all/StdCount.rst", "API/algorithms/std-algorithms/all/StdCountIf.rst", "API/algorithms/std-algorithms/all/StdEqual.md", "API/algorithms/std-algorithms/all/StdExclusiveScan.md", "API/algorithms/std-algorithms/all/StdFill.md", "API/algorithms/std-algorithms/all/StdFill_n.md", "API/algorithms/std-algorithms/all/StdFind.md", "API/algorithms/std-algorithms/all/StdFindEnd.md", "API/algorithms/std-algorithms/all/StdFindFirstOf.md", "API/algorithms/std-algorithms/all/StdFindIf.md", "API/algorithms/std-algorithms/all/StdFindIfNot.md", "API/algorithms/std-algorithms/all/StdForEach.md", "API/algorithms/std-algorithms/all/StdForEachN.md", "API/algorithms/std-algorithms/all/StdGenerate.md", "API/algorithms/std-algorithms/all/StdGenerate_n.rst", "API/algorithms/std-algorithms/all/StdInclusiveScan.md", "API/algorithms/std-algorithms/all/StdIsPartitioned.md", "API/algorithms/std-algorithms/all/StdIsSorted.md", "API/algorithms/std-algorithms/all/StdIsSortedUntil.md", "API/algorithms/std-algorithms/all/StdLexicographicalCompare.md", "API/algorithms/std-algorithms/all/StdMaxElement.md", "API/algorithms/std-algorithms/all/StdMinElement.md", "API/algorithms/std-algorithms/all/StdMinMaxElement.md", "API/algorithms/std-algorithms/all/StdMismatch.md", "API/algorithms/std-algorithms/all/StdMove.rst", "API/algorithms/std-algorithms/all/StdMoveBackward.rst", "API/algorithms/std-algorithms/all/StdNoneOf.rst", "API/algorithms/std-algorithms/all/StdPartitionCopy.md", "API/algorithms/std-algorithms/all/StdPartitionPoint.md", "API/algorithms/std-algorithms/all/StdReduce.md", "API/algorithms/std-algorithms/all/StdRemove.md", "API/algorithms/std-algorithms/all/StdRemoveCopy.md", "API/algorithms/std-algorithms/all/StdRemoveCopyIf.md", "API/algorithms/std-algorithms/all/StdRemoveIf.md", "API/algorithms/std-algorithms/all/StdReplace.md", "API/algorithms/std-algorithms/all/StdReplaceCopy.md", "API/algorithms/std-algorithms/all/StdReplaceCopyIf.md", "API/algorithms/std-algorithms/all/StdReplaceIf.md", "API/algorithms/std-algorithms/all/StdReverse.rst", "API/algorithms/std-algorithms/all/StdReverseCopy.rst", "API/algorithms/std-algorithms/all/StdRotate.md", "API/algorithms/std-algorithms/all/StdRotateCopy.md", "API/algorithms/std-algorithms/all/StdSearch.md", "API/algorithms/std-algorithms/all/StdSearchN.md", "API/algorithms/std-algorithms/all/StdShiftLeft.md", "API/algorithms/std-algorithms/all/StdShiftRight.md", "API/algorithms/std-algorithms/all/StdSwapRanges.rst", "API/algorithms/std-algorithms/all/StdTransform.md", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformReduce.md", "API/algorithms/std-algorithms/all/StdUnique.md", "API/algorithms/std-algorithms/all/StdUniqueCopy.md", "API/alphabetical.rst", "API/containers-index.rst", "API/containers/Bitset.rst", "API/containers/DualView.rst", "API/containers/DynRankView.rst", "API/containers/DynamicView.rst", "API/containers/Offset-View.rst", "API/containers/ScatterView.rst", "API/containers/StaticCrsGraph.rst", "API/containers/Unordered-Map.rst", "API/containers/vector.rst", "API/core-index.rst", "API/core/Detection-Idiom.rst", "API/core/Execution-Policies.rst", "API/core/Initialize-and-Finalize.rst", "API/core/KokkosConcepts.rst", "API/core/Macros.rst", "API/core/Numerics.rst", "API/core/ParallelDispatch.rst", "API/core/Profiling.rst", "API/core/STL-Compatibility.rst", "API/core/SpaceAccessibility.rst", "API/core/Spaces.rst", "API/core/Task-Parallelism.rst", "API/core/Traits.rst", "API/core/Utilities.rst", "API/core/View.rst", "API/core/atomics.rst", "API/core/atomics/atomic_compare_exchange.rst", "API/core/atomics/atomic_compare_exchange_strong.rst", "API/core/atomics/atomic_exchange.rst", "API/core/atomics/atomic_fetch_op.rst", "API/core/atomics/atomic_load.rst", "API/core/atomics/atomic_op.rst", "API/core/atomics/atomic_op_fetch.rst", "API/core/atomics/atomic_store.rst", "API/core/builtin_reducers.rst", "API/core/builtinreducers/BAnd.rst", "API/core/builtinreducers/BOr.rst", "API/core/builtinreducers/LAnd.rst", "API/core/builtinreducers/LOr.rst", "API/core/builtinreducers/Max.rst", "API/core/builtinreducers/MaxLoc.rst", "API/core/builtinreducers/Min.rst", "API/core/builtinreducers/MinLoc.rst", "API/core/builtinreducers/MinMax.rst", "API/core/builtinreducers/MinMaxLoc.rst", "API/core/builtinreducers/MinMaxLocScalar.rst", "API/core/builtinreducers/MinMaxScalar.rst", "API/core/builtinreducers/Prod.rst", "API/core/builtinreducers/ReducerConcept.rst", "API/core/builtinreducers/ReductionScalarTypes.rst", "API/core/builtinreducers/Sum.rst", "API/core/builtinreducers/ValLocScalar.rst", "API/core/c_style_memory_management.rst", "API/core/c_style_memory_management/free.rst", "API/core/c_style_memory_management/malloc.rst", "API/core/c_style_memory_management/realloc.rst", "API/core/execution_spaces.rst", "API/core/initialize_finalize/InitArguments.rst", "API/core/initialize_finalize/InitializationSettings.rst", "API/core/initialize_finalize/ScopeGuard.rst", "API/core/initialize_finalize/finalize.rst", "API/core/initialize_finalize/initialize.rst", "API/core/initialize_finalize/push_finalize_hook.rst", "API/core/memory_spaces.rst", "API/core/numerics/bit-manipulation.rst", "API/core/numerics/mathematical-constants.rst", "API/core/numerics/mathematical-functions.rst", "API/core/numerics/numeric-traits.rst", "API/core/parallel-dispatch/ParallelForTag.rst", "API/core/parallel-dispatch/ParallelReduceTag.rst", "API/core/parallel-dispatch/ParallelScanTag.rst", "API/core/parallel-dispatch/fence.rst", "API/core/parallel-dispatch/parallel_for.rst", "API/core/parallel-dispatch/parallel_reduce.rst", "API/core/parallel-dispatch/parallel_scan.rst", "API/core/policies/ExecutionPolicyConcept.rst", "API/core/policies/MDRangePolicy.rst", "API/core/policies/NestedPolicies.rst", "API/core/policies/RangePolicy.rst", "API/core/policies/TeamHandleConcept.rst", "API/core/policies/TeamPolicy.rst", "API/core/policies/TeamThreadMDRange.rst", "API/core/policies/TeamThreadRange.rst", "API/core/policies/TeamVectorMDRange.rst", "API/core/policies/TeamVectorRange.rst", "API/core/policies/ThreadVectorMDRange.rst", "API/core/policies/ThreadVectorRange.rst", "API/core/profiling/profiling_section.rst", "API/core/profiling/scoped_region.rst", "API/core/spaces/partition_space.rst", "API/core/stl-compat/pair.md", "API/core/utilities/abort.rst", "API/core/utilities/all.md", "API/core/utilities/assert.rst", "API/core/utilities/complex.rst", "API/core/utilities/device_id.rst", "API/core/utilities/experimental.md", "API/core/utilities/min_max_clamp.rst", "API/core/utilities/num_devices.rst", "API/core/utilities/num_threads.rst", "API/core/utilities/printf.rst", "API/core/utilities/swap.rst", "API/core/utilities/timer.rst", "API/core/view/Subview_type.rst", "API/core/view/create_mirror.rst", "API/core/view/deep_copy.rst", "API/core/view/layoutLeft.rst", "API/core/view/layoutRight.rst", "API/core/view/layoutStride.rst", "API/core/view/realloc.rst", "API/core/view/resize.rst", "API/core/view/subview.rst", "API/core/view/view.rst", "API/core/view/view_alloc.rst", "API/core/view/view_like.rst", "API/simd-index.rst", "API/simd/simd.md", "API/simd/simd_mask.md", "API/simd/where_expression.md", "ProgrammingGuide/Atomic-Operations.md", "ProgrammingGuide/Compatibility.md", "ProgrammingGuide/Compiling.md", "ProgrammingGuide/Custom-Reductions.rst", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers.md", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types.md", "ProgrammingGuide/Custom-Reductions-Custom-Reducers.md", "ProgrammingGuide/HierarchicalParallelism.md", "ProgrammingGuide/Initialization.rst", "ProgrammingGuide/Interoperability.md", "ProgrammingGuide/Introduction.md", "ProgrammingGuide/Kokkos-and-Virtual-Functions.md", "ProgrammingGuide/Machine-Model.rst", "ProgrammingGuide/ParallelDispatch.md", "ProgrammingGuide/ProgrammingModel.md", "ProgrammingGuide/SIMD.md", "ProgrammingGuide/Subviews.md", "ProgrammingGuide/View.md", "building.md", "citation.rst", "contributing.rst", "deprecation_page.rst", "faq.rst", "index.rst", "keywords.rst", "known-issues.rst", "license.rst", "mydefs.rst", "programmingguide.rst", "requirements.rst", "templates/class_api.rst", "templates/index.rst", "testing-and-issue-tracking.rst", "testing-and-issue-tracking/Kokkos-Project-Planning.md", "testing-and-issue-tracking/Requirements-Issues-and-Feedback.md", "testing-and-issue-tracking/Testing-Process-Details.md", "testing-and-issue-tracking/Testing-Processes.md", "testing-and-issue-tracking/Testing-Workflow-Components.md", "usecases.rst", "usecases/Average-To-Nodes.md", "usecases/Kokkos-Fortran-Interoperability.md", "usecases/MDRangePolicy.md", "usecases/MPI-Halo-Exchange.md", "usecases/Moving_from_EnableUVM_to_SharedSpace.rst", "usecases/OverlappingHostAndDeviceWork.md", "usecases/SoA-and-AoSoA-with-Cabana.md", "usecases/TaggedOperators.md", "usecases/Tasking.md", "usecases/VirtualFunctions.md", "usecases/WindowsHeader.md", "videolectures.rst"], "titles": ["API: Algorithms", "Random-Number", "Sort", "Std Algorithms", "Iterators", "Minimum/maximum", "Modifying Sequence", "Non-modifying Sequence", "Numeric", "Partitioning", "Sorting", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_difference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">all_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">any_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_end</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_first_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if_not</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_partitioned</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted_until</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lexicographical_compare</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">min_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minmax_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mismatch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">none_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_point</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_left</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_right</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">swap_ranges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_copy</span></code>", "API in Alphabetical Order", "API: Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Bitset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DualView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynRankView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OffsetView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScatterView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">StaticCrsGraph</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnorderedMap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector</span></code>", "API: Core", "Detection Idiom", "Execution Policies", "Initialize and Finalize", "Kokkos Concepts", "Macros", "Numerics", "Parallel Execution/Dispatch", "Profiling", "STL Compatibility Issues", "Space Accessibility", "Spaces", "Task-Parallelism", "Traits", "Utilities", "View and related", "Atomics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange_strong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_fetch_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_load</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]_fetch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_store</span></code>", "Built-in Reducers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Max</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Min</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLocScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Prod</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducerConcept</span></code>", "Reduction Scalar Types", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ValLocScalar</span></code>", "C-style memory management", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_free</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_malloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_realloc</span></code>", "Execution Spaces", "InitArguments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">InitializationSettings</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScopeGuard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">finalize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">push_finalize_hook</span></code>", "Memory Spaces", "Bit manipulation", "Mathematical constants", "Common math functions", "Numeric traits", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelForTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelReduceTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelScanTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_for</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ExecutionPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MDRangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NestedPolicies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">RangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamHandleConcept</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Profiling::ProfilingSection</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Profiling::ScopedRegion</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_space</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::pair</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::abort</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::ALL</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">KOKKOS_ASSERT</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::complex</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::device_id</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Experimental</span></code>", "Minimum/maximum operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_devices</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_threads</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::printf</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::kokkos_swap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Timer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_mirror[_view]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deep_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutLeft</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutRight</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutStride</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">realloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">view_alloc</span></code>", "View-like Types", "API: SIMD", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::where_expression</span></code>", "10. Atomic Operations", "12 Backwards &amp; Future Compatibility", "4. Compiling", "9. Custom Reductions", "9.1 Built-In-Reducers", "9.2 Built-In Reducers with Custom Scalar Types", "9.3 Custom Reducers", "8. Hierarchical Parallelism", "5. Initialization", "13. Interoperability and Legacy Codes", "1. Introduction", "14. Kokkos and Virtual Functions", "2. Machine Model", "7. Parallel dispatch", "3: Programming Model", "15. SIMD Types", "11: Subviews", "6: View: Multidimensional array", "Build, Install and Use", "Citing Kokkos", "Contributing", "Deprecation for Kokkos-3.x", "FAQ", "Kokkos: The Programming Model", "CMake Keywords", "Known issues", "License", "&lt;no title&gt;", "Programming Guide", "Requirements", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CoolerView</span></code>", "Documentation Templates", "Kokkos Planning and Testing", "Kokkos Project Planning", "Requirements, Issues and Feedback", "Attachments", "Kokkos Testing Processes and Change Process", "Kokkos Testing Workflow Components", "Use Cases and Examples", "ScatterView averaging elements to nodes", "Fortran Interop Use Case", "MDRangePolicy Use Case", "MPI Halo Exchange", "Moving code from requiring <code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos_ENABLE_CUDA_UVM</span></code> to using <code class=\"docutils literal notranslate\"><span class=\"pre\">SharedSpace</span></code>", "Overlapping Host and Device work", "Array of Structures and Structure of Arrays with Cabana", "Tagged Operators", "Kokkos Tasking Use Case", "Virtual Functions", "Kokkos and <code class=\"docutils literal notranslate\"><span class=\"pre\">Windows.h</span></code>", "Video lectures and slides"], "terms": {"random": [0, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 132, 133, 135, 137, 186, 201, 207], "number": [0, 4, 18, 19, 20, 24, 31, 33, 63, 64, 72, 74, 76, 77, 81, 82, 87, 89, 122, 128, 130, 132, 133, 135, 138, 139, 153, 163, 168, 169, 172, 173, 176, 186, 190, 191, 193, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 218, 228, 229, 234, 235, 238, 240], "gener": [0, 6, 33, 72, 83, 85, 87, 90, 95, 135, 137, 150, 152, 190, 191, 193, 194, 197, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 222, 226, 228, 230], "sort": [0, 3, 36, 37, 82, 88, 214], "nest": [0, 77, 87, 93, 95, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 180, 181, 194, 197, 204, 205, 206, 207, 234, 239, 241, 243], "polici": [0, 72, 83, 87, 142, 143, 144, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 195, 199, 201, 202, 206, 214, 234, 237, 239], "team": [0, 72, 85, 87, 95, 142, 143, 144, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 159, 160, 197, 202, 204, 205, 206, 213, 226, 227, 229, 230, 240, 241], "thread": [0, 1, 72, 74, 79, 81, 85, 87, 88, 93, 95, 130, 132, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 169, 172, 173, 174, 193, 195, 196, 197, 201, 203, 206, 207, 210, 211, 216, 217, 230, 237, 240, 243], "level": [0, 87, 88, 95, 151, 153, 154, 194, 195, 200, 203, 206, 210, 211, 212, 216, 230], "std": [0, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 87, 89, 92, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 127, 130, 132, 133, 136, 140, 141, 145, 146, 147, 148, 150, 156, 158, 160, 161, 162, 163, 164, 168, 172, 174, 175, 177, 178, 179, 185, 186, 187, 190, 191, 192, 208, 209, 210, 214, 238, 241], "header": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 195, 217, 223, 238, 242], "file": [1, 4, 11, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 168, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 201, 215, 217, 219, 223, 229, 234, 242], "kokkos_cor": [1, 2, 76, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 194, 199, 201, 214, 218, 223, 236, 241, 242], "hpp": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 89, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 194, 199, 201, 208, 214, 218, 223, 233, 234, 236, 238, 241, 242], "kokkos_complex": [1, 214], "templat": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 84, 85, 87, 89, 93, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 137, 138, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 168, 171, 174, 175, 177, 178, 179, 183, 184, 185, 186, 187, 188, 194, 195, 197, 198, 199, 200, 202, 206, 208, 210, 213, 223, 233, 234, 236], "class": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 92, 93, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 132, 133, 135, 137, 141, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 194, 196, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 223, 224, 235, 238, 239, 241], "struct": [1, 2, 11, 12, 13, 14, 20, 21, 22, 28, 30, 32, 33, 35, 36, 39, 40, 41, 42, 45, 46, 48, 51, 52, 56, 67, 69, 72, 81, 84, 95, 119, 120, 122, 125, 130, 131, 133, 135, 137, 142, 143, 144, 146, 147, 164, 177, 180, 181, 194, 197, 198, 199, 200, 202, 206, 210, 214, 233, 238, 240, 241], "gen_data_typ": 1, "kokkos_inline_funct": [1, 2, 4, 11, 12, 13, 14, 20, 21, 22, 28, 30, 32, 33, 35, 36, 39, 40, 41, 42, 45, 46, 51, 52, 56, 75, 77, 79, 81, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 146, 147, 152, 153, 168, 180, 181, 182, 198, 199, 200, 202, 206, 210, 235], "static": [1, 74, 75, 76, 77, 85, 87, 150, 152, 154, 180, 181, 182, 186, 190, 191, 198, 200, 203, 210, 211, 214, 223, 243], "gen_func_typ": 1, "max": [1, 72, 74, 88, 103, 106, 108, 114, 117, 118, 119, 120, 122, 123, 125, 141, 147, 155, 157, 159, 171, 193, 197, 200, 206, 208, 214, 217, 242], "return": [1, 2, 29, 38, 42, 62, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 95, 100, 101, 102, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 132, 134, 135, 137, 141, 146, 152, 153, 154, 156, 158, 160, 162, 163, 164, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 185, 186, 190, 191, 192, 193, 194, 198, 199, 200, 202, 205, 208, 210, 214, 223, 232, 233, 234, 235, 236, 237, 240], "type_valu": 1, "draw": [1, 72], "gen": [1, 190, 191], "gen_return_valu": 1, "const": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 130, 132, 133, 135, 137, 139, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 197, 198, 199, 200, 202, 204, 206, 208, 209, 214, 223, 233, 234, 235, 237, 239, 241], "rang": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 95, 146, 147, 148, 151, 152, 155, 156, 157, 158, 159, 160, 171, 185, 200, 205, 206, 209, 210, 229, 230, 234], "start": [1, 18, 24, 50, 51, 60, 66, 69, 71, 72, 74, 82, 95, 130, 137, 138, 146, 147, 148, 150, 151, 152, 154, 161, 162, 176, 190, 194, 197, 200, 201, 202, 206, 210, 211, 226, 230, 233, 235, 237, 240], "end": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 86, 134, 135, 138, 147, 148, 150, 151, 152, 154, 156, 158, 160, 161, 162, 195, 201, 210, 219, 233, 234, 240, 242], "function": [1, 2, 4, 30, 33, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 127, 128, 129, 134, 135, 136, 138, 139, 141, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 168, 171, 172, 174, 175, 176, 177, 178, 182, 194, 195, 198, 199, 200, 201, 202, 203, 207, 208, 209, 217, 221, 226, 231, 232, 233, 234, 235, 237, 239], "special": [1, 39, 40, 41, 72, 75, 76, 84, 87, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 177, 178, 186, 190, 191, 196, 198, 200, 206, 208, 209, 219, 223, 233, 238], "all": [1, 2, 12, 13, 25, 30, 33, 35, 47, 49, 52, 53, 54, 55, 56, 66, 70, 72, 74, 75, 76, 77, 78, 86, 87, 93, 95, 97, 122, 133, 134, 136, 137, 138, 139, 145, 146, 149, 153, 154, 177, 179, 182, 185, 186, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 219, 222, 226, 228, 229, 230, 234, 236, 240, 241], "list": [1, 2, 72, 82, 98, 140, 141, 150, 185, 187, 188, 193, 201, 203, 205, 210, 211, 219, 222, 226, 227, 228, 229, 230, 234, 235, 240], "here": [1, 39, 40, 41, 72, 84, 87, 130, 134, 135, 137, 149, 154, 162, 193, 200, 201, 204, 205, 206, 208, 210, 213, 218, 222, 229, 230, 235, 237, 241], "ar": [1, 2, 4, 13, 14, 19, 21, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 53, 59, 60, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 95, 98, 108, 117, 118, 122, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 146, 147, 148, 152, 153, 154, 155, 157, 159, 169, 170, 171, 172, 173, 177, 178, 179, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 219, 222, 224, 226, 227, 228, 229, 230, 232, 233, 235, 237, 239, 240, 241, 242], "part": [1, 72, 83, 87, 98, 122, 130, 137, 153, 168, 170, 193, 194, 195, 202, 203, 207, 208, 210, 219, 226, 228, 230, 239], "kokko": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 94, 96, 97, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 159, 161, 162, 163, 167, 171, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 213, 215, 218, 219, 221, 223, 227, 231, 232, 235, 236, 237, 238, 239, 241, 243], "namespac": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 84, 87, 138, 139, 140, 141, 163, 166, 170, 171, 190, 191, 192, 194, 198, 199, 202, 209, 210, 218], "char": [1, 2, 76, 86, 87, 122, 130, 133, 134, 135, 136, 137, 146, 147, 148, 165, 167, 172, 174, 179, 182, 186, 190, 191, 192, 198, 199, 201, 210, 223, 228, 238, 241], "short": [1, 206], "127": 1, "0xff": 1, "256": [1, 208, 240], "32767": 1, "0xffff": 1, "65536": 1, "32768": 1, "int": [1, 2, 4, 21, 25, 28, 30, 35, 42, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 122, 130, 131, 132, 133, 134, 135, 136, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 167, 169, 172, 173, 174, 177, 179, 182, 185, 186, 190, 191, 192, 193, 197, 198, 199, 200, 201, 202, 204, 206, 208, 210, 214, 223, 232, 234, 235, 236, 237, 238, 239, 240, 241], "max_rand": 1, "uint": 1, "max_urand": 1, "long": [1, 81, 87, 122, 140, 195, 203, 205, 206, 210, 226], "max_rand64": 1, "ulong": 1, "max_urand64": 1, "float": [1, 75, 82, 139, 140, 141, 164, 180, 181, 182, 205, 206, 208, 235, 238], "1": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 105, 111, 121, 122, 131, 132, 133, 135, 138, 146, 147, 148, 151, 153, 154, 156, 158, 160, 162, 163, 164, 167, 168, 169, 172, 173, 175, 179, 182, 185, 186, 190, 191, 192, 196, 198, 199, 208, 211, 217, 218, 219, 221, 222, 223, 228, 230, 232, 233, 234, 235, 240, 243], "0f": [1, 164], "doubl": [1, 4, 23, 24, 39, 40, 41, 53, 56, 76, 77, 78, 79, 80, 86, 95, 130, 133, 134, 135, 140, 145, 147, 156, 158, 160, 166, 168, 176, 177, 185, 186, 190, 191, 192, 193, 197, 200, 202, 206, 208, 209, 210, 223, 232, 233, 234, 235, 236, 237], "0": [1, 2, 11, 18, 24, 35, 56, 72, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 95, 109, 110, 112, 122, 124, 130, 132, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 167, 168, 172, 179, 180, 181, 182, 185, 186, 190, 191, 192, 193, 195, 197, 198, 199, 200, 202, 206, 207, 208, 210, 211, 217, 219, 222, 223, 228, 232, 233, 234, 235, 236, 237, 239, 240, 241], "complex": [1, 72, 82, 87, 88, 97, 122, 195, 196, 197, 200, 205, 208, 216, 218, 222], "where": [1, 2, 4, 11, 12, 13, 14, 17, 20, 22, 28, 30, 32, 33, 35, 36, 37, 40, 42, 45, 46, 51, 52, 55, 56, 67, 69, 76, 77, 81, 87, 95, 100, 101, 102, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 137, 146, 155, 159, 163, 167, 179, 186, 194, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 217, 219, 222, 226, 230, 232, 233, 234, 237, 238, 239, 240, 241], "maximum": [1, 3, 72, 77, 78, 82, 97, 103, 105, 106, 108, 113, 114, 117, 118, 119, 120, 130, 154, 197, 200], "valu": [1, 2, 4, 11, 17, 22, 23, 24, 25, 28, 30, 32, 34, 35, 36, 40, 46, 48, 49, 50, 51, 52, 55, 56, 59, 60, 62, 67, 69, 72, 75, 76, 77, 78, 79, 81, 82, 84, 87, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 130, 132, 135, 137, 138, 141, 146, 147, 148, 152, 153, 154, 156, 158, 160, 164, 167, 171, 175, 178, 179, 185, 186, 192, 193, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 217, 235, 238, 241], "xorshift": 1, "given": [1, 4, 12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 66, 75, 78, 79, 81, 84, 85, 87, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 122, 129, 130, 138, 150, 152, 153, 154, 170, 171, 177, 179, 182, 195, 200, 201, 202, 206, 207, 208, 209, 210, 211, 229, 235, 239, 240], "follow": [1, 33, 37, 39, 40, 41, 75, 76, 77, 78, 79, 81, 86, 87, 88, 90, 92, 93, 98, 122, 130, 137, 140, 153, 179, 186, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 206, 208, 209, 210, 211, 214, 217, 218, 219, 222, 224, 228, 230, 232], "enum": [1, 130, 137, 210], "0xffffffffu": 1, "0xffffffffffffffffull": 1, "static_cast": [1, 35], "2": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 84, 88, 122, 131, 135, 148, 153, 155, 157, 159, 163, 164, 165, 167, 174, 175, 179, 182, 183, 184, 185, 186, 190, 196, 197, 199, 208, 217, 219, 221, 222, 223, 228, 230, 240, 241, 243], "int64_t": [1, 78, 85, 148, 150, 152, 190, 191], "kokkos_random": [1, 2, 214], "provid": [1, 72, 75, 76, 77, 78, 80, 84, 87, 89, 92, 93, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 130, 133, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 152, 153, 154, 161, 162, 163, 164, 171, 175, 178, 179, 180, 181, 182, 186, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 216, 219, 226, 227, 228, 229, 230, 233, 234, 238, 240, 241], "structur": [1, 4, 72, 76, 95, 98, 132, 186, 201, 205, 207, 209, 210, 231, 232, 234, 235, 239, 240, 243], "necessari": [1, 75, 76, 87, 92, 95, 146, 186, 195, 196, 200, 202, 206, 210, 211, 226, 230, 232, 235, 241], "pseudorandom": 1, "These": [1, 2, 76, 87, 88, 137, 152, 153, 186, 190, 192, 194, 197, 200, 203, 205, 207, 209, 210, 222, 226, 228, 229, 230, 233], "base": [1, 21, 36, 40, 76, 77, 81, 82, 84, 87, 95, 132, 161, 162, 190, 191, 194, 195, 200, 201, 203, 204, 206, 208, 209, 210, 217, 219, 226, 227, 229, 230, 234, 235, 238, 239, 240, 241, 243], "vigna": 1, "sebastiano": 1, "2014": [1, 205, 212], "an": [1, 2, 4, 11, 13, 14, 18, 20, 22, 24, 25, 28, 29, 33, 34, 43, 44, 58, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 85, 93, 95, 108, 116, 122, 124, 128, 130, 134, 135, 137, 138, 140, 145, 146, 147, 148, 150, 152, 153, 154, 157, 162, 163, 164, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 216, 218, 219, 226, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242], "experiment": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 87, 88, 94, 97, 128, 129, 138, 139, 140, 141, 163, 189, 194, 200, 201, 208, 214, 217, 222, 230, 232], "explor": [1, 87, 203, 226], "marsaglia": 1, "s": [1, 75, 77, 79, 81, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 130, 132, 147, 153, 164, 166, 177, 179, 185, 186, 190, 195, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 219, 223, 226, 230, 235, 237, 238, 239, 241], "scrambl": 1, "see": [1, 75, 76, 86, 87, 88, 91, 92, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 137, 138, 141, 146, 147, 149, 152, 153, 154, 161, 162, 163, 169, 172, 173, 186, 195, 197, 199, 200, 204, 205, 206, 209, 210, 211, 213, 217, 218, 222, 224, 230, 241], "http": [1, 84, 140, 212, 216, 219, 228], "arxiv": 1, "org": [1, 84, 140, 195, 212, 219], "ab": [1, 140, 190], "1402": 1, "6246": 1, "The": [1, 2, 4, 11, 12, 13, 14, 16, 19, 20, 21, 22, 26, 27, 30, 38, 39, 40, 41, 42, 45, 48, 61, 62, 63, 64, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 89, 90, 92, 95, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 140, 146, 147, 148, 149, 150, 152, 153, 154, 159, 161, 162, 163, 167, 168, 171, 174, 178, 183, 184, 185, 186, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 217, 218, 219, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 242], "themselv": [1, 95, 205, 206, 207, 226], "have": [1, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 70, 71, 75, 78, 82, 87, 88, 92, 95, 122, 130, 132, 133, 141, 145, 146, 153, 155, 156, 157, 158, 178, 182, 183, 184, 186, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 218, 219, 222, 226, 228, 229, 230, 232, 235, 238, 239, 240, 241], "two": [1, 2, 11, 12, 22, 34, 36, 39, 40, 41, 42, 46, 48, 65, 69, 75, 77, 78, 81, 87, 95, 122, 130, 132, 135, 137, 138, 152, 163, 179, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 219, 223, 226, 227, 229, 230, 232, 233, 234, 235, 241, 242], "compon": [1, 168, 182, 205, 225, 229], "state": [1, 72, 75, 81, 87, 134, 200, 206, 208, 210, 219], "pool": [1, 72, 200, 210], "actual": [1, 77, 130, 137, 149, 153, 154, 186, 193, 200, 202, 205, 206, 207, 210, 211, 217, 228, 229, 230], "A": [1, 2, 22, 34, 41, 46, 48, 69, 72, 73, 75, 76, 77, 78, 79, 81, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 133, 142, 143, 144, 145, 146, 147, 148, 151, 155, 156, 157, 158, 159, 160, 166, 177, 178, 179, 180, 181, 182, 185, 186, 193, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 219, 223, 226, 230, 233, 237, 239, 240, 241], "manag": [1, 72, 73, 75, 76, 79, 81, 83, 86, 87, 98, 128, 129, 161, 186, 195, 205, 211, 216, 219, 227, 235, 243], "so": [1, 2, 82, 87, 92, 95, 130, 193, 194, 195, 200, 201, 202, 204, 205, 206, 208, 209, 210, 213, 222, 227, 228, 230, 233, 237, 241], "each": [1, 2, 4, 11, 23, 30, 31, 32, 33, 62, 67, 68, 69, 72, 75, 76, 78, 82, 85, 87, 95, 140, 146, 147, 154, 155, 157, 159, 163, 164, 180, 181, 182, 186, 193, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 224, 226, 228, 229, 230, 232, 234, 235, 238, 240, 241], "activ": [1, 23, 24, 53, 56, 88, 195, 200, 206, 211, 217, 230], "abl": [1, 76, 95, 130, 137, 186, 187, 193, 200, 203, 205, 208, 210, 214, 235], "grab": 1, "its": [1, 4, 72, 75, 76, 77, 81, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 133, 138, 153, 163, 164, 167, 183, 186, 193, 194, 195, 197, 200, 201, 202, 203, 205, 206, 209, 210, 211, 219, 226, 227, 229, 230, 232, 239], "own": [1, 75, 163, 193, 209, 210, 211, 219, 226, 228, 235], "thi": [1, 2, 12, 13, 14, 19, 20, 25, 30, 33, 35, 43, 44, 45, 53, 57, 58, 60, 65, 75, 76, 77, 79, 81, 82, 87, 88, 92, 95, 122, 130, 133, 134, 135, 137, 140, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 168, 175, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 216, 217, 218, 219, 222, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242], "allow": [1, 75, 76, 78, 79, 81, 82, 86, 87, 95, 130, 132, 135, 137, 147, 149, 153, 154, 155, 157, 159, 178, 180, 181, 182, 186, 187, 193, 194, 195, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 226, 229, 236, 237, 239, 241], "which": [1, 2, 17, 20, 28, 29, 37, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 83, 84, 86, 87, 95, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 130, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 161, 163, 174, 175, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 226, 227, 230, 233, 235, 236, 237, 238, 239, 241], "independ": [1, 72, 100, 137, 154, 206, 210, 226, 230, 243], "between": [1, 11, 37, 54, 65, 69, 72, 76, 81, 82, 93, 98, 153, 163, 171, 178, 179, 186, 194, 195, 200, 203, 205, 208, 210, 218, 223, 226, 228, 234, 235, 236, 237], "note": [1, 12, 13, 14, 19, 20, 33, 37, 43, 44, 45, 57, 58, 65, 76, 77, 78, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 145, 146, 152, 153, 154, 163, 179, 186, 193, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 226, 230, 233, 237, 240, 241], "contrast": [1, 138, 151, 156, 158, 160, 167, 200, 210, 226], "curand": 1, "none": [1, 4, 23, 25, 32, 53, 56, 57, 127, 142, 143, 144, 191, 195, 203, 205, 230, 233, 241], "collect": [1, 153, 200, 203, 206, 207, 209, 226, 230, 235, 238], "i": [1, 2, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 114, 116, 118, 119, 122, 125, 127, 128, 129, 130, 145, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 167, 174, 178, 179, 182, 183, 184, 186, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 215, 219, 222, 223, 226, 230, 234, 235, 237, 239], "e": [1, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 75, 76, 79, 87, 88, 93, 122, 127, 128, 129, 130, 132, 134, 137, 139, 141, 145, 147, 148, 149, 153, 154, 155, 156, 157, 158, 162, 178, 179, 183, 184, 186, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 222, 223, 226, 228, 229, 230, 236, 241], "can": [1, 2, 4, 11, 21, 22, 25, 28, 30, 39, 40, 41, 42, 69, 72, 75, 76, 77, 78, 81, 84, 85, 87, 88, 95, 122, 130, 131, 132, 135, 137, 141, 146, 147, 150, 151, 152, 153, 154, 159, 160, 182, 183, 184, 186, 187, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 215, 216, 224, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 239, 241], "call": [1, 2, 11, 12, 13, 14, 17, 20, 21, 22, 28, 30, 33, 35, 36, 40, 42, 45, 46, 48, 51, 52, 55, 56, 67, 69, 74, 75, 77, 79, 85, 86, 87, 90, 95, 105, 122, 128, 129, 130, 132, 133, 134, 135, 136, 140, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 172, 174, 175, 176, 177, 178, 179, 183, 184, 186, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 230, 233, 235, 237, 241], "insid": [1, 2, 12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 81, 85, 87, 95, 145, 146, 147, 148, 151, 155, 156, 157, 158, 159, 160, 170, 194, 195, 200, 202, 205, 206, 210, 239, 240, 241, 242], "condit": [1, 13, 14, 20, 25, 30, 35, 53, 60, 76, 167, 186, 193, 200, 202, 205, 206, 219, 229, 237], "devic": [1, 72, 74, 75, 76, 80, 81, 82, 87, 88, 93, 130, 132, 137, 139, 140, 164, 167, 169, 172, 173, 178, 179, 186, 195, 201, 202, 203, 204, 206, 210, 211, 218, 229, 230, 231, 235, 236], "public": [1, 75, 76, 77, 79, 81, 82, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 130, 137, 147, 151, 153, 154, 156, 158, 160, 168, 170, 182, 192, 194, 199, 204, 206, 213, 223, 226, 235, 239, 241], "typedef": [1, 75, 76, 77, 79, 81, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 151, 152, 153, 154, 156, 158, 160, 168, 176, 180, 181, 182, 194, 197, 198, 199, 200, 202, 206, 210, 233, 237], "device_typ": [1, 75, 76, 77, 81, 87, 130, 137, 178, 186, 210], "generator_typ": 1, "rannum_typ": 1, "seed": [1, 72], "void": [1, 2, 4, 23, 30, 32, 53, 56, 57, 74, 75, 77, 80, 81, 82, 84, 85, 87, 95, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 136, 137, 139, 140, 145, 146, 147, 148, 150, 152, 153, 161, 162, 163, 165, 167, 168, 174, 175, 176, 179, 183, 184, 186, 190, 192, 193, 194, 199, 200, 202, 204, 206, 208, 210, 214, 218, 223, 233, 235, 236, 237, 239, 240, 241], "init": [1, 22, 34, 67, 72, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 147, 148, 199, 235], "num_stat": 1, "get_stat": 1, "free_stat": 1, "intial": 1, "us": [1, 2, 4, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 93, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 131, 132, 134, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 169, 172, 173, 177, 178, 183, 184, 185, 186, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 216, 217, 218, 219, 222, 223, 224, 226, 227, 228, 229, 230, 232, 235, 237, 238, 239, 241, 242], "establish": [1, 230, 234], "pool_siz": 1, "random_xorshift64": [1, 72], "serial": [1, 72, 85, 87, 88, 94, 150, 152, 195, 201, 203, 206, 208, 210, 222, 228, 230], "initi": [1, 2, 22, 34, 48, 67, 69, 72, 75, 76, 82, 83, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 131, 132, 133, 134, 136, 146, 147, 148, 164, 167, 168, 169, 172, 173, 174, 179, 182, 186, 187, 190, 191, 192, 195, 196, 198, 199, 200, 202, 204, 205, 206, 221, 223, 226, 228, 230, 236, 237, 241], "make": [1, 75, 76, 87, 95, 138, 153, 171, 186, 193, 194, 195, 197, 200, 204, 205, 206, 208, 211, 213, 219, 226, 228, 233, 235, 236, 239, 241], "process": [1, 89, 137, 195, 201, 207, 208, 209, 211, 216, 225, 230], "platform": [1, 83, 190, 191, 216, 227, 229, 238], "determinist": [1, 48, 69, 207], "request": [1, 75, 77, 130, 142, 143, 144, 147, 153, 154, 200, 201, 205, 207, 213, 217, 226, 227, 228, 230], "lock": [1, 202, 205, 207, 208, 210], "guarante": [1, 75, 76, 79, 93, 95, 130, 137, 146, 147, 148, 170, 186, 194, 195, 202, 205, 206, 207, 208, 236, 240], "ha": [1, 75, 76, 78, 79, 81, 87, 88, 95, 100, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 135, 137, 140, 146, 147, 148, 149, 162, 178, 186, 190, 191, 193, 195, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 219, 226, 229, 230, 232, 233, 239, 240, 241], "privat": [1, 79, 87, 153, 168, 194, 196, 199, 200, 206, 226, 235], "get": [1, 75, 87, 95, 98, 134, 153, 154, 182, 193, 200, 201, 202, 204, 205, 208, 209, 211, 213, 226, 228, 238, 240, 241], "cuda": [1, 72, 75, 85, 87, 88, 94, 137, 150, 152, 154, 163, 179, 200, 201, 203, 206, 207, 208, 210, 216, 217, 222, 228, 229, 230, 236, 237], "involv": [1, 87, 149, 229, 234], "atom": [1, 72, 76, 81, 83, 100, 101, 102, 103, 104, 105, 106, 107, 186, 200, 202, 205, 207, 221, 240, 243], "non": [1, 3, 18, 24, 33, 36, 37, 48, 63, 64, 69, 72, 73, 75, 76, 77, 79, 80, 82, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 135, 138, 161, 162, 179, 186, 192, 193, 195, 200, 205, 206, 207, 208, 210, 214, 217, 219, 228, 237, 239], "upon": [1, 84, 87, 130, 145, 162, 194, 203, 226], "complet": [1, 77, 95, 130, 145, 195, 196, 200, 205, 210, 211, 226, 230, 237, 240], "unlock": 1, "updat": [1, 72, 75, 82, 100, 101, 102, 103, 104, 105, 106, 107, 193, 195, 200, 206, 210, 222, 226, 228, 230, 235, 237, 240], "statu": 1, "onc": [1, 72, 95, 134, 135, 200, 201, 207, 210, 211, 217, 226, 235, 237], "again": [1, 87, 195, 202, 210, 211, 217, 230], "becom": [1, 59, 60, 79, 95, 137, 205, 226, 230, 234], "avail": [1, 74, 77, 81, 82, 87, 88, 98, 130, 132, 137, 138, 139, 140, 141, 154, 167, 169, 171, 172, 173, 190, 191, 195, 200, 201, 203, 205, 206, 208, 210, 211, 219, 226, 229, 230, 232, 234, 235], "within": [1, 2, 4, 79, 82, 93, 130, 135, 146, 147, 148, 150, 153, 195, 200, 205, 207, 210, 219, 233, 234, 235], "select": [1, 72, 74, 92, 132, 166, 185, 192, 201, 203, 205, 210, 222, 226, 229, 230, 240], "from": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 93, 95, 98, 119, 120, 122, 125, 130, 131, 132, 135, 137, 138, 139, 140, 141, 146, 147, 148, 152, 153, 154, 164, 167, 168, 171, 174, 175, 177, 178, 179, 182, 186, 187, 188, 190, 192, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 219, 222, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241], "next": [1, 226, 228, 230, 237, 240], "step": [1, 4, 200, 202, 203, 208, 210, 226, 228, 229, 230, 235], "develop": [1, 92, 146, 200, 203, 205, 207, 210, 213, 216, 222, 227, 228, 229, 230], "functor": [1, 2, 11, 12, 13, 14, 20, 21, 22, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 45, 48, 67, 69, 85, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 190, 191, 200, 202, 205, 210, 234, 235, 237, 239], "desir": [1, 13, 14, 20, 48, 67, 69, 77, 148, 163, 178, 195, 206, 210, 226, 228, 229, 230], "type": [1, 11, 12, 13, 14, 17, 20, 22, 28, 30, 32, 33, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 93, 95, 96, 98, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 130, 132, 137, 138, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 168, 174, 177, 178, 179, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 216, 219, 221, 223, 228, 230, 233, 234, 235, 238, 241], "devicetyp": [1, 130, 137], "respect": [1, 76, 122, 140, 171, 178, 179, 183, 184, 186, 197, 200, 205, 210, 219], "x": [1, 72, 139, 140, 182, 183, 184, 190, 192, 197, 202, 206, 208, 210, 216, 217, 223, 233, 237], "idx": [1, 233], "just": [1, 2, 75, 87, 88, 95, 130, 137, 149, 175, 179, 182, 193, 201, 206, 208, 210, 211, 213, 217, 228, 232, 235], "give": [1, 88, 95, 194, 201, 202, 206, 207, 208, 210, 219, 228], "argument": [1, 11, 12, 13, 14, 17, 20, 22, 28, 30, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 75, 76, 77, 79, 93, 95, 98, 131, 132, 133, 135, 140, 145, 147, 148, 153, 154, 156, 158, 160, 167, 177, 178, 179, 185, 186, 187, 190, 191, 192, 194, 199, 200, 206, 209, 210, 214, 218, 234, 236], "state_argu": 1, "state_idx": 1, "equidistribut": 1, "uint32_t": [1, 81, 190, 191, 214], "urand": 1, "For": [1, 2, 59, 75, 76, 95, 122, 130, 137, 138, 141, 152, 155, 157, 159, 163, 179, 185, 186, 193, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 219, 224, 226, 230, 234, 235, 236, 241], "32": [1, 2, 200, 202, 210, 230], "bit": [1, 72, 74, 87, 89, 186, 191, 204, 206, 208, 209, 210, 241], "unsign": [1, 74, 75, 76, 77, 80, 103, 106, 138, 186, 209, 210, 236], "integ": [1, 59, 60, 75, 76, 81, 85, 95, 138, 140, 150, 152, 185, 186, 200, 206, 208, 210, 233], "three": [1, 75, 87, 140, 145, 193, 194, 195, 200, 203, 205, 206, 208, 210, 211, 226, 229, 234], "option": [1, 72, 75, 76, 81, 85, 95, 130, 132, 146, 147, 148, 150, 186, 194, 195, 197, 200, 201, 202, 203, 206, 210, 211, 226, 228, 229, 230, 234, 236, 238, 239], "shown": [1, 55, 87, 122, 200, 205, 234], "first": [1, 4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 76, 79, 84, 87, 93, 95, 128, 130, 135, 153, 163, 164, 180, 185, 186, 190, 191, 192, 195, 197, 200, 202, 204, 205, 206, 210, 213, 214, 226, 233, 234, 237, 241], "default": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 84, 85, 88, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 127, 128, 129, 131, 132, 137, 142, 143, 144, 147, 150, 152, 153, 154, 164, 168, 176, 179, 180, 181, 182, 183, 184, 186, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 206, 211, 217, 223, 226, 230, 234, 238, 241], "over": [1, 34, 48, 67, 68, 72, 81, 85, 87, 95, 130, 150, 151, 153, 155, 156, 157, 158, 159, 160, 190, 191, 193, 197, 200, 206, 208, 209, 210, 211, 229, 232, 234, 239], "possibl": [1, 11, 17, 22, 28, 30, 35, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 87, 95, 133, 147, 154, 186, 194, 201, 202, 206, 207, 208, 209, 210, 219, 222, 226, 229, 235], "data": [1, 72, 74, 75, 76, 77, 79, 80, 81, 82, 95, 98, 130, 131, 132, 145, 164, 168, 174, 178, 179, 193, 197, 200, 201, 203, 204, 205, 206, 207, 208, 209, 216, 217, 219, 223, 226, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243], "defin": [1, 33, 42, 65, 72, 76, 78, 83, 87, 88, 93, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 150, 152, 153, 156, 158, 160, 161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 186, 188, 190, 191, 195, 198, 199, 200, 202, 205, 206, 210, 214, 219, 229, 230, 232, 233, 238, 242], "abov": [1, 86, 130, 138, 140, 193, 195, 200, 203, 206, 208, 209, 210, 219, 230, 234, 235, 240], "And": [1, 72, 108, 202, 212, 239], "also": [1, 11, 21, 25, 28, 30, 35, 42, 46, 51, 52, 56, 75, 76, 77, 78, 81, 84, 87, 95, 122, 130, 137, 141, 146, 147, 153, 154, 161, 162, 164, 169, 172, 173, 182, 186, 193, 194, 195, 196, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 222, 226, 227, 228, 229, 230, 234, 237, 239], "64": [1, 2, 206, 208, 210], "latter": [1, 95, 147, 186, 200, 205, 210, 230], "cover": [1, 76, 186, 206, 228, 229], "user": [1, 75, 76, 77, 81, 87, 90, 95, 128, 130, 131, 134, 135, 146, 147, 148, 150, 154, 161, 162, 186, 188, 195, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 226, 229, 235, 236, 240, 241, 242], "more": [1, 76, 77, 78, 87, 95, 122, 133, 137, 146, 149, 162, 186, 193, 195, 196, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 234, 239, 240], "other": [1, 46, 75, 76, 77, 78, 82, 87, 93, 95, 135, 137, 146, 147, 148, 153, 155, 156, 157, 158, 163, 167, 178, 179, 180, 181, 182, 193, 195, 200, 202, 204, 205, 206, 207, 208, 209, 211, 216, 217, 219, 222, 223, 226, 228, 230, 233, 235, 236, 239, 241], "scalar": [1, 75, 76, 77, 78, 82, 98, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 147, 168, 179, 186, 190, 191, 193, 196, 197, 199, 200, 202, 206, 218], "uint64_t": [1, 190, 191], "int32_t": [1, 190, 191, 192], "normal": [1, 72, 193, 195, 206, 210, 219, 230], "distribut": [1, 72, 203, 209, 212, 219, 230, 235], "view": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 93, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 133, 134, 135, 147, 148, 153, 166, 177, 178, 180, 181, 182, 183, 184, 185, 187, 193, 195, 197, 199, 200, 201, 203, 205, 206, 208, 214, 217, 221, 223, 230, 232, 233, 234, 235, 236, 237, 243], "fill": [1, 6, 21, 24, 25, 28, 30, 35, 39, 40, 42, 190, 191, 197, 200, 202, 204, 206, 210, 241], "includ": [1, 2, 22, 34, 67, 68, 76, 77, 87, 95, 122, 131, 132, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 148, 162, 165, 167, 171, 172, 174, 175, 178, 179, 182, 183, 184, 186, 188, 190, 191, 192, 194, 195, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 218, 219, 223, 226, 228, 229, 230, 233, 236, 238, 241, 242], "main": [1, 2, 76, 86, 98, 122, 131, 132, 133, 134, 135, 136, 146, 147, 148, 167, 170, 172, 174, 179, 182, 186, 190, 191, 192, 195, 198, 199, 201, 208, 210, 211, 223, 226, 233, 236, 237, 241], "argc": [1, 2, 76, 86, 122, 132, 133, 134, 135, 136, 146, 147, 148, 167, 172, 174, 179, 182, 186, 190, 191, 192, 198, 199, 201, 223, 241], "argv": [1, 2, 76, 86, 122, 132, 133, 134, 135, 136, 146, 147, 148, 167, 172, 174, 179, 182, 186, 190, 191, 192, 198, 199, 201, 223, 241], "scopeguard": [1, 72, 135, 214], "guard": [1, 133], "random_xorshift64_pool": [1, 2, 72], "random_pool": 1, "12345": 1, "total": [1, 77, 87, 154, 186, 193, 198, 199, 200, 201, 234], "1000000": [1, 179], "count": [1, 7, 27, 33, 62, 74, 76, 77, 87, 95, 138, 146, 147, 148, 151, 156, 158, 160, 186, 193, 200, 206, 209, 239], "parallel_reduc": [1, 72, 79, 87, 90, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 143, 145, 149, 151, 154, 155, 156, 157, 158, 159, 160, 197, 198, 199, 200, 206, 207, 214, 234, 235, 236], "approximate_pi": 1, "kokkos_lambda": [1, 2, 76, 77, 79, 81, 122, 130, 146, 147, 148, 149, 151, 153, 155, 156, 157, 158, 159, 160, 167, 174, 186, 193, 197, 198, 199, 200, 202, 204, 206, 210, 223, 232, 233, 234, 235, 237, 239, 241], "local_count": 1, "acquir": [1, 76, 87, 136, 186, 201, 202, 207, 210], "engin": [1, 195, 205, 207, 210, 212, 219], "auto": [1, 2, 4, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 78, 79, 81, 82, 95, 132, 133, 139, 141, 146, 147, 151, 154, 155, 156, 157, 158, 159, 160, 163, 166, 178, 179, 185, 192, 197, 200, 208, 209, 218, 232, 233, 234, 240, 241], "drand": 1, "y": [1, 190, 202, 208, 210, 233, 237], "do": [1, 2, 12, 13, 14, 19, 20, 24, 25, 33, 43, 44, 45, 46, 53, 56, 57, 58, 65, 69, 75, 83, 87, 95, 100, 101, 102, 130, 133, 134, 137, 145, 149, 172, 186, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 208, 209, 211, 213, 215, 218, 219, 226, 228, 233, 235, 236, 237, 239], "forget": 1, "releas": [1, 86, 87, 88, 134, 136, 174, 194, 195, 200, 203, 205, 222, 227, 228, 230], "printf": [1, 95, 97, 122, 146, 147, 148, 182, 190, 191, 197, 198, 199, 241], "pi": [1, 89, 139, 218], "f": [1, 87, 95, 140, 153, 154, 164, 214, 228, 233, 234, 240], "n": [1, 2, 18, 24, 31, 63, 64, 74, 75, 77, 81, 82, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 130, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 172, 174, 175, 179, 182, 183, 184, 186, 190, 197, 198, 199, 200, 202, 206, 208, 209, 210, 216, 236, 237, 239, 241], "4": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 82, 88, 130, 131, 137, 138, 139, 140, 141, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 165, 167, 169, 171, 172, 173, 174, 175, 182, 185, 186, 198, 199, 208, 209, 212, 217, 219, 221, 223, 226, 228, 230, 234, 236, 243], "dstviewtyp": 2, "srcviewtyp": 2, "copy_functor": 2, "permuteviewtyp": 2, "copy_permute_functor": 2, "binsort": [2, 214], "valuesviewtyp": 2, "values_range_begin": 2, "values_range_end": 2, "keyviewtyp": 2, "binop1d": 2, "binop3d": 2, "viewtyp": [2, 75, 130, 177, 178, 185, 186, 210], "size_t": [2, 59, 60, 75, 76, 77, 78, 79, 82, 87, 128, 129, 175, 180, 181, 182, 183, 184, 186, 190, 191, 192, 200, 206, 208, 209, 210, 233, 241], "begin": [2, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 72, 78, 80, 82, 87, 128, 129, 150, 151, 152, 154, 156, 158, 160, 210, 226, 230, 233, 234, 242], "parallel": [2, 12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 72, 77, 81, 83, 85, 87, 92, 93, 122, 130, 132, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 193, 195, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 216, 221, 232, 235, 237, 239, 240, 241, 243], "teampolici": [2, 12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 72, 76, 85, 87, 95, 130, 142, 143, 144, 146, 147, 148, 151, 153, 155, 156, 157, 158, 159, 160, 186, 197, 200, 202, 206], "kernel": [2, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 79, 82, 85, 88, 95, 146, 150, 152, 153, 154, 163, 174, 179, 186, 193, 195, 202, 205, 206, 207, 210, 211, 216, 217, 218, 230, 236, 240, 243], "perform": [2, 4, 48, 67, 69, 76, 77, 79, 85, 88, 90, 95, 109, 110, 111, 112, 121, 122, 124, 147, 148, 153, 154, 174, 186, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 210, 212, 217, 219, 223, 226, 227, 229, 233, 234, 238, 243], "teamthreadrang": [2, 72, 85, 87, 146, 147, 159, 160, 197, 200, 202], "threadvectorrang": [2, 72, 85, 87, 146, 147, 148, 200], "kokkos_nestedsort": 2, "teammemb": [2, 95, 154, 200], "sort_team": 2, "t": [2, 19, 23, 24, 25, 35, 53, 54, 55, 56, 72, 75, 84, 87, 95, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 130, 141, 145, 147, 153, 154, 163, 168, 175, 178, 183, 184, 186, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 206, 207, 208, 209, 211, 214, 219, 222, 226, 228, 240], "compar": [2, 12, 21, 26, 27, 36, 38, 39, 40, 41, 42, 61, 62, 76, 77, 100, 101, 132, 186, 206, 208, 210, 222, 228, 230], "comp": [2, 36, 37, 38, 39, 40, 41], "valueviewtyp": 2, "sort_by_key_team": 2, "keyview": 2, "valueview": 2, "sort_thread": 2, "sort_by_key_thread": 2, "intern": [2, 12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 81, 82, 86, 87, 88, 132, 133, 154, 195, 200, 201, 202, 226, 234], "entir": [2, 75, 87, 151, 182, 206, 207, 209, 211, 226, 229, 230, 239, 241], "thei": [2, 75, 78, 87, 88, 95, 130, 133, 134, 137, 139, 146, 149, 163, 179, 193, 194, 200, 201, 204, 206, 207, 208, 210, 222, 226, 227, 228, 229, 230, 232, 235, 239, 241, 242], "mai": [2, 4, 75, 76, 77, 78, 79, 82, 87, 88, 95, 129, 130, 133, 134, 135, 146, 147, 148, 154, 163, 165, 171, 172, 174, 186, 190, 191, 193, 194, 195, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 213, 217, 218, 219, 222, 224, 226, 228, 230, 234, 235, 237, 238, 239, 240], "top": [2, 95, 194, 195, 200, 219, 224, 230], "lambda": [2, 88, 95, 145, 146, 147, 200, 202, 217, 233, 234, 239], "vector": [2, 72, 73, 85, 88, 146, 147, 148, 151, 154, 157, 158, 159, 160, 163, 190, 191, 192, 197, 206, 207, 210, 214, 217, 233, 238], "lane": [2, 72, 85, 151, 157, 158, 159, 160, 190, 200, 207, 208], "either": [2, 75, 76, 80, 81, 85, 95, 114, 116, 118, 132, 146, 147, 153, 179, 183, 184, 186, 192, 194, 195, 198, 199, 200, 201, 206, 210, 211, 219, 228, 230, 240, 242], "loop": [2, 85, 88, 95, 151, 152, 193, 202, 205, 208, 210, 217, 232, 234, 237, 239, 243], "sort_by_kei": 2, "while": [2, 21, 46, 72, 76, 87, 95, 137, 151, 184, 186, 193, 194, 195, 196, 200, 202, 203, 204, 205, 208, 209, 210, 211, 219, 230, 241], "simultan": [2, 193], "appli": [2, 11, 30, 31, 39, 40, 41, 66, 69, 87, 95, 147, 153, 193, 195, 198, 199, 206, 219, 227, 241], "same": [2, 17, 18, 24, 28, 29, 31, 34, 37, 39, 41, 47, 51, 52, 55, 56, 64, 67, 68, 75, 76, 77, 78, 82, 84, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 129, 130, 133, 135, 140, 146, 147, 148, 153, 154, 155, 156, 157, 158, 163, 175, 178, 179, 186, 193, 195, 200, 201, 202, 205, 206, 208, 209, 210, 211, 228, 229, 230, 234, 235, 236, 238, 240, 241], "permut": 2, "element": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 82, 122, 135, 147, 148, 163, 164, 166, 171, 179, 180, 181, 182, 184, 186, 200, 202, 207, 210, 231, 234, 235, 238], "It": [2, 71, 75, 76, 77, 78, 87, 129, 130, 131, 132, 133, 147, 151, 172, 175, 186, 190, 191, 193, 194, 195, 200, 202, 205, 206, 208, 209, 210, 216, 218, 219, 226, 230, 238, 239], "equival": [2, 39, 40, 41, 70, 71, 78, 93, 130, 153, 185, 186, 200, 206, 208, 209, 210, 233, 238], "kei": [2, 81, 208, 235], "tupl": [2, 150, 238], "accord": [2, 35, 87, 103, 105, 106, 146, 147, 148], "commonli": [2, 205], "entri": [2, 75, 77, 80, 95, 198, 199, 202, 206, 209, 226, 232], "row": [2, 80, 197, 202, 209, 210], "cr": [2, 72, 80], "compress": [2, 80, 210, 235], "spars": [2, 210, 216, 229, 243], "matrix": [2, 197, 209, 210], "requir": [2, 75, 76, 77, 81, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 137, 138, 151, 155, 156, 157, 158, 159, 160, 178, 186, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 210, 211, 214, 216, 219, 225, 228, 230, 231, 234, 237, 238, 240], "extent": [2, 75, 76, 77, 78, 80, 130, 155, 157, 159, 179, 180, 181, 182, 183, 184, 185, 186, 193, 206, 210, 223, 226, 232, 233, 239], "version": [2, 12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 72, 76, 84, 92, 130, 131, 132, 133, 135, 139, 140, 165, 167, 171, 186, 194, 195, 204, 206, 208, 211, 217, 219, 223, 226, 228, 229, 230, 241], "take": [2, 76, 77, 78, 85, 87, 93, 95, 103, 105, 106, 130, 135, 137, 139, 147, 149, 154, 180, 181, 182, 193, 194, 199, 200, 201, 205, 206, 207, 208, 210, 214, 218, 223, 228, 230, 232, 234, 237, 243], "object": [2, 11, 22, 30, 33, 75, 76, 81, 86, 87, 88, 108, 132, 133, 134, 135, 136, 137, 138, 151, 153, 161, 162, 182, 186, 192, 195, 199, 201, 202, 206, 208, 210, 214, 219, 239, 241], "order": [2, 16, 36, 37, 41, 44, 49, 52, 57, 58, 74, 76, 85, 86, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 136, 146, 147, 148, 150, 151, 152, 156, 158, 160, 182, 186, 193, 194, 198, 200, 201, 202, 205, 206, 207, 209, 210, 211, 216, 226, 229, 230, 232, 235, 236, 237, 239], "oper": [2, 4, 11, 12, 13, 14, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 51, 52, 53, 54, 56, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 87, 95, 97, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 130, 133, 137, 140, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 168, 179, 180, 181, 182, 186, 188, 192, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 210, 218, 221, 223, 230, 231, 235, 240, 241, 243], "should": [2, 4, 12, 17, 30, 55, 59, 60, 74, 75, 87, 93, 95, 119, 120, 122, 125, 130, 134, 135, 137, 146, 148, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205, 209, 210, 211, 214, 222, 226, 228, 230, 235, 241], "member": [2, 75, 77, 79, 81, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 131, 132, 141, 146, 147, 148, 153, 155, 156, 157, 158, 168, 180, 181, 182, 187, 192, 194, 197, 199, 200, 204, 206, 210, 224, 226, 229, 230, 239, 240, 241], "accept": [2, 30, 31, 36, 37, 39, 40, 41, 69, 85, 87, 150, 152, 164, 190, 191, 200, 201, 203, 210, 219, 228, 230, 234], "b": [2, 11, 12, 21, 22, 34, 36, 39, 40, 41, 42, 48, 69, 76, 78, 145, 146, 155, 156, 157, 158, 159, 160, 168, 175, 178, 186, 190, 191, 192, 200, 202, 206, 208, 210, 219, 223, 240], "bool": [2, 12, 13, 14, 17, 20, 21, 28, 35, 36, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 74, 75, 76, 77, 79, 81, 82, 84, 87, 93, 101, 130, 131, 132, 137, 148, 160, 167, 180, 181, 182, 186, 191, 192, 199, 206, 208, 214, 223, 235], "true": [2, 12, 13, 14, 17, 20, 21, 28, 35, 36, 37, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 82, 93, 95, 101, 130, 131, 132, 135, 137, 155, 156, 157, 158, 159, 160, 163, 175, 179, 180, 181, 185, 186, 191, 192, 193, 195, 199, 201, 202, 208, 210, 223], "onli": [2, 4, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 93, 95, 130, 133, 137, 145, 146, 147, 148, 153, 164, 169, 172, 179, 186, 187, 190, 192, 193, 195, 196, 197, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 217, 219, 222, 223, 226, 228, 229, 230, 232, 235, 236, 241], "goe": [2, 210, 226], "befor": [2, 35, 69, 74, 75, 76, 86, 100, 101, 102, 133, 134, 135, 136, 153, 172, 179, 186, 200, 202, 203, 204, 205, 206, 209, 210, 217, 226, 229, 235, 237, 240, 241], "ascend": 2, "descend": [2, 36, 37], "intcompar": 2, "kokkos_funct": [2, 12, 13, 14, 19, 20, 33, 43, 44, 45, 48, 57, 58, 65, 67, 69, 139, 140, 141, 146, 165, 167, 174, 175, 204, 206, 208, 210, 214, 218, 239, 241], "constexpr": [2, 4, 35, 48, 67, 69, 74, 75, 76, 77, 79, 81, 82, 84, 88, 137, 138, 139, 141, 164, 166, 175, 180, 181, 182, 186, 190, 191, 208, 217], "preced": [2, 230], "larger": [2, 74, 76, 77, 154, 171, 182, 186, 193, 210, 213], "final": [2, 72, 76, 79, 83, 87, 131, 132, 133, 135, 136, 146, 147, 148, 160, 167, 172, 174, 179, 182, 184, 186, 190, 191, 192, 196, 198, 199, 200, 203, 206, 210, 214, 223, 232, 235, 236, 241], "barrier": [2, 153, 207, 237], "access": [2, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 87, 89, 94, 119, 120, 125, 129, 130, 132, 137, 153, 178, 179, 187, 193, 197, 200, 202, 204, 205, 206, 207, 209, 211, 212, 228, 230, 232, 234, 236, 237, 238, 239, 241, 243], "immedi": [2, 146, 195, 203, 210, 211, 237], "after": [2, 11, 15, 17, 18, 22, 24, 34, 47, 49, 50, 51, 52, 54, 55, 60, 66, 67, 68, 70, 71, 75, 77, 86, 87, 95, 132, 134, 135, 153, 172, 179, 183, 184, 192, 193, 195, 201, 202, 203, 205, 206, 207, 209, 210, 211, 226, 227, 228, 229, 230, 236, 237, 240], "both": [2, 72, 75, 76, 79, 82, 87, 95, 108, 117, 118, 137, 163, 164, 179, 186, 193, 194, 197, 200, 201, 202, 203, 205, 206, 208, 210, 216, 226, 227, 228, 229, 230, 234, 235], "global": [2, 83, 87, 151, 153, 156, 158, 160, 200, 210, 237], "scratch": [2, 76, 130, 153, 154, 186, 205, 207, 243], "memori": [2, 72, 73, 75, 76, 77, 79, 81, 82, 83, 88, 93, 94, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 145, 153, 154, 178, 180, 181, 182, 183, 184, 186, 187, 190, 195, 197, 199, 203, 204, 208, 209, 211, 212, 216, 217, 218, 230, 235, 236, 237, 238, 240, 241, 243], "space": [2, 4, 11, 15, 16, 17, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 63, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 90, 96, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 158, 160, 163, 178, 179, 183, 184, 186, 187, 197, 199, 200, 201, 202, 211, 216, 228, 230, 234, 235, 237, 238, 239, 240, 243], "biton": 2, "algorithm": [2, 81, 87, 88, 90, 171, 193, 195, 200, 201, 203, 205, 206, 207, 210, 216, 230, 232, 237, 238], "stabl": [2, 226], "mean": [2, 22, 34, 67, 68, 76, 81, 93, 95, 130, 133, 137, 145, 146, 149, 186, 188, 195, 200, 202, 205, 206, 207, 208, 209, 210, 211, 213, 217, 219, 235, 242], "repeat": [2, 200, 228, 237, 240], "input": [2, 22, 34, 67, 68, 76, 77, 79, 95, 147, 148, 195, 197, 201, 202, 206, 210, 230, 234, 235], "correspond": [2, 76, 79, 87, 118, 122, 135, 164, 180, 181, 182, 185, 186, 200, 206, 207, 210, 227, 228, 239], "might": [2, 88, 130, 170, 192, 193, 200, 202, 203, 204, 205, 206, 209, 210, 234, 241, 242], "ani": [2, 27, 39, 40, 41, 75, 81, 83, 84, 85, 87, 88, 93, 95, 98, 128, 129, 130, 132, 135, 137, 140, 146, 150, 152, 163, 170, 179, 186, 191, 194, 195, 196, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 219, 226, 228, 229, 230, 236, 241], "execspac": [2, 79, 130, 152, 163, 178, 179, 210], "defaultexecutionspac": [2, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56, 76, 81, 85, 94, 127, 128, 129, 149, 150, 152, 163, 169, 186, 200, 201, 235], "teampol": 2, "teammem": 2, "typenam": [2, 4, 19, 20, 48, 63, 64, 74, 75, 77, 79, 81, 84, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 152, 153, 155, 157, 159, 174, 178, 179, 183, 184, 202, 210, 233, 238], "member_typ": [2, 72, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 197, 200, 202], "10": [2, 12, 24, 34, 48, 69, 77, 78, 82, 86, 133, 134, 135, 148, 179, 186, 195, 200, 206, 210, 212, 221, 222, 228, 230, 241], "rand_pool": 2, "13718": 2, "fill_random": [2, 72], "100": [2, 75, 88, 122, 148, 200, 202, 206, 207, 210, 236], "parallel_for": [2, 72, 76, 77, 79, 81, 87, 90, 95, 130, 142, 145, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 167, 174, 186, 193, 200, 202, 204, 205, 206, 207, 210, 223, 232, 233, 234, 235, 236, 237, 239, 241], "whole": [2, 153, 193, 195, 197, 209, 219, 239], "a_row_i": 2, "subview": [2, 72, 75, 76, 78, 79, 98, 166, 179, 182, 184, 186, 221, 234, 243], "league_rank": [2, 146, 147, 151, 153, 155, 156, 157, 158, 159, 160, 197, 200], "ahost": 2, "create_mirror_view_and_copi": [2, 178], "hostspac": [2, 72, 75, 87, 94, 178, 179, 182, 186, 199, 202, 210, 233], "cout": [2, 130, 136], "j": [2, 80, 151, 157, 160, 163, 200, 202, 205, 206, 210, 212, 234, 237, 239], "vectorlen": 2, "vector_length_max": [2, 154], "now": [2, 87, 130, 137, 149, 163, 179, 186, 192, 194, 200, 202, 204, 205, 208, 210, 214, 232, 241], "column": [2, 80, 202, 206, 209, 210, 230], "a_col_i": 2, "deep_copi": [2, 72, 74, 75, 76, 93, 98, 130, 137, 145, 178, 186, 193, 202, 210, 237], "na": [2, 222, 230], "9": [2, 12, 34, 48, 69, 78, 88, 195, 209, 217, 218, 219, 221, 222, 228, 230], "38": 2, "68": 2, "74": [2, 212], "76": 2, "83": 2, "89": 2, "91": 2, "95": 2, "19": [2, 195, 222], "41": 2, "55": 2, "65": 2, "78": 2, "92": 2, "99": [2, 200], "13": [2, 4, 23, 24, 39, 40, 53, 56, 147, 210, 221, 228], "16": [2, 77, 195, 202, 222, 230], "17": [2, 84, 88, 133, 141, 147, 195, 222, 228, 229], "40": [2, 78], "44": [2, 228], "54": 2, "96": [2, 202], "18": [2, 195, 211, 212, 222, 226, 228], "77": 2, "80": [2, 182], "82": 2, "94": 2, "14": [2, 23, 88, 141, 195, 221, 222, 230], "34": [2, 53, 56, 153], "35": 2, "45": 2, "46": 2, "47": 2, "52": 2, "58": 2, "6": [2, 11, 12, 13, 14, 19, 20, 21, 22, 26, 27, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 57, 58, 61, 62, 65, 66, 68, 69, 70, 71, 76, 77, 88, 139, 141, 148, 155, 157, 159, 179, 186, 206, 217, 219, 221, 222, 226, 228, 243], "25": 2, "37": 2, "51": 2, "81": 2, "3": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 87, 88, 131, 132, 133, 135, 139, 140, 141, 148, 150, 152, 153, 155, 157, 159, 171, 172, 175, 177, 179, 182, 183, 184, 185, 186, 196, 197, 198, 211, 212, 213, 216, 217, 219, 221, 223, 226, 228, 230, 234, 238, 243], "5": [2, 11, 12, 13, 14, 19, 20, 21, 22, 25, 26, 27, 28, 30, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 57, 58, 61, 62, 65, 66, 68, 69, 70, 71, 76, 77, 88, 141, 150, 152, 153, 155, 157, 159, 166, 168, 177, 179, 182, 185, 186, 197, 200, 209, 212, 217, 218, 219, 221, 222, 223, 228, 241, 243], "20": [2, 78, 88, 89, 130, 137, 138, 139, 149, 182, 195, 211, 215, 222, 230], "33": [2, 212], "39": 2, "60": [2, 210], "97": 2, "7": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 72, 76, 77, 88, 131, 132, 133, 135, 140, 171, 186, 195, 197, 205, 209, 211, 217, 218, 219, 221, 222, 223, 226, 228, 230, 243], "8": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 88, 132, 135, 152, 154, 155, 157, 159, 180, 181, 182, 186, 193, 195, 201, 205, 206, 207, 210, 217, 218, 219, 221, 222, 228, 230, 238, 243], "15": [2, 4, 21, 25, 28, 30, 35, 42, 153, 177, 185, 206, 221], "31": [2, 78], "42": [2, 130, 149, 235], "86": 2, "29": [2, 195, 222], "56": 2, "63": 2, "90": [2, 209, 226, 233], "iter": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 82, 85, 87, 146, 147, 148, 150, 152, 154, 186, 200, 205, 206, 207, 208, 210, 214, 223, 232, 234, 237], "minimum": [3, 72, 77, 97, 103, 105, 106, 108, 115, 116, 117, 118, 119, 120, 147, 148, 195, 196, 197, 222, 226], "modifi": [3, 4, 11, 12, 13, 14, 17, 20, 22, 24, 28, 30, 32, 35, 36, 40, 45, 46, 48, 49, 51, 52, 55, 56, 59, 63, 67, 69, 75, 147, 148, 190, 191, 193, 194, 200, 202, 219, 228, 238], "sequenc": [3, 26, 61, 74, 89, 200, 205, 207], "numer": [3, 83, 139, 140, 195, 203, 205, 211, 230, 234, 239], "partit": [3, 35, 47, 214], "kokkos_stdalgorithm": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 214], "datatyp": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 75, 76, 77, 79, 122, 186, 190, 223, 233, 238], "properti": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 76, 146, 147, 148, 154, 178, 183, 184, 186, 205, 206, 209, 210], "qualifi": [4, 87, 214, 222, 241], "past": [4, 16, 74, 82, 86, 87], "reason": [4, 95, 131, 204, 206, 207, 208, 210, 211, 219, 226, 236, 239, 241], "taken": [4, 194, 197, 228], "becaus": [4, 140, 163, 175, 202, 204, 205, 206, 208, 210, 211, 226, 237, 241], "we": [4, 39, 40, 41, 76, 84, 87, 95, 133, 140, 179, 186, 192, 194, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 222, 228, 232, 233, 235, 236, 241], "chang": [4, 72, 75, 81, 133, 153, 170, 186, 194, 203, 206, 208, 209, 210, 211, 219, 223, 225, 226, 227, 228, 230, 236, 241], "itself": [4, 76, 77, 95, 130, 137, 149, 182, 186, 193, 195, 197, 203, 205, 209, 210, 211, 228, 239, 240], "without": [4, 72, 75, 77, 86, 87, 95, 132, 145, 147, 170, 179, 183, 184, 194, 195, 196, 208, 209, 210, 211, 214, 219, 222, 234, 236, 237, 240, 241], "dereferenc": [4, 11, 22, 30, 31, 86, 239], "must": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 81, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 129, 132, 134, 135, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 162, 178, 183, 184, 185, 186, 194, 195, 196, 198, 199, 200, 201, 202, 205, 206, 209, 210, 211, 219, 226, 227, 228, 229, 230, 234, 235, 237, 240], "done": [4, 37, 54, 69, 87, 95, 137, 195, 200, 201, 208, 210, 211, 226, 228, 235], "execut": [4, 11, 15, 16, 17, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 63, 66, 67, 69, 70, 71, 72, 76, 79, 82, 83, 86, 87, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 122, 127, 128, 129, 132, 134, 135, 136, 137, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 168, 169, 172, 173, 178, 179, 184, 186, 187, 192, 193, 201, 202, 203, 208, 211, 216, 217, 219, 226, 229, 230, 234, 239, 240, 241, 243], "rank": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 82, 85, 87, 132, 146, 147, 150, 153, 155, 157, 159, 177, 179, 182, 183, 184, 185, 186, 200, 201, 210, 211, 214, 223, 233, 234, 235], "layoutleft": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 78, 82, 98, 179, 183, 184, 186, 202, 210, 223, 234], "layoutright": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 98, 179, 183, 184, 186, 202, 206, 209, 210, 234], "layoutstrid": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 76, 98, 186, 209, 210, 233], "ke": [4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56], "view_typ": [4, 21, 25, 28, 30, 35, 42, 75, 177], "proper": [4, 86, 195, 202, 211], "content": [4, 72, 75, 132, 147, 148, 164, 183, 184, 202, 204, 206, 210, 219, 235, 237, 240, 241], "itc": 4, "read": [4, 11, 21, 22, 67, 68, 104, 130, 193, 202, 205, 206, 209, 210, 236], "iteratortyp": [4, 12, 13, 14, 19, 20, 23, 24, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 52, 53, 56, 59, 62, 63, 64, 69, 70], "difference_typ": [4, 19, 20, 63, 64, 84], "last": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 75, 76, 82, 135, 176, 181, 186, 200, 201, 202, 205, 209, 210, 226, 230], "need": [4, 28, 30, 76, 77, 84, 87, 95, 129, 130, 133, 138, 140, 147, 148, 163, 179, 186, 194, 195, 196, 200, 201, 202, 203, 204, 206, 208, 209, 211, 226, 227, 228, 230, 235, 237, 238], "go": [4, 86, 146, 147, 148, 150, 152, 153, 154, 194, 195, 200, 205, 209, 226, 228], "calcul": [4, 142, 143, 144, 154, 182, 200, 202, 210, 233, 239], "neg": [4, 18, 24, 33, 63, 64, 135, 192, 193, 208], "it1": [4, 25, 28], "it2": [4, 25, 28], "stepsa": 4, "equal": [4, 7, 12, 19, 25, 26, 27, 33, 38, 43, 44, 49, 50, 53, 54, 58, 61, 62, 65, 71, 76, 93, 100, 101, 132, 163, 185, 186, 190, 191, 201], "stepsb": 4, "swap": [4, 59, 65, 175, 200], "point": [4, 25, 28, 75, 76, 77, 79, 82, 87, 95, 130, 135, 137, 140, 151, 167, 186, 194, 195, 204, 205, 208, 209, 210, 217, 226, 230, 234, 235, 236, 241], "current": [4, 12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 74, 76, 77, 81, 87, 95, 100, 101, 130, 137, 140, 163, 168, 186, 190, 191, 195, 200, 206, 207, 208, 209, 210, 211, 216, 226, 229, 230, 235], "api": [4, 17, 55, 81, 88, 134, 135, 153, 170, 201, 213, 216, 224, 234, 240], "doe": [4, 47, 75, 77, 81, 87, 92, 95, 127, 132, 145, 147, 148, 167, 175, 186, 194, 195, 201, 202, 204, 205, 209, 210, 211, 219, 222, 223, 226, 229, 230], "fenc": [4, 72, 87, 90, 130, 137, 146, 147, 153, 163, 184, 186, 205, 210, 211, 237, 241], "min_el": [5, 39, 41, 171], "max_el": [5, 171], "minmax_el": [5, 171], "copi": [6, 11, 16, 17, 18, 23, 24, 46, 50, 51, 54, 55, 58, 60, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 93, 95, 98, 133, 137, 146, 153, 154, 163, 168, 178, 180, 181, 182, 184, 186, 196, 198, 199, 202, 204, 205, 206, 211, 218, 219, 223, 228, 230, 235, 237, 239, 241], "copy_if": 6, "copy_n": 6, "copy_backward": 6, "move": [6, 44, 49, 52, 76, 77, 81, 133, 137, 153, 154, 180, 181, 182, 186, 194, 204, 223, 231, 241], "move_backward": 6, "fill_n": 6, "transform": [6, 67, 68, 69, 207, 219], "generate_n": 6, "remov": [6, 52, 88, 131, 135, 139, 140, 141, 170, 194, 201, 214, 217, 226, 228], "remove_if": 6, "remove_copi": [6, 51], "remove_copy_if": 6, "replac": [6, 35, 46, 54, 55, 56, 89, 131, 132, 141, 195, 201, 202, 206, 214, 242], "replace_if": [6, 17, 55], "replace_copi": [6, 55], "replace_copy_if": 6, "swap_rang": 6, "revers": [6, 16, 44, 58, 74, 136, 138], "reverse_copi": 6, "rotat": [6, 60, 138], "rotate_copi": 6, "shift_left": [6, 64], "shift_right": 6, "uniqu": [6, 76, 77, 130, 145, 186, 195, 201, 205, 211, 243], "unique_copi": 6, "adjacent_find": 7, "count_if": 7, "all_of": [7, 191, 208], "any_of": [7, 191, 208], "none_of": [7, 191, 208], "find": [7, 28, 37, 39, 40, 41, 74, 81, 82, 87, 138, 193, 195, 196, 197, 204, 206, 211, 215, 216, 217, 226, 241], "find_if": [7, 29], "find_if_not": 7, "find_end": 7, "find_first_of": 7, "for_each": [7, 31], "for_each_n": [7, 27, 62], "lexicographical_compar": 7, "mismatch": [7, 61, 210], "search": [7, 12, 13, 14, 19, 20, 25, 26, 27, 35, 45, 53, 62, 74, 81, 132, 201, 240], "search_n": 7, "adjacent_differ": 8, "reduc": [8, 69, 72, 82, 83, 87, 95, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 130, 147, 148, 153, 196, 200, 203, 205, 207, 209, 210], "exclusive_scan": [8, 34, 67], "inclusive_scan": 8, "transform_reduc": 8, "transform_exclusive_scan": [8, 68], "transform_inclusive_scan": 8, "is_partit": 9, "partition_point": 9, "partition_copi": 9, "is_sort": [10, 37, 82], "is_sorted_until": 10, "executionspac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 93, 130, 137, 150, 152, 163, 179, 200, 202, 236], "inputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 46, 51, 54, 55, 67, 68], "outputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 54, 55, 67, 68], "exespac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "first_from": [11, 15, 16, 17, 18, 22, 34, 50, 51, 54, 55, 60, 66, 67, 68, 71], "last_from": [11, 15, 16, 17, 22, 34, 50, 51, 54, 55, 60, 66, 67, 68, 71], "first_dest": [11, 22, 34, 67, 68], "binaryop": [11, 22, 48], "bin_op": [11, 22, 34, 68], "string": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 87, 128, 132, 133, 135, 145, 146, 147, 148, 161, 162, 165, 186, 187, 195, 201, 210, 214, 242], "label": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 87, 128, 130, 137, 145, 146, 147, 148, 161, 162, 178, 182, 183, 184, 186, 187, 210, 214, 228, 230], "datatype1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "datatype2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "view_from": [11, 15, 16, 17, 18, 22, 34, 46, 50, 51, 54, 55, 60, 63, 67, 68], "view_dest": [11, 22, 34, 50, 51, 60, 67, 68], "written": [11, 22, 34, 67, 68, 130, 137, 200, 202, 205, 219, 227, 239], "second": [11, 36, 38, 40, 42, 72, 74, 93, 95, 135, 145, 163, 164, 176, 185, 190, 191, 192, 193, 197, 200, 202, 204, 205, 206, 210, 241], "comput": [11, 22, 34, 37, 59, 67, 68, 138, 147, 195, 197, 198, 199, 200, 203, 206, 207, 208, 210, 211, 212, 217, 219, 226, 229, 233, 234, 239], "differ": [11, 73, 75, 76, 80, 81, 82, 87, 88, 95, 98, 179, 194, 195, 197, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 219, 226, 228, 230, 235, 237, 241], "adjac": 11, "pair": [11, 12, 22, 36, 40, 41, 42, 46, 66, 69, 72, 74, 81, 92, 171, 177, 185, 197, 209, 214, 230], "write": [11, 22, 34, 58, 66, 67, 68, 84, 95, 130, 137, 195, 196, 200, 203, 205, 206, 208, 209, 210, 216, 219, 226, 230], "them": [11, 58, 87, 130, 193, 194, 195, 200, 202, 204, 206, 207, 208, 210, 226, 235, 241], "binari": [11, 12, 21, 22, 26, 27, 34, 36, 37, 39, 40, 41, 48, 61, 62, 66, 69, 70, 71, 72, 108, 122, 194, 197, 206, 210, 217], "instanc": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 28, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 60, 65, 66, 69, 70, 71, 72, 75, 76, 79, 87, 93, 95, 130, 137, 145, 152, 154, 163, 179, 183, 184, 186, 187, 192, 194, 197, 204, 206, 209, 210, 239, 241], "name": [11, 15, 16, 18, 22, 23, 24, 32, 34, 35, 36, 37, 39, 40, 41, 46, 47, 48, 49, 50, 52, 53, 54, 59, 60, 63, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 87, 93, 95, 130, 132, 137, 146, 147, 148, 149, 153, 186, 193, 194, 195, 198, 200, 201, 205, 214, 216, 217, 219, 230, 232, 233, 236, 241, 242], "implement": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 46, 47, 48, 49, 50, 52, 53, 54, 59, 60, 63, 66, 67, 68, 69, 70, 71, 73, 76, 82, 85, 89, 92, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 133, 138, 140, 141, 147, 150, 151, 152, 156, 158, 160, 161, 162, 164, 166, 178, 185, 186, 190, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 226, 227, 230, 233, 237, 240, 241], "debug": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 88, 128, 146, 147, 148, 186, 194, 195, 200, 210, 216, 217, 229, 230, 236], "purpos": [11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 85, 87, 95, 150, 152, 186, 203, 205, 207, 209, 210, 213, 216, 219, 226], "adjacent_difference_iterator_api_default": 11, "adjacent_difference_view_api_default": 11, "_from": [11, 22, 71], "repres": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 74, 76, 85, 95, 130, 135, 137, 138, 149, 168, 185, 186, 190, 205, 208, 209, 210, 219, 223], "valid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 28, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 79, 81, 83, 84, 93, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 129, 130, 132, 133, 146, 147, 148, 154, 185, 186, 187, 190, 192, 195, 200, 202, 205, 206, 207, 210], "check": [11, 15, 16, 21, 22, 23, 25, 30, 32, 35, 36, 40, 46, 48, 49, 50, 53, 54, 59, 60, 63, 69, 70, 71, 81, 84, 88, 130, 132, 137, 138, 167, 197, 201, 202, 210, 211, 217, 226, 229, 230, 234], "mode": [11, 15, 16, 21, 22, 23, 25, 30, 32, 35, 36, 40, 46, 48, 49, 50, 53, 54, 59, 60, 63, 69, 70, 71, 194, 202, 207, 208, 222, 228], "pass": [11, 12, 13, 14, 17, 20, 22, 23, 24, 26, 27, 28, 30, 35, 36, 39, 40, 41, 45, 46, 48, 51, 52, 55, 56, 61, 62, 67, 69, 72, 74, 76, 77, 78, 79, 95, 130, 131, 132, 133, 135, 139, 185, 195, 201, 202, 203, 206, 209, 210, 211, 222, 228, 229, 230, 234, 235], "callabl": [11, 22, 48, 67, 69, 136, 167, 186, 190, 191, 194], "value_typ": [11, 12, 13, 14, 17, 20, 22, 28, 30, 32, 33, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 147, 148, 168, 179, 186, 190, 191, 197, 199, 206, 223, 235, 237], "conform": [11, 12, 13, 14, 20, 22, 28, 30, 33, 35, 36, 40, 45, 46, 48, 51, 52, 56, 67, 69], "return_typ": [11, 22, 32, 33, 69, 240], "assign": [11, 22, 23, 24, 32, 33, 49, 52, 72, 74, 77, 78, 82, 84, 85, 87, 93, 119, 120, 122, 130, 132, 133, 137, 146, 147, 153, 154, 168, 180, 181, 182, 190, 191, 193, 201, 202, 207, 209, 210, 226, 227, 235], "consecut": [12, 70, 71, 138, 154, 210, 235], "binarypredicatetyp": [12, 21, 26, 27, 42, 61, 62], "pred": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 38, 42, 45, 46, 47, 51, 52, 55, 56, 61, 62, 70, 71], "new": [12, 13, 14, 19, 20, 33, 43, 44, 45, 49, 50, 51, 52, 57, 58, 59, 60, 65, 70, 74, 75, 79, 81, 87, 89, 95, 100, 101, 102, 105, 107, 129, 130, 132, 133, 137, 141, 149, 163, 178, 182, 183, 184, 185, 188, 193, 194, 197, 200, 202, 203, 204, 205, 206, 210, 211, 215, 218, 223, 224, 226, 227, 228, 229, 236, 240, 241], "teamhandletyp": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65], "teamhandl": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 72, 151, 155, 156, 157, 158, 159, 160], "11": [12, 34, 41, 48, 69, 78, 194, 195, 206, 221, 222, 228, 230], "12": [12, 34, 48, 69, 72, 179, 195, 211, 212, 221, 222, 226, 235], "region": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 77, 85, 145, 146, 147, 148, 161, 162, 200, 201, 202, 204, 205, 210, 241], "when": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 74, 78, 81, 82, 86, 87, 88, 92, 95, 130, 135, 136, 137, 147, 151, 154, 161, 162, 180, 181, 182, 192, 193, 194, 195, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 215, 217, 218, 222, 223, 226, 230, 233, 234, 236, 237, 240, 241, 242], "forward": [12, 13, 14, 19, 20, 25, 33, 43, 44, 45, 57, 58, 65, 74, 133, 194, 202, 207, 228, 235], "adjacent_find_iterator_api_default": 12, "adjacent_find_view_api_default": 12, "g": [12, 13, 14, 19, 20, 23, 25, 32, 33, 35, 45, 53, 57, 58, 76, 79, 87, 88, 93, 128, 129, 132, 134, 137, 141, 145, 149, 154, 162, 178, 183, 184, 186, 190, 191, 194, 195, 200, 201, 205, 206, 207, 210, 211, 223, 228, 229, 230, 236, 241], "c": [12, 13, 14, 19, 20, 25, 34, 45, 48, 57, 58, 69, 72, 75, 76, 77, 83, 84, 87, 89, 92, 98, 122, 130, 133, 135, 137, 138, 139, 140, 141, 146, 149, 155, 157, 159, 167, 181, 186, 187, 190, 191, 192, 195, 196, 200, 201, 203, 205, 206, 207, 208, 210, 211, 215, 217, 219, 223, 229, 233, 234, 237, 240, 241], "associ": [12, 13, 14, 19, 20, 33, 43, 44, 45, 48, 57, 58, 65, 69, 72, 76, 95, 108, 122, 130, 134, 137, 149, 153, 163, 185, 186, 197, 200, 205, 206, 210, 217, 219, 235, 237, 239], "consid": [12, 87, 188, 193, 194, 200, 204, 208, 209, 210, 226, 227, 239, 241], "convert": [12, 13, 14, 17, 20, 28, 35, 36, 40, 45, 46, 51, 52, 55, 56, 84, 93, 95, 130, 132, 135, 164, 167, 186, 190, 191, 202, 208, 233, 234], "everi": [12, 13, 14, 17, 20, 28, 30, 35, 36, 40, 45, 46, 51, 52, 55, 56, 70, 76, 81, 95, 153, 155, 156, 157, 158, 179, 185, 186, 193, 194, 195, 197, 200, 204, 208, 209, 210, 211, 219, 226, 227, 230, 236, 240, 241], "If": [12, 18, 24, 35, 63, 64, 74, 75, 76, 78, 84, 87, 88, 127, 128, 129, 133, 136, 137, 146, 147, 148, 154, 167, 178, 179, 184, 185, 186, 193, 194, 195, 196, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 217, 219, 226, 227, 228, 234, 235, 237, 238, 239, 241], "found": [12, 14, 25, 28, 37, 74, 78, 81, 84, 103, 106, 122, 193, 194, 195, 204, 205, 207, 208, 226, 230, 241], "satisfi": [13, 14, 20, 35, 45, 46, 47, 82, 147, 178, 227], "target": [13, 14, 19, 43, 44, 45, 49, 50, 58, 72, 75, 95, 130, 146, 195, 202, 203, 205, 207, 216, 217, 230], "unari": [13, 14, 17, 20, 28, 35, 45, 46, 51, 52, 55, 56, 66, 67, 69, 95, 140], "predic": [13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 42, 45, 46, 51, 52, 55, 56, 61, 62, 70, 71, 95], "inputiter": [13, 14, 25, 28, 29, 30, 31, 35, 43, 50, 51, 57, 58, 60, 66, 71], "all_of_iterator_api_default": 13, "all_of_view_api_default": 13, "v": [13, 14, 17, 20, 28, 30, 35, 45, 46, 51, 52, 55, 56, 67, 69, 77, 78, 80, 82, 157, 164, 168, 178, 183, 184, 185, 202, 214, 219, 223, 237], "custompred": [13, 14, 20, 45], "your": [13, 14, 20, 36, 40, 75, 130, 194, 195, 196, 201, 206, 208, 210, 211, 213, 215, 219, 235, 241], "empti": [13, 14, 35, 39, 40, 41, 45, 75, 82, 214, 240], "fals": [13, 14, 21, 29, 35, 42, 45, 74, 77, 81, 130, 132, 133, 134, 137, 167, 178, 182, 201, 208, 210], "otherwis": [13, 18, 21, 24, 35, 45, 63, 64, 74, 75, 76, 77, 78, 81, 83, 84, 88, 93, 95, 129, 130, 132, 154, 178, 186, 194, 201, 202, 206, 210, 211, 219, 228], "least": [14, 78, 81, 87, 137, 138, 202, 208, 219, 229], "one": [14, 39, 40, 41, 42, 75, 76, 78, 87, 95, 132, 135, 137, 138, 140, 145, 153, 155, 156, 157, 158, 163, 165, 171, 172, 178, 180, 181, 183, 184, 185, 186, 190, 191, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 219, 223, 226, 228, 230, 232, 233, 235, 239, 240, 241], "any_of_iterator_api_default": 14, "any_of_view_api_default": 14, "first_to": [15, 17, 18, 50, 51, 54, 55, 60, 66, 71], "view_to": [15, 16, 17, 18, 54, 55, 60], "anoth": [15, 16, 17, 18, 42, 54, 55, 78, 87, 95, 138, 153, 155, 156, 157, 158, 178, 185, 193, 200, 201, 202, 207, 208, 209, 210, 230, 235, 239], "overload": [15, 16, 17, 18, 22, 23, 24, 26, 27, 31, 32, 34, 36, 37, 39, 40, 41, 48, 53, 54, 55, 56, 61, 62, 66, 69, 70, 71, 89, 90, 135, 140, 146, 147, 175, 194, 208, 209, 210, 214, 239], "sourc": [15, 16, 43, 44, 46, 50, 54, 58, 60, 65, 66, 71, 75, 76, 153, 167, 177, 186, 195, 205, 208, 211, 213, 219, 224, 228, 230, 242], "destin": [15, 16, 17, 18, 46, 50, 54, 60, 66, 71, 76, 79, 186, 202, 235], "copy_iterator_api_default": 15, "copy_view_api_default": 15, "last_to": 16, "rel": [16, 49, 52, 163, 195, 207], "preserv": [16, 49, 52, 78, 87, 183, 184], "copy_backward_iterator_api_default": 16, "copy_backward_view_api_default": 16, "unarypredicatetyp": [17, 51, 52, 55, 56], "copy_if_iterator_api_default": 17, "copy_if_view_api_default": 17, "sizetyp": [18, 24, 31, 62], "copy_n_if_iterator_api_default": 18, "copy_n_if_view_api_default": 18, "count_iterator_api_default": 19, "count_view_api_default": 19, "prediat": 20, "count_if_iterator_api_default": 20, "count_if_view_api_default": 20, "iteratortype1": [21, 26, 27, 38, 42, 44, 61, 65, 69], "iteratortype2": [21, 26, 27, 38, 42, 44, 61, 65, 69], "first1": [21, 38, 42, 65, 69], "last1": [21, 38, 42, 65, 69], "first2": [21, 38, 42, 65, 69], "view1": [21, 38, 42], "view2": [21, 38, 42], "binarypred": [21, 42, 70, 71], "via": [21, 26, 27, 37, 49, 52, 69, 85, 86, 95, 119, 120, 125, 128, 136, 137, 146, 147, 148, 150, 151, 152, 154, 156, 158, 160, 186, 193, 195, 198, 200, 201, 202, 210, 211, 226, 227, 228, 229, 233, 235, 240], "equal_iterator_api_default": 21, "equal_view_api_default": 21, "valuetype1": [21, 39, 40, 41, 42], "valuetype2": [21, 39, 40, 41, 42], "isequalfunctor": [21, 42], "somehow": [21, 25, 28, 30, 35, 39, 40, 42], "creat": [21, 28, 30, 42, 72, 75, 78, 79, 81, 83, 87, 95, 98, 161, 162, 163, 178, 179, 182, 185, 187, 192, 193, 194, 195, 197, 202, 205, 217, 226, 227, 228, 230, 235, 239], "p": [21, 28, 30, 42, 46, 75, 77, 79, 164, 183, 184, 195, 203, 210, 211, 214, 230, 234], "isequ": 21, "assum": [21, 23, 24, 25, 28, 30, 42, 47, 53, 56, 75, 81, 87, 95, 122, 132, 200, 202, 205, 206, 209, 210, 219, 232, 235], "openmp": [21, 23, 24, 25, 28, 30, 42, 53, 56, 72, 85, 87, 88, 94, 150, 152, 154, 179, 195, 201, 203, 206, 207, 210, 211, 214, 216, 217, 222, 228, 229, 230, 237], "enabl": [21, 25, 28, 30, 42, 86, 88, 137, 151, 156, 158, 160, 169, 172, 195, 200, 201, 206, 207, 210, 212, 217, 226, 230, 236, 238, 240], "you": [21, 25, 28, 30, 42, 75, 95, 130, 133, 137, 140, 141, 149, 182, 193, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 208, 209, 211, 212, 214, 215, 217, 218, 219, 224, 228, 239, 241], "explicitli": [21, 23, 24, 28, 30, 42, 53, 56, 76, 130, 164, 186, 195, 197, 200, 201, 202, 206, 208, 209, 219, 229, 230], "set": [22, 23, 24, 26, 27, 31, 34, 36, 37, 39, 40, 41, 48, 53, 56, 61, 62, 69, 72, 74, 75, 76, 77, 81, 82, 83, 87, 89, 98, 100, 101, 102, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 132, 135, 140, 152, 153, 154, 164, 168, 169, 172, 173, 176, 180, 181, 182, 186, 188, 190, 191, 192, 193, 194, 195, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 215, 217, 218, 222, 226, 228, 229, 230, 233, 237, 240, 241], "valuetyp": [22, 28, 30, 34, 35, 48, 49, 50, 56, 62, 67, 68, 69, 198, 199], "init_valu": [22, 34, 67, 68, 200], "binaryoptyp": [22, 34, 67, 68], "exclus": [22, 67, 148, 153, 167, 206, 209, 219, 235], "prefix": [22, 34, 67, 68, 90, 200, 201, 206, 207, 217], "sum": [22, 34, 67, 68, 72, 80, 81, 90, 108, 122, 147, 156, 158, 160, 196, 197, 198, 199, 200, 206], "result": [22, 30, 31, 34, 48, 63, 64, 66, 67, 68, 69, 74, 78, 79, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 138, 147, 148, 154, 163, 177, 186, 196, 197, 198, 199, 200, 202, 204, 205, 207, 209, 210, 219, 230, 233, 234, 240, 241, 242], "scan": [22, 34, 67, 68, 72, 74, 148, 153, 154, 200, 205, 207, 210, 235], "combin": [22, 34, 81, 87, 103, 105, 106, 122, 137, 147, 148, 186, 197, 200, 203, 207, 210, 219, 222, 228, 240], "th": [22, 34, 67, 68, 74, 185], "exclusive_scan_iterator_api_default": 22, "exclusive_scan_view_api_default": 22, "fill_iterator_api_default": 23, "fill_view_api_default": 23, "directli": [23, 24, 39, 40, 41, 84, 95, 130, 137, 194, 195, 200, 201, 202, 207, 208, 210, 229], "22": [23, 222, 230], "fill_n_iterator_api_default": 24, "fill_n_view_api_default": 24, "someth": [24, 53, 56, 78, 87, 145, 149, 190, 191, 193, 195, 204, 205, 226, 239, 241], "newvalu": [24, 53, 56], "find_iterator_api_default": 25, "find_view_api_default": 25, "cbegin": [25, 35, 58], "cend": [25, 35, 58], "host": [25, 72, 73, 74, 75, 76, 77, 80, 81, 82, 88, 130, 132, 137, 140, 167, 169, 172, 178, 179, 186, 195, 200, 201, 202, 204, 206, 207, 210, 211, 226, 230, 231, 235, 236, 240, 241], "s_first": [26, 27, 61], "s_last": [26, 27, 61], "s_view": [26, 27, 61], "occurr": [26, 61], "similar": [26, 27, 38, 61, 62, 72, 76, 78, 82, 87, 95, 186, 194, 204, 205, 208, 230, 235, 241], "find_end_iterator_api_default": 26, "find_end_view_api_default": 26, "find_first_of_iterator_api_default": 27, "find_first_of_view_api_default": 27, "predicatetyp": [28, 29, 30, 35, 46, 47], "find_if_iterator_api_default": 28, "find_if_view_api_default": 28, "operand": [28, 30, 35, 48], "evalu": [28, 42, 76, 130, 167, 186, 202, 206, 226, 230, 234], "equalsvalu": 28, "m_valu": [28, 30], "equalsvalfunctor": 28, "find_if_not_iterator_api_default": 29, "find_if_not_view_api_default": 29, "unaryfunctortyp": [30, 31], "func": [30, 31, 136, 140], "for_each_iterator_api_default": 30, "for_each_view_api_default": 30, "signatur": [30, 146, 147, 148, 206, 234], "incrementvalsfunctor": 30, "increment": [30, 37, 193, 202, 205, 210], "for_each_n_iterator_api_default": 31, "for_each_n_view_api_default": 31, "generatortyp": 32, "generate_iterator_api_default": 32, "generate_view_api_default": 32, "form": [32, 33, 95, 130, 132, 134, 147, 148, 192, 203, 205, 207, 210, 219, 237, 240], "being": [32, 33, 81, 87, 89, 95, 122, 141, 142, 143, 144, 154, 165, 185, 193, 200, 205, 208, 210, 226, 242], "size": [33, 49, 52, 72, 74, 75, 76, 77, 81, 82, 87, 90, 128, 129, 137, 142, 143, 144, 150, 152, 154, 180, 181, 182, 186, 190, 191, 200, 202, 206, 207, 208, 210, 234, 235, 238, 240], "ex": [33, 43, 44, 57, 65, 87, 93, 130, 201], "generate_n_iterator_api_default": 33, "generate_n_view_api_default": 33, "inclus": [34, 68, 148, 206, 209, 219, 226, 229], "op": [34, 72, 79, 81, 84, 99, 122, 179, 193, 210], "first_last": [34, 67, 68], "inclusive_scan_iterator_api_default": 34, "inclusive_scan_view_api_default": 34, "appear": [35, 49, 52, 87, 138, 186, 193, 210, 219, 235], "don": [35, 72, 75, 87, 178, 186, 193, 194, 206, 222, 228], "is_partitioned_iterator_api_default": 35, "is_partitioned_view_api_default": 35, "isneg": 35, "zero": [35, 72, 76, 77, 78, 80, 95, 132, 137, 153, 186, 200, 209, 210, 211], "re": [35, 39, 40, 41, 87, 95, 130, 137, 149, 168, 195, 204, 206, 210, 240, 241], "comparatortyp": [36, 37, 38, 39, 40, 41], "is_sorted_iterator_api_default": 36, "is_sorted_view_api_default": 36, "examin": [36, 40, 47, 70, 230], "less": [36, 38, 39, 40, 41, 63, 64, 87, 138, 163, 196, 208, 210, 222, 226, 234, 235], "than": [36, 38, 39, 40, 41, 63, 64, 74, 76, 77, 78, 87, 95, 130, 132, 137, 138, 150, 152, 154, 185, 186, 193, 195, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 222, 226, 234, 239], "logic": [36, 39, 40, 41, 49, 52, 70, 72, 76, 108, 110, 111, 112, 186, 193, 195, 197, 200, 205, 207, 208, 210, 240], "largest": [37, 39, 41, 79, 82, 138, 171, 207], "comparison": [37, 54, 72, 140, 193, 196], "is_sorted_until_iterator_api_default": 37, "is_sorted_until_view_api_default": 37, "is_same_v": [37, 87], "decltyp": [37, 63, 64, 84, 141, 177, 178, 179, 185, 209], "algoritm": [37, 81], "last2": [38, 42], "lexicograph": 38, "lexicographical_compare_iterator_api_defaul": 38, "lexicographical_compare_view_api_default": 38, "max_element_iterator_api_default": 39, "max_element_view_api_default": 39, "case": [39, 40, 41, 75, 76, 87, 92, 95, 147, 149, 178, 179, 186, 195, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 214, 216, 217, 226, 232, 235, 237, 238, 239], "sever": [39, 40, 41, 87, 89, 195, 205, 206, 216, 227, 229, 230, 236], "custom": [39, 40, 41, 76, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 147, 186, 200, 206, 210, 221, 226, 227, 234, 243], "customlessthancompar": [39, 40, 41], "put": [39, 40, 41, 194, 202, 206, 207, 226, 242], "smallest": [40, 41, 138, 171], "min_element_iterator_api_default": 40, "min_element_view_api_default": 40, "minmax_element_iterator_api_default": 41, "minmax_element_view_api_default": 41, "itpair": 41, "mismatch_iterator_api_default": 42, "mismatch_view_api_default": 42, "exampl": [42, 75, 86, 94, 95, 140, 149, 193, 195, 196, 197, 200, 202, 203, 204, 207, 209, 210, 211, 216, 217, 219, 230, 233, 234, 235, 236, 241], "cpp": [42, 132, 195, 214], "mismatchfunctor": 42, "mismatch_index": 42, "d_first": [43, 58, 66], "outputiter": [43, 50, 51, 58, 60, 66, 71], "dest": [43, 44, 58, 60, 65, 66, 71, 79, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 179, 199], "move_iterator_api_default": 43, "move_view_api_default": 43, "distanc": [43, 44, 58, 65], "d_last": 44, "move_backward_iterator_api_default": 44, "move_backward_view_api_default": 44, "none_of_iterator_api_default": 45, "none_of_view_api_default": 45, "outputiteratortruetyp": 46, "outputiteratorfalsetyp": 46, "from_first": 46, "from_last": 46, "to_first_tru": 46, "to_first_fals": 46, "datatype3": [46, 66], "properties3": [46, 66], "view_dest_tru": 46, "view_dest_fals": 46, "view_tru": 46, "view_fals": 46, "partition_copy_iterator_api_default": 46, "partition_copy_view_api_default": 46, "NOT": [46, 153, 155, 157, 159, 163, 206, 219, 228], "contain": [46, 49, 52, 74, 75, 81, 95, 132, 135, 146, 147, 148, 153, 170, 178, 180, 181, 182, 183, 184, 186, 187, 194, 195, 197, 200, 201, 202, 204, 205, 208, 216, 217, 219, 226, 230, 235, 239, 241, 242], "locat": [47, 75, 76, 79, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 137, 186, 195, 200, 205, 207, 210, 211, 217, 230, 233, 238], "alreadi": [47, 76, 78, 81, 85, 87, 179, 186, 194, 203, 206, 228, 232], "is_part": 47, "partition_point_iterator_api_default": 47, "partition_point_view_api_default": 47, "elment": 47, "init_reduction_valu": [48, 69], "joiner": [48, 69], "reduct": [48, 69, 72, 79, 87, 90, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 147, 148, 153, 154, 197, 198, 199, 200, 205, 207, 214, 221, 237, 243], "account": [48, 68, 154, 215, 226], "join": [48, 69, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 147, 148, 196, 197, 199, 200, 205, 214, 215, 226, 230, 235], "dure": [48, 86, 122, 152, 154, 185, 193, 200, 201, 202, 207, 210, 211, 226, 227, 229, 230, 232, 235, 239], "reduce_iterator_api_default": 48, "reduce_view_api_default": 48, "joinfunctor": [48, 69], "behavior": [48, 69, 75, 81, 95, 128, 129, 130, 132, 133, 152, 174, 186, 194, 207, 208, 210, 211, 241], "commut": [48, 69, 122], "shift": [49, 52, 63, 64, 103, 106], "remain": [49, 52, 87, 129, 205, 219, 226], "physic": [49, 52, 74, 154, 200, 204, 207, 210, 241], "unchang": [49, 52, 81], "remove_iterator_api_default": 49, "remove_view_api_default": 49, "ther": [50, 57], "omit": [50, 51, 75, 76, 127, 128, 129, 186], "those": [50, 51, 74, 75, 78, 93, 95, 147, 164, 186, 194, 195, 200, 202, 209, 210, 219, 228, 232, 235], "remove_copy_iterator_api_default": 50, "remove_copy_view_api_default": 50, "remove_copy_if_iterator_api_default": 51, "remove_copy_if_view_api_default": 51, "remove_if_iterator_api_default": 52, "remove_if_view_api_default": 52, "old_valu": [53, 54, 100, 101, 102, 103, 106], "new_valu": [53, 54, 55, 56, 100, 101, 102, 107], "replace_iterator_api_default": 53, "replace_view_api_default": 53, "self": [53, 54, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 137, 217], "explanatori": [53, 54, 165], "oldvalu": [53, 56], "mylabel": [53, 56], "replace_copy_iterator_api_default": 54, "replace_copy_view_api_default": 54, "replace_copy_if_iterator_api_default": 55, "replace_copy_if_view_api_default": 55, "replace_if_iterator_api_default": 56, "replace_if_view_api_default": 56, "ispositivefunctor": 56, "val": [56, 82, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 197, 199, 210], "reverse_iterator_api_default": 57, "reverse_view_api_default": 57, "reverse_copy_iterator_api_default": 58, "reverse_copy_view_api_default": 58, "n_first": [59, 60], "n_locat": [59, 60], "wai": [59, 60, 75, 81, 83, 84, 87, 95, 188, 193, 194, 195, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 219, 234, 235, 238, 239, 241], "rotate_iterator_api_default": 59, "rotate_view_api_default": 59, "identifi": [59, 60, 145, 153, 195, 200, 204, 211, 218, 219, 230, 232, 241], "about": [59, 60, 85, 87, 88, 93, 130, 137, 140, 149, 150, 152, 163, 186, 194, 204, 205, 206, 207, 208, 210, 211, 214, 226, 238, 241], "rotate_copy_iterator_api_default": 60, "rotate_copy_view_api_default": 60, "search_iterator_api_default": 61, "search_view_api_default": 61, "search_n_iterator_api_default": 62, "search_n_view_api_default": 62, "posit": [63, 64, 74, 185, 209, 240], "toward": [63, 64, 203, 205], "shift_left_iterator_api_default": 63, "shift_left_view_api_default": 63, "shift_right_iterator_api_default": 64, "shift_right_view_api_default": 64, "swap_ranges_iterator_api_default": 65, "swap_ranges_view_api_default": 65, "unaryoper": 66, "unary_op": [66, 67, 68], "inputiterator1": 66, "inputiterator2": 66, "binaryoper": 66, "first_from1": 66, "last_from1": 66, "first_from2": 66, "binary_op": [66, 67, 68], "source1": 66, "source2": 66, "store": [66, 72, 75, 76, 77, 80, 81, 95, 100, 102, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 133, 147, 186, 193, 196, 197, 200, 205, 206, 207, 208, 210, 232, 234, 235, 238], "last_from2": 66, "transform_iterator_api_default": 66, "transform_view_api_default": 66, "tranform": 66, "unaryoptyp": [67, 68], "except": [67, 68, 70, 81, 128, 130, 133, 134, 135, 136, 137, 164, 194, 206, 210, 211, 219, 226, 230], "transform_exclusive_scan_iterator_api_default": 67, "transform_exclusive_scan_view_api_default": 67, "unaryop": 67, "transform_inclusive_scan_iterator_api_default": 68, "transform_inclusive_scan_view_api_default": 68, "first_view": 69, "second_view": 69, "binaryjoinertyp": 69, "binarytransform": 69, "binary_transform": 69, "unarytransform": 69, "unary_transform": 69, "product": [69, 76, 77, 186, 197, 200, 204, 209, 210, 219, 229, 234, 241], "along": [69, 87, 209, 219, 233], "transform_reduce_iterator_api_default": 69, "transform_reduce_view_api_default": 69, "value_type_a": 69, "value_type_b": 69, "value_type_": 69, "elimin": [70, 76, 77, 186], "group": [70, 200, 205, 207, 226, 230], "unique_iterator_api_default": 70, "unique_ranges_view_api_default": 70, "unique_copy_iterator_api_default": 71, "unique_copy_ranges_view_api_default": 71, "librari": [72, 84, 87, 89, 92, 132, 138, 140, 141, 164, 167, 171, 193, 194, 195, 201, 203, 205, 210, 211, 226, 230, 235, 238, 239, 242, 243], "categori": [72, 188, 193, 195, 203, 205, 226, 229, 230], "descript": [72, 73, 83, 85, 88, 90, 98, 108, 122, 123, 130, 132, 193, 195, 201, 217, 228, 230], "rand": 72, "plu": [72, 123, 125, 128, 193, 200, 206, 234], "random_xorshift1024_pool": 72, "1024": [72, 77, 153, 198, 199, 200], "random_xorshift1024": 72, "sampl": [72, 198, 199], "fit": [72, 95, 200, 207, 219], "bitset": [72, 73, 81], "concurr": [72, 73, 81, 130, 146, 147, 148, 163, 173, 195, 197, 205, 206, 207, 240], "dualview": [72, 73, 82, 87, 88, 188, 243], "mirror": [72, 73, 75, 78, 178], "dynamicview": [72, 73, 188], "dynam": [72, 76, 77, 85, 88, 95, 132, 150, 152, 154, 183, 184, 186, 205, 210, 211, 240], "dynrankview": [72, 73, 179, 188], "determin": [72, 73, 76, 88, 150, 154, 157, 172, 185, 186, 190, 191, 195, 200, 201, 205, 206, 207, 210, 211, 217, 219, 226, 227, 229, 234, 235, 240], "runtim": [72, 73, 76, 78, 79, 85, 130, 132, 150, 152, 154, 172, 186, 197, 200, 201, 202, 207, 210, 217, 226, 239, 241], "errorreport": 72, "support": [72, 75, 78, 82, 84, 87, 88, 95, 130, 132, 133, 137, 139, 140, 190, 191, 194, 195, 196, 200, 201, 202, 206, 208, 210, 211, 217, 218, 219, 229, 230, 235, 237, 243], "error": [72, 140, 165, 186, 202, 205, 209, 210, 211, 218, 222, 228, 230, 239], "record": [72, 87, 226], "code": [72, 77, 87, 88, 90, 95, 130, 137, 139, 153, 161, 162, 167, 179, 186, 193, 194, 195, 196, 198, 200, 205, 206, 207, 209, 210, 211, 216, 217, 218, 219, 221, 222, 226, 227, 229, 230, 231, 234, 235, 239, 240, 242], "offsetview": [72, 73, 87, 188, 214], "indici": [72, 118, 193], "scatterview": [72, 73, 188, 231, 243], "transpart": 72, "replic": [72, 193, 202, 230], "strategi": [72, 87, 95, 132, 193, 201, 241], "scatter": [72, 79, 193], "staticcrsgraph": [72, 73, 210], "resiz": [72, 75, 77, 79, 82, 98, 183, 202], "graph": [72, 80, 83, 95, 243], "semant": [72, 76, 78, 82, 95, 186, 194, 200, 202, 206, 210, 216, 235], "unorderedmap": [72, 73, 210], "map": [72, 73, 76, 80, 81, 186, 200, 201, 202, 207, 210, 232, 234, 235], "optim": [72, 88, 152, 193, 195, 200, 202, 203, 205, 207, 210, 211, 217, 235, 238, 241], "insert": [72, 207, 210], "interfac": [72, 82, 87, 94, 95, 151, 156, 158, 160, 188, 194, 200, 202, 203, 205, 209, 210, 219, 233, 239, 241], "abort": [72, 97, 167], "util": [72, 83, 130, 164, 195, 200, 205, 230, 233, 238], "caus": [72, 140, 165, 167, 194, 202, 205, 210, 218, 219], "abnorm": [72, 165, 167], "program": [72, 82, 93, 95, 98, 134, 135, 137, 149, 165, 167, 201, 202, 203, 204, 208, 209, 210, 212, 217, 230, 232, 235, 240, 241, 242], "termin": [72, 133, 134, 135, 136, 165, 167, 219], "dimens": [72, 73, 75, 76, 77, 78, 79, 87, 150, 166, 180, 181, 182, 183, 184, 185, 187, 200, 202, 233, 234], "atomic_exchang": [72, 99, 193], "exchang": [72, 100, 101, 102, 193, 231], "old": [72, 75, 79, 81, 133, 184, 193, 206, 210], "atomic_compare_exchang": [72, 99, 193], "match": [72, 75, 76, 78, 82, 98, 146, 147, 148, 150, 164, 178, 180, 181, 186, 193, 195, 200, 210, 223], "atomic_compare_exchange_strong": [72, 99, 193], "atomic_load": [72, 99, 193], "load": [72, 76, 87, 95, 132, 186, 193, 200, 201, 206, 207, 208, 228, 230], "atomic_": [72, 99, 193], "anyth": [72, 95, 170, 193, 194], "atomic_fetch_": [72, 99, 193], "variou": [72, 75, 83, 193, 195, 229, 230], "_fetch": [72, 99, 193], "atomic_stor": [72, 99, 193], "band": [72, 108, 122, 197, 200], "bor": [72, 108, 122, 197, 200], "Or": [72, 108, 240], "stl": [72, 83], "compat": [72, 73, 76, 77, 78, 82, 83, 88, 93, 130, 135, 137, 147, 148, 164, 179, 186, 195, 201, 202, 204, 210, 218, 221, 233, 241], "work": [72, 73, 75, 76, 79, 81, 82, 83, 85, 87, 92, 122, 130, 133, 140, 145, 146, 147, 148, 150, 152, 154, 164, 179, 186, 191, 193, 194, 195, 197, 200, 201, 202, 205, 206, 207, 208, 209, 210, 219, 222, 226, 228, 230, 231, 234, 235, 236, 239], "create_mirror": [72, 98, 210], "relat": [72, 83, 171, 195, 200, 211, 226, 235], "create_mirror_view": [72, 178, 179, 202, 210, 214, 237], "cudaspac": [72, 87, 88, 94, 186, 202, 210, 214, 237], "primari": [72, 84, 95, 194, 195, 201, 222, 226, 228, 229, 230], "cudauvmspac": [72, 87, 88, 94, 202, 204, 210, 211, 214, 241], "unifi": [72, 87, 137, 217], "page": [72, 95, 122, 130, 137, 149, 195, 210, 212, 213, 217, 218, 224], "migrat": [72, 137, 218, 236], "alloc": [72, 74, 75, 76, 77, 81, 82, 87, 93, 95, 98, 126, 127, 128, 129, 130, 137, 154, 163, 178, 180, 181, 182, 184, 186, 187, 193, 195, 200, 203, 204, 205, 207, 208, 210, 211, 235, 236, 237, 238, 241], "cudahostpinnedspac": [72, 94, 186, 210], "memrori": 72, "pin": [72, 137, 195], "gpu": [72, 76, 88, 92, 132, 137, 178, 186, 195, 200, 201, 202, 203, 205, 207, 208, 210, 211, 214, 218, 226, 230, 235, 236, 238], "executionpolici": [72, 96, 146, 147, 148], "concept": [72, 83, 95, 96, 108, 122, 130, 137, 147, 149, 153, 180, 181, 182, 194, 196, 199, 200, 203, 205, 207, 212, 243], "hpx": [72, 85, 87, 88, 94, 150, 152, 201, 214, 216, 217], "system": [72, 87, 95, 130, 137, 172, 194, 200, 201, 205, 207, 210, 211, 212, 219, 226, 229, 230, 239], "mechan": [72, 87, 149, 161, 200, 202, 203, 207, 210, 219], "initargu": [72, 132, 133, 135, 214], "programmat": [72, 131, 132, 135], "how": [72, 76, 85, 122, 130, 137, 149, 150, 186, 193, 194, 195, 196, 200, 201, 202, 203, 205, 206, 207, 208, 211, 215, 223, 235], "deprec": [72, 77, 87, 88, 131, 132, 135, 216, 217, 223, 226, 236], "initializationset": [72, 131, 133, 135, 169, 172, 173, 201, 214], "is_array_layout": [72, 87, 214], "trait": [72, 75, 76, 77, 83, 84, 89, 93, 130, 139, 140, 152, 177, 186, 200, 223, 238], "detect": [72, 83, 96, 141, 180, 181, 182, 211], "model": [72, 93, 95, 96, 155, 156, 157, 158, 159, 160, 180, 181, 182, 195, 202, 203, 206, 208, 210, 212, 217, 221, 235], "layout": [72, 75, 76, 77, 78, 79, 96, 98, 178, 180, 181, 182, 183, 184, 202, 203, 205, 209], "is_execution_polici": [72, 214], "is_execution_spac": [72, 87, 130, 214], "is_memory_spac": [72, 87, 137, 214], "memoryspac": [72, 76, 93, 96, 127, 128, 129, 130, 137, 186, 210, 238], "is_memory_trait": [72, 214], "memorytrait": [72, 75, 76, 87, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 186, 193, 200, 210, 238], "is_reduc": [72, 214], "is_spac": [72, 130, 214], "fortran": [72, 76, 98, 180, 186, 195, 209, 210, 222, 231, 243], "arbitrari": [72, 76, 85, 98, 150, 152, 182, 186, 196, 199, 200, 207, 209, 210], "stride": [72, 75, 76, 77, 79, 98, 182, 202, 209, 233], "kokkos_fre": [72, 126, 128, 129, 202, 236], "delloc": 72, "previous": [72, 100, 102, 126, 127, 129, 137, 186, 195, 196, 207, 242], "kokkos_malloc": [72, 126, 127, 129, 202, 204, 236, 241], "kokkos_realloc": [72, 126, 127, 128, 202], "expand": [72, 95, 126, 206], "block": [72, 95, 126, 128, 145, 163, 195, 200, 202, 203, 209, 226, 237], "land": [72, 108, 109, 110, 112, 122, 197, 200, 230], "built": [72, 76, 83, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 186, 195, 196, 199, 200, 201, 210, 230], "lor": [72, 108, 122, 197, 200], "maxloc": [72, 108, 119, 122, 125, 197, 200], "index": [72, 74, 76, 77, 78, 81, 82, 108, 114, 116, 117, 118, 119, 123, 125, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 180, 181, 185, 186, 192, 193, 197, 200, 202, 204, 206, 209, 241], "u": [72, 164, 190, 192, 195, 219, 223], "mdrangepolici": [72, 76, 85, 87, 146, 147, 186, 214, 223, 231, 243], "multidimension": [72, 76, 83, 85, 98, 150, 180, 181, 182, 197, 200, 202, 209, 221, 234], "min": [72, 103, 106, 108, 114, 116, 117, 118, 119, 120, 122, 123, 125, 141, 147, 171, 193, 197, 200, 214, 242], "minloc": [72, 108, 119, 122, 197, 200], "minmax": [72, 108, 120, 122, 171, 196, 197, 200, 214], "minmaxloc": [72, 108, 119, 122, 197, 200], "openmptarget": [72, 87, 88, 94, 195, 201], "targetoffload": 72, "analogu": 72, "bulk": [72, 207], "item": [72, 85, 130, 148, 150, 152, 154, 200, 205, 226, 235, 239], "parallelfortag": [72, 90, 154], "tag": [72, 76, 85, 87, 142, 143, 144, 147, 150, 152, 154, 180, 181, 182, 186, 199, 200, 208, 226, 228, 231, 235], "team_siz": [72, 153, 154, 200], "contribut": [72, 79, 147, 148, 193, 197, 200, 216, 219, 227, 232, 237], "parallelreducetag": [72, 90, 154], "parallel_scan": [72, 90, 144, 145, 160, 200, 206, 207, 235, 236], "simpl": [72, 122, 130, 176, 193, 197, 200, 202, 205, 206, 207, 208, 209, 210, 211, 233, 234, 235, 239], "pre": [72, 148, 163, 190, 191, 195, 226, 232], "postfix": [72, 207], "depend": [72, 88, 95, 137, 154, 155, 159, 167, 193, 194, 195, 196, 200, 205, 206, 207, 208, 211, 234, 236, 237, 241], "parallelscantag": [72, 90], "partition_spac": [72, 94], "split": [72, 85, 151, 155, 156, 157, 158, 159, 160, 163, 200, 206, 240], "exist": [72, 75, 81, 84, 87, 88, 145, 147, 153, 163, 179, 183, 184, 194, 195, 205, 207, 208, 209, 210, 226, 227, 230, 235], "multipl": [72, 87, 88, 95, 108, 147, 193, 195, 200, 202, 205, 206, 208, 210, 211, 216, 217, 226, 229, 230, 235, 239], "perteam": [72, 153, 154, 155, 156, 157, 158, 160, 197, 200], "singl": [72, 95, 147, 151, 152, 155, 156, 157, 158, 160, 190, 191, 197, 201, 202, 203, 205, 206, 207, 209, 210, 211, 234], "construct": [72, 74, 75, 76, 77, 79, 81, 82, 86, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 135, 137, 161, 176, 180, 181, 182, 183, 184, 186, 192, 196, 200, 202, 205, 206, 208, 209], "indic": [72, 76, 78, 79, 80, 81, 87, 108, 119, 123, 130, 142, 143, 144, 186, 193, 197, 200, 207, 209, 210, 219, 234, 240], "per": [72, 95, 154, 197, 200, 202, 206, 207, 209, 210, 232, 235, 238], "perthread": [72, 154, 160, 200], "prod": [72, 108, 122, 197, 200], "rangepolici": [72, 85, 87, 130, 146, 147, 148, 149, 163, 200, 202, 206, 210, 237, 239], "1d": [72, 76, 146, 147, 148, 152, 154, 186, 202, 210, 233], "realloc": [72, 75, 79, 98, 129, 184, 210], "maintain": [72, 87, 194, 215, 229], "reducerconcept": [72, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 199], "cpu": [72, 88, 130, 137, 178, 193, 195, 200, 201, 207, 208, 214, 218, 222, 228, 230], "aggreg": [72, 86, 200, 217], "spaceaccess": [72, 93, 130, 137, 178, 179, 210, 214], "facil": [72, 89, 98, 138, 141, 178, 188, 226, 229], "queri": [72, 75, 132, 153, 154, 201, 210, 214], "rule": [72, 77, 194], "multi": [72, 76, 146, 147, 186, 197, 203, 211], "dimension": [72, 76, 146, 147, 186, 209, 210], "arrai": [72, 75, 76, 77, 78, 79, 80, 81, 82, 95, 98, 133, 135, 147, 150, 175, 180, 181, 182, 186, 193, 197, 198, 199, 200, 202, 209, 214, 221, 230, 231, 232, 235], "crate": [72, 230], "slice": [72, 98, 177, 238, 243], "teamthreadmdrang": [72, 85], "teamvectormdrang": [72, 85, 159], "teamvectorrang": [72, 85, 159, 160], "threadvectormdrang": [72, 85], "timer": [72, 97, 145], "basic": [72, 76, 87, 140, 149, 186, 195, 202, 203, 211, 212, 236], "like": [72, 75, 76, 87, 95, 98, 130, 137, 146, 149, 179, 186, 193, 194, 195, 199, 201, 203, 204, 205, 206, 208, 209, 210, 211, 226, 232, 239, 241], "act": [72, 87, 203, 209, 219], "comment": [73, 195], "offset": [73, 78, 200, 207, 210], "unord": [73, 81], "kokkos_bitset": 74, "safe": [74, 202, 205, 206, 207, 210], "fix": [74, 81, 86, 194, 202, 210, 226, 227, 228, 238], "run": [74, 88, 95, 135, 137, 146, 193, 194, 195, 197, 200, 202, 204, 205, 206, 207, 210, 211, 217, 226, 228, 230, 236, 237, 241], "time": [74, 75, 76, 85, 87, 88, 93, 95, 130, 150, 152, 154, 176, 186, 190, 191, 193, 194, 195, 200, 205, 206, 207, 208, 209, 210, 211, 217, 226, 227, 228, 230, 234, 236, 239], "paramet": [74, 75, 76, 77, 81, 85, 95, 98, 100, 101, 102, 103, 122, 127, 128, 129, 130, 132, 133, 137, 149, 153, 155, 157, 159, 163, 187, 195, 197, 201, 206, 208, 210, 211, 214, 222, 223, 230, 234, 237, 239], "constant": [74, 78, 83, 89, 130, 138, 140, 141, 166, 186, 190, 191, 206], "bit_scan_revers": 74, "1u": [74, 209], "mask": [74, 191, 192, 201, 208], "direct": [74, 140, 178, 200, 201, 208, 209, 210, 218, 219, 230], "move_hint_backward": 74, "2u": 74, "hint": [74, 76, 85, 95, 150, 152, 163, 186], "bit_scan_forward_move_hint_forward": 74, "0u": 74, "scan_direct": 74, "find_any_set_near": 74, "find_any_reset_near": 74, "increas": [74, 76, 81, 87, 186, 194, 202, 210, 217], "wa": [74, 75, 81, 88, 95, 129, 131, 132, 133, 161, 174, 178, 186, 190, 191, 195, 197, 200, 201, 202, 210, 211, 218, 219, 226, 228, 234, 236], "bit_scan_reverse_move_hint_forward": 74, "decreas": 74, "bit_scan_forward_move_hint_backward": 74, "bit_scan_reverse_move_hint_backward": 74, "constructor": [74, 75, 76, 77, 78, 79, 81, 82, 85, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 133, 135, 146, 153, 154, 155, 157, 159, 168, 178, 180, 181, 182, 183, 184, 198, 199, 200, 206, 209, 210, 214, 218, 223], "arg_siz": 74, "reset": [74, 75, 79, 176, 195], "clear": [74, 81, 82, 87, 194], "test": [74, 88, 130, 140, 145, 195, 202, 206, 210, 211, 216, 217, 222, 226, 227, 228], "max_hint": 74, "happen": [74, 76, 77, 95, 100, 101, 186, 193, 200, 202, 204, 210, 226, 228, 230, 241], "occur": [74, 92, 179, 201, 205, 211, 226, 233, 234, 236], "smaller": [74, 76, 77, 171, 185, 186, 202, 230], "find_any_unset_near": 74, "is_alloc": [74, 75, 76, 77, 79, 81, 82, 186], "rh": [74, 76, 77, 119, 120, 125, 130, 186, 190, 191, 198, 199, 223, 237], "dstdevic": 74, "srcdevic": 74, "dst": [74, 87, 147, 206], "src": [74, 75, 79, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 137, 147, 168, 178, 179, 195, 198, 199, 206, 234], "kokkos_dualview": [75, 214], "refer": [75, 76, 77, 79, 82, 87, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 139, 140, 141, 154, 179, 185, 186, 190, 191, 192, 194, 195, 197, 199, 200, 201, 202, 203, 205, 206, 209, 211, 216, 218, 230, 239], "capabl": [75, 83, 137, 195, 200, 201, 202, 207, 208, 217, 223, 227], "well": [75, 76, 87, 93, 95, 122, 145, 150, 152, 153, 162, 167, 186, 194, 195, 197, 200, 202, 203, 205, 206, 207, 209, 210, 226, 228, 229, 230, 235], "flag": [75, 130, 135, 186, 190, 192, 195, 201, 206, 211, 215, 217, 222, 228, 230], "respons": [75, 201, 202, 205, 208, 219, 227, 229], "manual": [75, 195, 211, 228, 234], "sync": 75, "method": [75, 76, 77, 78, 79, 81, 82, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 195, 199, 205, 206, 208, 210, 214, 234, 241], "synchron": [75, 82, 137, 151, 163, 179, 200, 205, 207, 237], "conveni": [75, 79, 84, 130, 161, 202, 206, 209], "capac": [75, 81, 200, 205], "appropri": [75, 80, 95, 122, 195, 200, 205, 206, 207, 209, 210, 211, 219, 226, 227, 230], "underli": [75, 76, 77, 78, 82, 95, 161, 163, 186, 193, 202, 203, 205, 207, 210, 238], "four": [75, 210, 217, 226, 228], "separ": [75, 87, 193, 195, 201, 206, 210, 219, 226, 228, 238, 239], "intend": [75, 84, 87, 89, 164, 195, 200, 204, 210, 241], "pleas": [75, 130, 137, 140, 141, 149, 194, 195, 210, 212, 213, 230], "document": [75, 87, 92, 130, 137, 146, 147, 149, 190, 191, 194, 195, 204, 219, 226, 227, 234, 235, 241], "suffic": 75, "most": [75, 76, 87, 95, 130, 135, 137, 138, 140, 149, 178, 182, 186, 195, 196, 197, 200, 202, 204, 205, 206, 207, 210, 211, 212, 215, 222, 228, 230, 232, 234, 237, 241], "m": [75, 87, 151, 152, 156, 158, 160, 186, 192, 197, 202, 209, 230, 237], "d_view": [75, 179], "execution_spac": [75, 76, 81, 87, 93, 130, 137, 152, 153, 154, 163, 179, 186, 200, 202, 206, 210, 235], "host_mirror_spac": [75, 76, 178, 186, 214], "h_view": [75, 179], "arg1typ": [75, 82], "arg2typ": 75, "arg3typ": 75, "viewtrait": [75, 77], "data_typ": [75, 76, 77, 186, 223], "t_dev": 75, "hostmirror": [75, 76, 77, 178, 186, 202, 237], "t_host": 75, "const_data_typ": [75, 76, 77, 186], "t_dev_const": 75, "t_host_const": 75, "array_layout": [75, 76, 87, 130, 179, 180, 181, 182, 183, 184, 186, 210, 223], "randomaccess": [75, 76, 186, 210], "t_dev_const_randomread": 75, "t_host_const_randomread": 75, "memoryunmanag": [75, 199, 233], "t_dev_um": 75, "unmanag": [75, 76, 79, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 182, 186, 187, 200, 202, 233, 243], "t_host_um": 75, "t_dev_const_um": 75, "t_host_const_um": 75, "t_dev_const_randomread_um": 75, "t_host_const_randomread_um": 75, "t_modified_flag": 75, "modified_flag": 75, "modified_host": 75, "modified_devic": 75, "unmodifi": 75, "n0": [75, 76, 79, 150, 155, 157, 159, 166, 177, 180, 181, 182, 183, 184, 185, 186, 209, 210, 223], "kokkos_impl_ctor_default_arg": [75, 183, 184], "n1": [75, 76, 79, 150, 155, 157, 159, 163, 166, 177, 180, 181, 182, 183, 184, 185, 186, 209, 210, 223], "n2": [75, 76, 79, 150, 155, 157, 159, 163, 177, 180, 181, 182, 183, 184, 185, 186, 210], "n3": [75, 76, 79, 155, 157, 159, 163, 180, 181, 182, 183, 184, 186, 210], "n4": [75, 76, 79, 180, 181, 182, 183, 184, 186], "n5": [75, 76, 79, 180, 181, 182, 183, 184, 186], "n6": [75, 76, 79, 180, 181, 182, 183, 184, 186], "n7": [75, 76, 79, 180, 181, 182, 183, 184, 186], "analog": [75, 95, 174, 179], "benefit": [75, 222], "nonzero": 75, "impl": [75, 79, 87, 151, 154, 178, 183, 184, 194, 214], "viewctorprop": [75, 79, 178, 183, 184], "arg_prop": [75, 79, 178, 183, 184], "enable_if": 75, "has_point": 75, "wrap": [75, 76, 186, 187, 195, 202, 210], "up": [75, 87, 95, 134, 138, 180, 181, 182, 186, 194, 195, 200, 201, 206, 207, 210, 230, 240], "viewctor": 75, "thing": [75, 87, 130, 188, 194, 195, 202, 204, 205, 207, 208, 210, 241], "ctor": 75, "ss": 75, "ls": [75, 153, 240], "ds": 75, "ms": [75, 130, 137], "shallow": [75, 202, 206, 210], "sd": 75, "s1": [75, 130, 137, 182], "s2": [75, 130, 137, 182], "s3": [75, 182], "arg0": 75, "arg": [75, 76, 77, 84, 133, 150, 152, 154, 163, 174, 177, 185, 186, 187, 201], "d_view_": 75, "h_view_": 75, "caller": [75, 130], "sure": [75, 195, 200, 206, 210, 211], "ensur": [75, 86, 133, 134, 135, 174, 194, 195, 201, 205, 208, 210, 215, 226], "mark": [75, 206, 210, 219, 226, 241], "if_c": 75, "is_sam": [75, 84, 93, 178, 179, 202, 209, 210], "memory_spac": [75, 76, 81, 87, 93, 127, 128, 129, 130, 137, 178, 179, 186, 187, 202, 210, 223, 236], "get_device_sid": 75, "specif": [75, 85, 87, 92, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 137, 145, 152, 153, 154, 163, 179, 190, 191, 193, 195, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 219, 226, 229, 230, 232], "afraid": 75, "express": [75, 83, 87, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 138, 167, 192, 195, 207, 208, 209, 211, 219, 236], "That": [75, 76, 87, 145, 186, 200, 201, 202, 206, 209, 210, 211], "tell": [75, 95, 200, 205, 206, 209, 211, 238, 241], "what": [75, 88, 122, 130, 132, 137, 188, 190, 191, 194, 202, 204, 205, 206, 208, 223, 228, 235, 239], "els": [75, 95, 147, 148, 167, 210, 213, 235, 240], "suppos": [75, 84, 208, 209, 235], "dual_view_typ": 75, "dv": 75, "my": [75, 87, 210], "dual": [75, 82, 217], "want": [75, 84, 193, 201, 204, 205, 206, 208, 235, 241], "cudaview": 75, "host_device_typ": 75, "hostview": [75, 179], "non_const_data_typ": [75, 76, 77, 186], "need_sync": 75, "been": [75, 87, 88, 92, 195, 200, 201, 202, 203, 205, 208, 209, 210, 219, 230, 232, 239, 240], "In": [75, 76, 86, 87, 88, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 133, 138, 147, 149, 151, 156, 158, 160, 167, 179, 186, 188, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 219, 226, 229, 230, 232, 233, 234, 235, 237, 239, 241], "discard": [75, 79], "modif": [75, 203, 219, 237], "doesn": [75, 145, 147, 178, 195, 200, 206, 211], "know": [75, 194, 195, 196, 202, 204, 209, 211, 241], "whether": [75, 76, 77, 82, 87, 88, 100, 130, 132, 137, 149, 154, 186, 197, 204, 205, 206, 209, 210, 217, 219, 223, 226, 227, 229, 235, 240, 241], "inlin": [75, 77, 84, 152, 154, 200, 202, 206, 214], "clear_sync_st": 75, "With": [75, 76, 79, 86, 87, 186, 195, 200, 205, 217, 236], "referenc": [75, 76, 77, 79, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 185, 186, 202, 210, 226], "address": [75, 76, 79, 100, 101, 102, 103, 104, 105, 106, 107, 139, 186, 190, 194, 195, 200, 203, 205, 207, 215, 218, 226, 230], "null": [75, 76, 77, 79, 82, 127, 129, 133, 135, 186], "pointer": [75, 76, 77, 79, 81, 82, 95, 127, 128, 129, 130, 133, 135, 153, 178, 182, 183, 184, 186, 187, 193, 202, 206, 208, 214, 235, 239], "span": [75, 76, 77, 82, 186], "span_is_contigu": [75, 76, 77, 179, 186], "contigu": [75, 76, 77, 85, 179, 180, 181, 186, 190, 209, 210, 235, 238], "ityp": [75, 76, 77, 156, 158, 160, 185, 186], "stride_": 75, "is_integr": [75, 156, 158, 160, 185], "r": [75, 179, 185, 186, 208, 212, 219, 223, 234, 237], "extent_int": [75, 76, 77, 186], "integr": [75, 76, 77, 88, 138, 141, 185, 186, 226, 228, 230], "kokkos_dynrankview": [76, 214], "potenti": [76, 77, 81, 88, 95, 137, 146, 147, 151, 153, 179, 186, 193, 199, 200, 203, 205, 206, 211, 239], "compil": [76, 85, 87, 88, 93, 130, 138, 140, 150, 152, 179, 186, 190, 191, 193, 194, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 215, 217, 218, 219, 221, 226, 229, 234, 235, 238, 239, 241, 242], "Its": [76, 186, 202], "shared_ptr": [76, 186], "upper": [76, 201, 210], "bound": [76, 77, 81, 85, 88, 150, 152, 200, 202, 210, 217, 230, 233], "layouttyp": [76, 77, 186], "fundament": [76, 84, 85, 95, 130, 137, 149, 186, 190, 191, 192, 203, 205, 207, 226, 235], "mandatori": [76, 202], "scalartyp": [76, 186, 198, 199], "storag": [76, 80, 108, 127, 128, 129, 154, 182, 186, 205, 207, 208, 238], "come": [76, 87, 186, 193, 195, 203, 204, 206, 207, 209, 210, 211, 226, 234, 236, 239, 241], "some": [76, 95, 128, 130, 138, 139, 145, 153, 154, 155, 156, 157, 158, 163, 175, 182, 186, 195, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 218, 223, 226, 230, 232, 234, 235, 237, 239, 241], "ones": [76, 131, 186, 194, 200, 205, 239], "right": [76, 138, 150, 186, 201, 205, 206, 208, 209, 210, 219, 224, 234], "left": [76, 95, 138, 150, 186, 201, 209, 210, 223, 234], "laid": [76, 186, 202], "out": [76, 86, 134, 180, 181, 182, 186, 194, 195, 202, 206, 208, 210, 219, 228, 234, 241], "control": [76, 127, 128, 129, 135, 152, 153, 161, 162, 186, 195, 200, 205, 206, 207, 208, 210, 211, 217, 219, 230, 238], "finer": 76, "grain": [76, 210], "manner": [76, 92, 186], "trigger": [76, 137, 186], "textur": [76, 186, 210], "fetch": [76, 186, 210, 230], "restrict": [76, 77, 151, 183, 184, 185, 186, 202, 205, 206, 207, 210, 211, 219, 230], "There": [76, 81, 87, 95, 130, 135, 137, 149, 163, 186, 188, 193, 194, 195, 202, 207, 208, 211, 226, 228, 234, 235, 237], "alias": [76, 81, 153, 186, 194, 201, 210], "scope": [76, 86, 134, 135, 161, 162, 186, 194, 206, 207, 210, 218, 239, 241], "enforc": [76, 186, 200, 208, 211], "specifi": [76, 77, 79, 81, 82, 85, 87, 88, 93, 122, 127, 128, 130, 131, 146, 147, 150, 152, 153, 154, 174, 177, 178, 185, 186, 195, 199, 200, 201, 202, 207, 211, 217, 229, 230, 238, 241], "variabl": [76, 77, 79, 84, 103, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 146, 147, 152, 153, 180, 181, 194, 195, 196, 197, 200, 206, 211, 218, 223, 230, 237], "rank_dynam": [76, 186], "reference_type_is_lvalue_refer": [76, 77, 186], "lvalu": [76, 77, 186, 210], "scalar_array_typ": [76, 186], "properli": [76, 92, 161, 162, 186, 204, 230, 241], "specialis": [76, 186, 210], "sacado": [76, 186], "fad": [76, 186], "const_scalar_array_typ": [76, 186], "non_const_scalar_array_typ": [76, 186], "strip": [76, 186], "const_value_typ": [76, 186], "non_const_value_typ": [76, 147, 179, 186], "certain": [76, 87, 88, 130, 137, 149, 152, 179, 186, 193, 195, 202, 207, 211, 219, 241], "compound": [76, 186], "memory_trait": [76, 186], "non_const_typ": [76, 77, 186], "const_typ": [76, 77, 186], "handl": [76, 77, 81, 95, 146, 147, 148, 151, 153, 156, 158, 160, 186, 200, 202, 204, 206, 208, 210, 235, 241], "reference_typ": [76, 77, 186], "pointer_typ": [76, 77, 186], "size_typ": [76, 81, 82, 87, 186, 206, 210, 235], "partial": [76, 87, 147, 148, 186, 193, 206], "No": [76, 77, 170, 186], "made": [76, 77, 87, 186, 202, 204, 205, 211, 219, 226, 241], "nullptr": [76, 133], "dt": [76, 79, 186], "prop": [76, 186], "rt": [76, 77, 79], "rp": [76, 77, 79], "inttyp": [76, 77, 186], "is_regular": [76, 186], "standard": [76, 77, 81, 83, 87, 89, 92, 138, 140, 141, 167, 171, 186, 194, 195, 203, 206, 208, 213, 217, 226, 229, 241], "profil": [76, 77, 128, 145, 146, 147, 148, 186, 216, 243], "allocproperti": [76, 186], "view_alloc": [76, 79, 98, 178, 183, 184, 186, 210], "ptr": [76, 87, 127, 129, 137, 182, 186, 210], "required_allocation_s": [76, 186], "nr": [76, 186], "wrapper": [76, 154, 161, 162, 186, 195, 211], "TO": [76, 219], "BE": [76, 219], "scratchspac": [76, 186, 200], "sizeof": [76, 163, 177, 185, 186, 200, 202, 204, 210, 236, 241], "typic": [76, 137, 186, 193, 195, 200, 201, 202, 204, 206, 210, 230, 232, 235, 241], "team_handl": [76, 151, 153, 156, 158, 160, 186], "i0": [76, 77, 146, 147, 155, 157, 159, 185, 186, 223], "i1": [76, 155, 157, 159, 185, 186, 223], "i2": [76, 155, 157, 159, 185, 186], "i3": [76, 155, 157, 159, 186], "i4": [76, 186], "i5": [76, 186], "i6": [76, 186], "beyond": [76, 87, 153, 186, 195, 205, 211, 234], "kokkos_debug": [76, 186, 195], "dim": [76, 77, 79, 186, 233], "architectur": [76, 77, 83, 186, 190, 191, 193, 195, 200, 203, 205, 207, 210, 211, 216, 230, 234, 237, 238], "effici": [76, 77, 81, 186, 203, 209, 210], "cast": [76, 77, 186, 210], "applic": [76, 77, 186, 194, 195, 196, 201, 202, 203, 205, 206, 207, 209, 210, 211, 215, 216, 219, 226, 230, 233, 237, 239, 240, 243], "stride_0": [76, 77, 186], "stride_1": [76, 77, 186], "stride_2": [76, 77, 186], "stride_3": [76, 77, 186], "stride_4": [76, 77, 186], "stride_5": [76, 77, 186], "stride_6": [76, 77, 186], "stride_7": [76, 77, 186], "lowest": [76, 128, 141, 186], "highest": [76, 130, 186, 201, 203, 226], "due": [76, 186, 202, 203, 204, 208, 210, 241], "pad": [76, 178, 186, 187, 205, 207, 208, 210], "belong": [76, 186], "n8": [76, 186], "byte": [76, 128, 129, 137, 138, 154, 186, 210], "use_count": [76, 77, 186], "aim": [76, 186, 210, 226], "legal": [76, 78, 151, 153, 155, 156, 157, 158, 167, 186, 200, 206, 207, 210, 219], "intercept": [76, 186], "illeg": [76, 186, 200, 210], "dsttype": [76, 186], "srctype": [76, 186], "dst_view": [76, 186], "src_view": [76, 186], "scrtype": 76, "met": [76, 186, 227, 229], "is_const": [76, 186], "memoryspaceaccess": [76, 87, 186], "furthermor": [76, 186, 193, 200, 202, 206, 207, 210, 222, 226, 227, 236], "neither": [76, 146, 147, 148, 186, 208], "nor": [76, 146, 147, 148, 186, 208], "k": [76, 87, 95, 130, 151, 152, 157, 160, 179, 186, 200, 209, 210], "hold": [76, 81, 161, 186, 210, 219, 239], "cstdio": [76, 146, 147, 148, 179, 186, 190, 191, 192, 223, 241], "atoi": [76, 122, 146, 147, 148, 179, 186, 223], "inita": [76, 186, 223], "initb": [76, 186, 223], "const_a": [76, 186, 223], "const_b": [76, 186, 223], "setc": [76, 186, 223], "kokkos_dynamicview": 77, "parent": [77, 209, 240], "array_typ": [77, 198, 199], "arg_label": 77, "min_chunk_s": 77, "max_ext": 77, "chunk": [77, 87, 137, 152, 154, 200, 206, 236], "rais": [77, 203, 214], "nearest": [77, 140], "power": [77, 138, 140, 202, 203, 219, 228, 230], "resize_seri": 77, "reserv": [77, 82, 201, 210], "amount": [77, 87, 130, 193, 200, 206, 207], "suffici": [77, 194, 206, 210, 232], "chunk_siz": [77, 87, 152, 154], "outsid": [77, 95, 195, 200, 202, 205, 210, 228, 242], "allocation_ext": 77, "noexcept": [77, 153, 169, 172, 173, 175, 223], "multipli": [77, 103, 106, 121, 168, 200], "alwai": [77, 87, 95, 190, 191, 200, 208, 210, 236], "until": [77, 86, 87, 95, 133, 135, 153, 186, 193, 208, 217, 226, 236, 237, 240], "greater": [77, 132, 138, 150, 152, 171, 210], "initializedata": 77, "kokkos_offsetview": [78, 214], "min0": 78, "max0": 78, "min1": 78, "max1": 78, "min2": 78, "max2": 78, "somelabel": 78, "sinc": [78, 87, 88, 130, 131, 133, 135, 137, 138, 139, 140, 141, 162, 165, 167, 169, 171, 172, 173, 174, 175, 176, 179, 186, 193, 195, 200, 202, 203, 206, 208, 209, 210, 217, 223, 236, 239], "ov": 78, "initializer_list": [78, 150], "instead": [78, 81, 130, 131, 132, 137, 140, 165, 186, 200, 201, 206, 208, 210, 218, 223], "obtain": [78, 200, 202, 210, 230, 235], "begin0": 78, "end0": 78, "exactli": [78, 87, 137, 208, 210], "drop": [78, 133, 195, 202], "slicem": 78, "offsettoslic": 78, "30": 78, "offsetsubview": 78, "make_pair": [78, 164, 209], "21": [78, 195, 222], "assert_eq": 78, "deep": [78, 93, 137, 179, 202, 237], "sens": [78, 149, 204, 205, 208, 210, 241], "similarli": [78, 95, 241], "kokkos_scatterview": [79, 214], "original_view_typ": 79, "original_value_typ": 79, "original_reference_typ": 79, "data_type_info": 79, "duplicateddatatyp": 79, "newli": [79, 128, 129, 163], "internal_data_typ": 79, "internal_view_typ": 79, "internal_view": 79, "variad": 79, "pack": [79, 235], "exec_spac": [79, 179, 187], "scatteraccess": 79, "accumul": [79, 205, 206, 240], "contribute_into": 79, "reset_except": 79, "tbd": 79, "free": [79, 81, 83, 137, 140, 148, 201, 204, 205, 210, 212, 219, 223, 237, 241], "dt1": 79, "vp": 79, "dt2": 79, "ly": 79, "es": 79, "ct": 79, "dp": 79, "foo": [79, 146, 147, 163, 186, 206, 210, 223], "bar": [79, 223], "input_i": 79, "result_i": 79, "kokkos_staticcrsgraph": [80, 214], "simplifi": [80, 198], "manipul": [80, 89, 128, 129, 140, 186], "staticcrsgraphtyp": 80, "row_map": 80, "kokkos_unorderedmap": [81, 214], "design": [81, 82, 95, 195, 202, 203, 205, 208, 216, 219, 226, 229, 230, 235, 237, 239, 240], "ten": [81, 200], "thousand": [81, 235], "consequ": [81, 200, 206, 208], "significantli": [81, 193], "unordered_map": 81, "fail": [81, 128, 179, 208, 210, 228, 230, 239, 241, 242], "exceed": 81, "rehash": 81, "would": [81, 84, 87, 95, 145, 163, 175, 179, 193, 195, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 226, 232, 234, 239, 241], "cach": [81, 137, 154, 193, 195, 200, 202, 205, 207, 210], "friendli": [81, 83, 84, 141, 210, 238], "pod": [81, 147, 148, 200], "plain": [81, 190, 191, 210], "trivial": [81, 95, 162], "copyabl": [81, 161, 162], "capacity_hint": 81, "enough": [81, 87, 226, 228, 234], "requested_capac": 81, "lower": [81, 200], "o": [81, 195, 205], "unorderedmapinsertresult": 81, "invalid_index": 81, "valid_at": 81, "Is": 81, "key_at": 81, "value_at": 81, "hashmap": 81, "success": [81, 128, 129, 230], "successfulli": [81, 227], "present": [81, 87, 132, 192, 194, 201, 205, 226, 230], "did": [81, 197], "valuetypeview": 81, "valuesidxtyp": 81, "lookup": [81, 241], "duplic": [81, 87, 208], "togeth": [81, 87, 206, 207, 235], "report": [81, 226, 229, 230], "impli": [81, 145, 152, 163, 219], "exhaust": 81, "restart": 81, "map_op_typ": 81, "value_view_typ": 81, "noop_typ": 81, "OR": [81, 110, 112, 219], "atomic_add_typ": 81, "atomic_add": [81, 105, 193], "pattern": [81, 85, 87, 93, 122, 130, 149, 151, 152, 193, 200, 210, 212, 234, 243], "umap": 81, "kokkos_vector": [82, 214], "overcom": [82, 95], "issu": [82, 83, 139, 140, 153, 179, 186, 195, 200, 202, 205, 206, 208, 210, 213, 216, 219, 222, 225, 228, 229, 230], "reli": [82, 186, 205, 208, 226], "heavili": [82, 195, 211], "grant": [82, 219], "mani": [82, 87, 88, 95, 130, 194, 195, 203, 205, 206, 207, 208, 210, 211, 230, 238, 239, 241], "limit": [82, 87, 95, 141, 154, 192, 194, 195, 200, 203, 205, 208, 210, 219, 222, 228, 229, 240], "below": [82, 87, 92, 95, 122, 132, 133, 138, 140, 141, 146, 147, 152, 186, 195, 198, 210, 211, 217, 219, 226, 230, 236], "synopsi": [82, 140], "push_back": 82, "const_point": 82, "const_refer": 82, "const_iter": 82, "accessor": 82, "pop_back": 82, "max_siz": 82, "front": [82, 200], "back": [82, 95, 193, 195, 200, 205, 207, 237], "lower_bound": 82, "theend": 82, "comp_val": 82, "device_to_host": 82, "host_to_devic": 82, "on_host": 82, "perspect": [82, 87, 188, 205], "on_devic": 82, "set_overalloc": 82, "extra": [82, 87, 88, 95, 128, 130, 208, 217], "buffer": [82, 137, 200, 235], "dispatch": [83, 85, 95, 145, 146, 147, 148, 149, 154, 159, 160, 163, 200, 202, 205, 221, 234, 239, 243], "task": [83, 85, 193, 205, 207, 226, 231, 243], "common": [83, 86, 87, 89, 130, 137, 139, 141, 149, 178, 179, 184, 195, 196, 197, 200, 202, 206, 207, 208, 211, 219, 235], "mathemat": [83, 89, 140, 141, 208, 230], "style": [83, 135, 161, 195, 211, 223, 229], "port": [83, 207, 210], "hardwar": [83, 137, 163, 193, 195, 200, 201, 203, 205, 206, 207, 218, 226, 229, 230], "idiom": [83, 95], "recogn": [83, 84, 135, 188, 200, 201, 202, 208, 211], "sfina": [83, 84, 141], "macro": [83, 92, 146, 167, 195, 202, 206, 210, 230, 242], "etc": [83, 137, 153, 194, 195, 210], "kokkos_detectionidiom": [84, 214], "extens": [84, 170, 195, 212, 216, 226, 229, 230], "iso": [84, 87, 190, 191, 192, 208, 210], "iec": 84, "ts": [84, 153, 240], "19568": 84, "2017": [84, 228], "draft": [84, 87, 226], "cplusplu": 84, "github": [84, 195, 204, 213, 216, 226, 227, 228, 229, 241], "io": 84, "v2": [84, 93, 219, 230], "html": [84, 140, 163], "meta": [84, 195], "origin": [84, 103, 105, 106, 129, 163, 193, 208, 209, 210, 212, 219, 228, 230, 239], "propos": [84, 190, 191, 192, 208, 216, 226, 229], "www": [84, 212, 219], "open": [84, 140, 150, 152, 154, 202, 213, 216, 227, 230], "jtc1": 84, "sc22": 84, "wg21": 84, "doc": [84, 140], "paper": [84, 212], "2015": 84, "n4436": 84, "pdf": 84, "void_t": 84, "detector": 84, "exposit": 84, "convien": 84, "metafunct": 84, "leverag": [84, 195, 211, 226], "archetyp": [84, 87], "alwaysvoid": 84, "value_t": 84, "false_typ": [84, 141], "true_typ": [84, 141], "simplif": [84, 87], "detected_t": 84, "nonesuch": 84, "delet": [84, 133, 161, 182, 210, 226], "is_detect": 84, "alia": [84, 130, 137, 177, 190, 191, 209, 210, 236], "detected_or_t": 84, "is_detected_exact": 84, "expect": [84, 95, 122, 191, 194, 200, 202, 203, 206, 208, 209, 211, 226, 227], "is_detected_convert": 84, "To": [84, 95, 128, 129, 137, 146, 178, 179, 195, 196, 200, 201, 203, 204, 206, 209, 210, 211, 213, 217, 226, 227, 230, 233, 241], "is_convert": 84, "later": [84, 130, 194, 197, 204, 206, 208, 210, 218, 241], "is_detected_v": 84, "is_detected_exact_v": 84, "is_detected_convertible_v": 84, "helper": 84, "copy_assign_t": 84, "declval": [84, 209], "Then": [84, 195, 209, 210, 211], "easili": [84, 204, 210, 240, 241], "is_copy_assign": 84, "is_canonical_copy_assign": 84, "mytyp": 84, "ptrdiff_t": [84, 137, 185, 210], "diff_t": 84, "declar": [84, 140, 147, 194, 201, 206, 210, 218], "our": [84, 204, 205, 207, 230, 233, 241], "our_difference_typ": 84, "executionpolicyconcept": 85, "abstract": [85, 87, 95, 122, 130, 137, 149, 190, 191, 200, 203, 207, 208, 216], "place": [85, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 129, 130, 137, 148, 149, 200, 201, 202, 204, 206, 207, 208, 219, 228, 230, 235, 241], "nestedpolici": 85, "summari": [85, 228, 230], "setter": [85, 150, 152], "hip": [85, 87, 88, 94, 137, 150, 152, 163, 179, 195, 201, 206, 210, 216, 217, 229, 230], "sycl": [85, 87, 88, 94, 137, 140, 150, 152, 163, 195, 201, 216, 217, 222], "schedul": [85, 87, 150, 152, 154, 200, 240], "through": [85, 95, 146, 147, 148, 150, 152, 153, 193, 195, 197, 200, 201, 203, 204, 205, 206, 208, 209, 210, 212, 213, 219, 226, 230, 232, 235, 241], "steal": [85, 150, 152], "queue": [85, 150, 152, 163, 226, 240], "machin": [85, 150, 152, 195, 203, 207, 208, 211, 221, 228, 230], "backend": [85, 86, 87, 132, 136, 137, 140, 150, 152, 155, 157, 159, 163, 169, 172, 174, 194, 195, 201, 202, 206, 211, 216, 222, 228, 229, 236, 237, 241], "indextyp": [85, 87, 150, 151, 152, 154, 200], "travers": [85, 150, 152], "launchbound": [85, 87, 150, 152], "maxthread": [85, 150, 152], "minblock": [85, 150, 152], "launch": [85, 93, 95, 145, 150, 152, 153, 154, 200, 210, 230, 237, 239, 240], "worktag": [85, 147, 148, 150, 152, 199, 214], "someclass": [85, 150, 152], "detail": [86, 87, 91, 92, 93, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 133, 137, 141, 146, 166, 185, 194, 195, 196, 199, 203, 206, 210, 211, 226, 227, 230], "shutdown": 86, "resourc": [86, 134, 136, 137, 152, 163, 200, 201, 204, 205, 206, 207, 216, 229, 237, 240, 241], "destruct": [86, 87, 161, 162], "thu": [86, 147, 151, 153, 186, 192, 195, 200, 201, 202, 204, 206, 207, 210, 226, 228, 236, 237, 240, 241, 242], "context": [86, 87, 95, 134, 135, 155, 156, 157, 158, 159, 160, 186, 233, 234, 237, 241], "automat": [86, 122, 132, 137, 195, 201, 202, 206, 208, 210, 215, 229, 234, 236], "aid": 86, "mistak": 86, "live": [86, 210, 226], "my_view": [86, 133, 134, 135, 180, 181], "destructor": [86, 133, 134, 135, 153, 210, 223], "switch": [86, 193, 202, 228], "subsequ": [86, 95, 135, 154, 219, 235], "driven": [87, 226], "essenti": [87, 208, 230], "incept": 87, "recent": [87, 228], "readili": 87, "fact": [87, 239], "hasn": 87, "realli": [87, 133, 195, 204, 211], "even": [87, 95, 129, 130, 133, 134, 137, 147, 194, 195, 199, 202, 205, 207, 209, 210, 219, 232, 235, 239, 242], "agre": [87, 219, 227], "merg": [87, 226, 228, 229, 230], "languag": [87, 88, 92, 130, 137, 149, 194, 203, 205, 206, 208, 209, 210, 211, 212, 233], "featur": [87, 88, 130, 137, 149, 170, 194, 195, 200, 201, 202, 206, 208, 210, 211, 213, 217, 226, 227, 228, 230], "formal": [87, 93, 130, 137, 149, 188, 205], "rapid": [87, 217], "expans": 87, "demand": [87, 236], "lack": [87, 206, 207], "harden": 87, "acut": 87, "ever": [87, 130, 137, 149, 200, 210], "project": [87, 194, 195, 205, 211, 213, 225, 227, 229, 230], "horizon": 87, "resili": [87, 216], "few": [87, 95, 130, 172, 195, 200, 210, 230], "best": [87, 190, 191, 194, 201, 210, 237, 240], "core": [87, 88, 193, 195, 200, 201, 203, 205, 207, 213, 216, 226, 229, 230, 238], "addition": [87, 93, 130, 178, 186, 197, 210], "promot": [87, 130, 137, 139, 226, 230], "plan": [87, 95, 206, 216], "good": [87, 95, 130, 193, 194, 200, 206, 207, 210, 213, 219, 238, 239], "holist": 87, "interact": [87, 164, 195, 227, 236, 239], "experi": [87, 203, 207, 210, 230], "garner": 87, "year": [87, 194, 212, 226, 227, 228], "particip": [87, 175, 209, 226, 229], "executor": 87, "effort": [87, 194, 195, 210, 216, 226, 230], "2011": [87, 205, 206], "sutton": 87, "stroustrup": 87, "guid": [87, 149, 203, 206, 216], "particular": [87, 119, 120, 125, 130, 162, 193, 195, 200, 201, 202, 206, 207, 210, 211, 219, 222, 229, 230, 235, 239], "constraint": [87, 200], "axiom": 87, "philosophi": 87, "focus": 87, "balanc": [87, 95], "flexibl": [87, 130, 202], "eas": 87, "learn": [87, 130, 206], "far": [87, 95, 205, 210, 239], "though": [87, 137, 195, 242], "pure": [87, 202, 203, 241], "veri": [87, 95, 195, 205, 206, 208, 211, 235], "slightli": [87, 202], "By": [87, 195, 200, 205, 206, 207, 208, 210], "minim": [87, 194, 197, 201, 206, 226], "cognit": 87, "perhap": 87, "import": [87, 195, 200, 202, 205, 206, 209, 210, 219, 226, 230, 234, 237], "subsumpt": 87, "hierarchi": [87, 130, 200, 207, 216], "branch": [87, 153, 155, 156, 157, 158, 200, 207, 213, 222, 226, 228, 229, 230], "width": [87, 208, 228], "roughli": [87, 200, 227], "speak": [87, 95, 241], "high": [87, 95, 154, 194, 200, 203, 207, 208, 210, 211, 212, 226], "major": [87, 88, 194, 202, 208, 210, 216, 226, 229, 230], "visibl": [87, 130, 137], "minor": [87, 88, 194, 226], "memorylayout": 87, "taskschedul": [87, 95], "treat": [87, 137, 205, 206, 230], "kokkos_concept": 87, "enumer": [87, 194], "iterationpattern": 87, "question": [87, 203, 219, 226, 227], "friend": [87, 95, 130], "rather": [87, 95, 130, 137, 201, 211], "alik": 87, "extern": [87, 95, 195, 210, 213, 229, 243], "off": [87, 201, 205, 210, 217, 240], "look": [87, 130, 201, 204, 206, 208, 209, 210, 241], "copyconstruct": 87, "defaultconstruct": 87, "is_integral_v": 87, "scratch_memory_spac": [87, 130, 153, 200], "ostream": [87, 130], "ostr": [87, 130], "in_parallel": [87, 130], "print_configur": [87, 130, 132], "ve": [87, 204, 241], "extrapol": 87, "progress": [87, 205, 207, 226, 227, 228], "eventu": [87, 194], "further": [87, 147, 195, 200, 204, 208, 210, 226, 230, 235, 240, 241], "cannot": [87, 130, 131, 135, 138, 145, 175, 187, 201, 208, 219, 226, 240], "constrain": [87, 207], "known": [87, 139, 140, 205, 209, 216, 222, 228, 235], "decid": [87, 205, 206, 229, 230], "argu": 87, "around": [87, 182, 195, 202, 204, 210, 222, 232, 235, 237, 241, 242], "wherebi": 87, "meet": [87, 93, 130, 151, 153, 178, 185, 219, 226, 227, 229], "definit": [87, 122, 167, 188, 205, 206, 219, 234, 235, 239, 242], "practic": [87, 95, 130, 137, 140, 149, 163, 186, 203, 208, 210, 237, 239], "converg": [87, 203], "relev": [87, 103, 105, 106, 216, 226, 235], "site": [87, 230], "artifact": 87, "assess": [87, 227], "intent": [87, 194, 210, 233], "expol": 87, "resulttyp": 87, "executionspaceof": 87, "executionpolicyof": 87, "impos": [87, 210], "kokkos_parallel": 87, "technic": [87, 210, 211], "correct": [87, 90, 95, 195, 200, 204, 206, 209, 210, 227, 230, 241], "rvalu": 87, "wouldn": [87, 197], "breviti": 87, "parallelfor": 87, "parallelscan": 87, "parallelscanwithtot": 87, "red": 87, "executionspaceofreduct": 87, "kokkos_parallel_reduc": 87, "parallelreduc": 87, "closur": [87, 153, 200, 206], "implexecutionspaceof": 87, "exclud": [87, 194, 206, 219], "uniquetoken": 87, "add": [87, 122, 124, 146, 188, 193, 194, 195, 198, 200, 202, 205, 208, 210, 211, 215, 219, 226, 232, 239, 240], "uniquetokenexecutionspac": 87, "uniquetokenscop": 87, "itok": 87, "gtok": 87, "sleep": 87, "wake": 87, "unclear": 87, "concret": [87, 205], "teampolicyintern": [87, 214], "nice": [87, 208], "could": [87, 194, 197, 204, 205, 207, 209, 210, 226, 241], "refactor": 87, "noth": [87, 127, 130, 137, 149, 167, 205, 206, 210, 219], "mind": [87, 210], "close": [87, 200, 206, 208, 213, 226], "semiregular": 87, "todo": [87, 204, 241], "openmptargetspac": 87, "mem": [87, 190, 192], "dealloc": [87, 126, 127, 128, 129, 137, 186, 202, 209, 210, 238], "implmemoryspac": 87, "sharedallocationrecord": 87, "get_label": 87, "allocate_track": 87, "reallocate_track": 87, "deallocate_track": 87, "print_record": 87, "get_record": 87, "mem1": 87, "mem2": 87, "implrelatablememoryspac": 87, "deepcopi": [87, 93], "verifyexecutioncanaccessmemoryspac": 87, "verifi": [87, 226, 230], "exec": 87, "think": [87, 95, 133, 210, 232, 241], "achiev": [87, 137, 200, 202, 210, 230, 234], "signific": [87, 138, 210, 237, 239], "dispar": 87, "teamthreadrangeboundariesstruct": [87, 151], "teamvectorrangeboundariesstruct": 87, "basicexecutionpolici": 87, "index_typ": [87, 149, 152, 154], "cours": 87, "execution_polici": [87, 152, 176], "weren": 87, "mayb": 87, "chunkedexecutionpolici": 87, "set_chunk_s": [87, 152, 154], "complic": [87, 206, 210], "pretti": [87, 95, 130], "straightforward": [87, 178, 234, 235], "iteratetil": 87, "seem": [87, 211], "kokkos_openmp_parallel": 87, "were": [87, 130, 139, 140, 141, 192, 204, 205, 230, 241], "conceptu": [87, 238], "surfac": 87, "area": [87, 129], "Of": [87, 205, 217], "d": [87, 155, 159, 174, 182, 185, 194, 198, 199, 200, 204, 205, 206, 208, 209, 210, 219, 234, 241], "still": [87, 88, 163, 193, 194, 197, 200, 208, 210, 237], "shortcut": [87, 130, 149], "probabl": [87, 95, 200, 206, 208], "teach": [87, 206], "advanc": [87, 130, 206, 230, 243], "ax": [87, 237], "me": 87, "why": [87, 201, 237], "axi": 87, "extend": [87, 203], "overhead": [87, 95, 145, 206, 208, 210, 234], "describ": [87, 95, 122, 130, 137, 149, 154, 192, 196, 203, 204, 205, 207, 208, 212, 213, 217, 219, 223, 230, 237, 238, 240, 241], "isn": [87, 95, 130, 204, 241], "concern": [87, 203, 205, 235, 239], "simplest": [87, 200, 201, 235], "But": [87, 196, 200, 204, 210, 239], "kokkos_vers": 88, "patch": [88, 226], "10000": [88, 206, 210], "kokkos_enable_debug": [88, 167, 217], "kokkos_enable_debug_bounds_check": [88, 217], "kokkos_enable_debug_dualview_modify_check": [88, 217], "kokkos_enable_deprecated_code_3": [88, 217], "kokkos_enable_deprecation_warn": 88, "warn": [88, 132, 186, 194, 201, 210, 211, 214, 217, 222, 226, 228], "kokkos_enable_tun": [88, 217], "bind": [88, 201, 216, 217, 219, 233], "tune": [88, 195, 201, 211, 217, 234, 243], "2422": 88, "kokkos_enable_complex_align": 88, "align": [88, 128, 187, 208, 210, 229, 238], "kokkos_enable_aggressive_vector": [88, 217], "assumpt": [88, 201], "ignor": [88, 95, 200, 208], "aggress": [88, 210, 217], "ifdef": [88, 202], "kokkos_enable_seri": [88, 195, 217], "kokkos_enable_openmp": [88, 195, 217], "kokkos_enable_openmptarget": [88, 217], "kokkos_enable_thread": [88, 195, 217], "kokkos_enable_cuda": [88, 195, 217], "kokkos_enable_hip": [88, 195, 217], "kokkos_enable_hpx": [88, 217], "kokkos_enable_sycl": [88, 195, 217], "kokkos_enable_cuda_constexpr": [88, 217], "kokkos_enable_cuda_lambda": [88, 217], "kokkos_enable_cuda_ldg_intrinsinc": 88, "ldg": [88, 217], "intrins": [88, 122, 138, 190, 191, 196, 202, 208, 210, 217, 233], "kokkos_enable_cuda_relocatable_device_cod": [88, 217], "relocat": [88, 211, 217, 229], "kokkos_enable_cuda_uvm": [88, 217, 231], "kokkos_enable_hip_multiple_kernel_instanti": [88, 217], "instanti": [88, 194, 205, 207, 208, 210, 217], "improv": [88, 194, 203, 206, 207, 217, 219, 222, 227, 234], "kokkos_enable_hip_relocatable_device_cod": [88, 217], "latest": [88, 92, 194, 222], "path": [88, 132, 194, 195, 201, 217, 226, 230, 235], "expos": [88, 130, 199, 200, 207, 234], "kokkos_enable_cxx14": 88, "kokkos_enable_cxx17": 88, "kokkos_enable_cxx20": 88, "inform": [88, 122, 167, 194, 196, 201, 205, 207, 210, 211, 219, 226, 227, 230, 232, 235, 238, 241], "libari": 88, "kokkos_enable_hwloc": [88, 195, 217], "libhwloc": [88, 195], "numa": 88, "kokkos_enable_libdl": [88, 217], "link": [88, 92, 186, 195, 211, 216, 219, 230, 234], "linker": [88, 195, 211], "libdl": [88, 195, 217], "kokkos_enable_libquadmath": 88, "gcc": [88, 195, 211, 218, 222, 228, 229], "quad": 88, "precis": [88, 195, 204, 233, 235, 239, 241], "math": [88, 89, 208, 216, 243], "kokkos_enable_onedpl": [88, 217], "onedpl": [88, 217], "tpl": [88, 195, 211], "affect": [88, 174, 195, 210, 222], "kokkos_arch_armv80": [88, 217], "armv8": [88, 195, 217], "kokkos_arch_armv8_thunderx": [88, 217], "cavium": [88, 230], "thunderx": [88, 195, 230], "kokkos_arch_armv81": [88, 217], "kokkos_arch_armv8_thunderx2": [88, 217], "thunderx2": 88, "kokkos_arch_amd_avx2": 88, "avx2": 88, "zen": [88, 217], "kokkos_arch_avx": 88, "avx": 88, "kokkos_arch_avx2": 88, "kokkos_arch_avx512xeon": 88, "skylak": 88, "avx512": 88, "kokkos_arch_knc": [88, 217], "intel": [88, 195, 200, 208, 222, 226, 228, 229, 230], "knight": [88, 230], "corner": [88, 224], "xeon": [88, 195, 230], "phi": [88, 139, 195], "kokkos_arch_avx512m": 88, "mic": 88, "kokkos_arch_power8": [88, 217], "ibm": [88, 195, 222, 228], "power8": [88, 195, 217, 228], "kokkos_arch_power9": [88, 217], "power9": [88, 217], "kokkos_arch_intel_gen": [88, 217], "kokkos_arch_intel_dg1": [88, 217], "iri": [88, 217], "xemax": 88, "kokkos_arch_intel_gen9": [88, 217], "gen9": [88, 217], "kokkos_arch_intel_gen11": [88, 217], "gen11": [88, 217], "kokkos_arch_intel_gen12lp": [88, 217], "gen12lp": [88, 217], "kokkos_arch_intel_xehp": [88, 217], "xe": [88, 217], "hp": [88, 217], "kokkos_arch_intel_pvc": [88, 217], "pont": [88, 217], "vecchio": [88, 217], "kokkos_arch_intel_gpu": 88, "kokkos_arch_kepl": 88, "nvidia": [88, 195, 200, 207, 208, 226, 229, 230, 235], "kepler": [88, 195, 217], "kokkos_arch_kepler30": [88, 217], "cc": [88, 195, 233], "kokkos_arch_kepler32": [88, 217], "kokkos_arch_kepler35": [88, 217], "kokkos_arch_kepler37": [88, 217], "kokkos_arch_maxwel": 88, "maxwel": [88, 195, 217], "kokkos_arch_maxwell50": [88, 217], "kokkos_arch_maxwell52": [88, 217], "kokkos_arch_maxwell53": [88, 217], "kokkos_arch_navi": 88, "amd": [88, 226, 229], "navi": 88, "kokkos_arch_navi1030": 88, "v620": [88, 217], "w6800": [88, 217], "gfx1030": [88, 217], "kokkos_arch_pasc": 88, "pascal": [88, 217], "kokkos_arch_pascal60": [88, 217], "kokkos_arch_pascal61": [88, 217], "kokkos_arch_volta": 88, "volta": [88, 217], "kokkos_arch_volta70": [88, 217], "kokkos_arch_volta72": [88, 217], "kokkos_arch_turing75": [88, 217], "ture": [88, 217], "kokkos_arch_amper": 88, "amper": [88, 217], "kokkos_arch_ampere80": [88, 217], "kokkos_arch_ampere86": [88, 217], "kokkos_arch_ada89": [88, 217], "ada": [88, 217], "kokkos_arch_hopp": 88, "hopper": [88, 217], "kokkos_arch_hopper90": [88, 217], "kokkos_arch_amd_zen": 88, "kokkos_arch_amd_zen2": 88, "zen2": [88, 217], "kokkos_arch_amd_zen3": 88, "zen3": [88, 217], "kokkos_arch_vega": 88, "vega": 88, "kokkos_arch_vega900": [88, 217], "mi25": [88, 217], "gfx900": [88, 217], "kokkos_arch_vega906": [88, 217], "mi50": [88, 217], "mi60": [88, 217], "gfx906": [88, 217], "kokkos_arch_vega908": [88, 217], "mi100": [88, 217], "gfx908": [88, 217], "kokkos_arch_vega90a": [88, 217], "mi200": [88, 217], "seri": [88, 203, 217, 230], "gfx90a": [88, 217], "kokkos_mathematicalconst": [89, 139, 214], "backport": [89, 226], "sqrt2": [89, 139], "kokkos_mathematicalfunct": [89, 140, 214], "consist": [89, 140, 174, 195, 200, 205, 207, 208, 219, 229, 235], "portabl": [89, 130, 139, 193, 202, 203, 205, 206, 208, 212, 218, 226, 233, 234, 236, 238, 243], "fab": [89, 140], "sqrt": [89, 140, 190, 192, 208, 218], "sin": [89, 139, 140, 190], "kokkos_numerictrait": [89, 141, 214], "ad": [89, 103, 105, 106, 141, 174, 192, 194, 195, 200, 201, 208, 211, 226, 240, 241], "23": [89, 141, 212, 215, 216, 229], "numeric_limit": [89, 141], "kokkos_bitmanipul": [89, 138], "individu": [89, 95, 140, 141, 202, 211, 219, 230, 239], "compos": [90, 235], "team_size_max": [90, 154], "team_size_recommend": [90, 142, 143, 144, 154], "strive": [92, 208], "howev": [92, 95, 130, 163, 200, 202, 203, 204, 205, 206, 207, 208, 210, 219, 222, 230, 234, 241], "deviat": 92, "approach": [92, 95, 193, 203, 205, 206, 208, 210, 239, 243], "section": [92, 161, 162, 195, 200, 202, 204, 205, 206, 210, 217, 219, 228, 230, 241], "usag": [92, 94, 132, 134, 135, 145, 146, 160, 164, 174, 190, 191, 192, 195, 202, 207, 209, 210, 211, 233], "guidanc": [92, 190, 213], "relationship": [93, 95, 163, 200, 210], "entiti": [93, 95, 194, 205, 219], "msp1": 93, "msp2": 93, "retriev": [93, 95, 152, 197, 240], "v1": [93, 230], "word": [93, 130, 137, 149, 195, 208], "shape": 93, "attribut": [93, 207, 208, 210, 214, 219], "intercessori": 93, "executionspaceconcept": [94, 145, 178], "defaulthostexecutionspac": [94, 173, 201, 202], "hipspac": [94, 210, 214], "hiphostpinnedspac": [94, 210], "hipmanagedspac": [94, 218], "sycldeviceusmspac": 94, "syclhostusmspac": 94, "syclsharedusmspac": 94, "sharedspac": [94, 231], "sharedhostpinnedspac": [94, 236], "memoryspaceconcept": [94, 178], "lightweight": 95, "substanti": 95, "futur": [95, 130, 203, 207, 210, 221, 226, 228, 240], "Not": [95, 210, 219], "too": [95, 145, 210, 222, 241], "small": [95, 135, 137, 206, 240], "inher": 95, "plenti": 95, "scale": [95, 130, 195, 230], "easier": [95, 206, 213, 236, 238], "hierarch": [95, 155, 156, 157, 158, 159, 160, 205, 206, 207, 221, 240, 243], "ordinari": [95, 206], "portion": [95, 208, 219], "haev": 95, "addit": [95, 130, 140, 179, 196, 201, 203, 205, 206, 208, 210, 219, 226, 234, 239, 241], "output": [95, 130, 136, 182, 193, 199, 207, 230, 234], "mytask": 95, "produc": [95, 203, 206, 208, 235, 237], "task_spawn": [95, 240], "host_spawn": 95, "tasksingl": [95, 240], "taskteam": [95, 146, 147, 148], "former": [95, 195, 206, 210, 230], "worker": [95, 147, 240], "spawn": [95, 240], "basicfutur": [95, 240], "when_al": [95, 240], "scheduler_typ": 95, "discuss": [95, 205, 208, 210, 219, 226, 227], "fut": 95, "mytaskfunctor": 95, "readi": [95, 194, 210], "earliest": 95, "fut2": 95, "myothertaskfunctor": 95, "my_funct": [95, 130], "sched": 95, "my_result_typ": 95, "my_task_result": 95, "ff": [95, 228], "better": [95, 195, 200, 210, 211, 223, 237], "never": [95, 130, 194, 195, 208, 210, 211], "share": [95, 153, 193, 195, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 216, 219, 226, 234, 235, 241], "transit": [95, 217, 226], "undefin": [95, 128, 129, 132, 186, 202, 210, 218, 242], "worst": 95, "kind": [95, 205, 206, 209, 219, 230], "bug": [95, 130, 194, 204, 222, 226, 227, 228, 241], "segfault": [95, 211], "hour": [95, 194], "is_nul": 95, "attempt": [95, 205, 217], "poll": 95, "is_readi": [95, 240], "forbidden": 95, "anywher": 95, "abil": [95, 146, 205, 208, 233], "yet": [95, 129, 170, 188, 194, 203, 205, 208, 209, 226, 228], "extrem": [95, 204, 205, 210, 241], "expens": [95, 209], "sledgehamm": 95, "sparingli": 95, "alon": [95, 195, 219], "pend": 95, "decis": [95, 200, 226, 235], "piec": 95, "help": [95, 198, 201, 203, 206, 210, 211, 241], "cost": [95, 193, 203, 209, 210], "tradit": [95, 137], "reus": [95, 200, 239], "successor": 95, "respawn": [95, 240], "future_typ": [95, 240], "got": 95, "redund": [95, 235], "lead": [95, 130, 194, 200, 204, 210, 211, 226, 236, 241], "lazi": 95, "third": [95, 195, 200, 202, 205, 209, 211, 219, 226, 234], "serv": [95, 130, 226], "observ": [95, 145, 241], "effect": [95, 130, 145, 186, 194, 195, 200, 206, 207, 208, 239, 241], "taskprior": 95, "regular": [95, 210, 226], "low": [95, 193, 203, 206, 208, 210], "boolean": [96, 130, 180, 181, 182, 201, 206, 208], "kokkos_assert": 97, "kokkos_swap": 97, "device_id": [97, 131, 132, 172, 173], "num_devic": [97, 169, 173], "num_thread": [97, 131, 132, 169, 172, 201], "critic": [98, 205, 226], "_view": 98, "awar": [98, 200, 205, 210, 212, 234], "bundl": [98, 187], "loos": [98, 178, 188], "behav": [98, 179, 188, 208, 209, 210], "old_val": [100, 102], "ptr_to_valu": [100, 101, 102, 103, 104, 105, 106, 107], "comparison_valu": [100, 101], "was_exchang": 101, "update_valu": [103, 105, 106], "previou": [103, 135, 139, 140, 154, 184, 200, 214, 228], "atomic_fetch_add": [103, 105, 193, 200], "tmp": [103, 200, 234], "atomic_fetch_and": 103, "atomic_fetch_div": 103, "divid": [103, 106, 146, 147, 148, 168, 198, 199, 232, 237], "atomic_fetch_lshift": 103, "atomic_fetch_max": 103, "atomic_fetch_min": 103, "atomic_fetch_mul": 103, "atomic_fetch_mod": 103, "atomic_fetch_or": 103, "atomic_fetch_rshift": 103, "atomic_fetch_sub": [103, 105], "substract": [103, 106], "atomic_fetch_xor": 103, "atomic_and": 105, "atomic_assign": 105, "atomic_decr": 105, "atomic_incr": [105, 193], "atomic_max": 105, "atomic_min": 105, "atomic_or": 105, "atomic_sub": 105, "subtract": 105, "atomic_add_fetch": 106, "atomic_and_fetch": 106, "atomic_div_fetch": 106, "atomic_lshift_fetch": 106, "atomic_max_fetch": 106, "atomic_min_fetch": 106, "atomic_mul_fetch": 106, "atomic_mod_fetch": 106, "atomic_or_fetch": 106, "atomic_rshift_fetch": 106, "atomic_sub_fetch": 106, "atomic_xor_fetch": 106, "conjunct": [108, 151, 193, 195, 200, 226], "bitwis": [109, 110, 138, 210], "AND": [109, 111, 219], "remove_cv": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124], "result_view_typ": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 199], "value_": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 199], "local": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 137, 147, 148, 195, 200, 201, 205, 206, 207, 209, 210, 217, 218, 228, 230, 236], "reduction_ident": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 196, 198, 206], "resid": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 137, 207, 236], "customtyp": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124], "_min": [113, 114, 117, 118], "vallocscalar": [114, 116, 123, 200], "loc": [114, 116, 125, 197], "_max": [114, 115, 116, 117, 118], "minmaxscalar": [117, 123, 200], "min_val": [117, 118, 119, 120, 197], "max_val": [117, 118, 119, 120, 197], "minmaxlocscalar": [118, 123, 200], "min_loc": [118, 119, 197], "max_loc": [118, 119, 197], "minvalu": [119, 120], "maxvalu": [119, 120], "hypothet": 122, "brief": [122, 223, 226], "build": [122, 130, 179, 194, 200, 201, 203, 206, 213, 216, 217, 228, 230, 243], "monoid": 122, "val1": 122, "val2": 122, "ident": [122, 130, 152, 154, 178, 198, 200, 201, 205, 206, 210, 232], "el": 122, "under": [122, 179, 194, 195, 206, 210, 213, 219, 226, 230], "reducesum": 122, "lval": 122, "l": [122, 140, 157, 205, 228], "resultvalu": 125, "resultindex": 125, "shrink": [126, 183, 184], "throw": [127, 128, 129, 154, 202, 210], "runtime_error": 127, "failur": [127, 128, 129, 154, 186, 219, 228, 229], "uniniti": [128, 150, 152, 154, 178, 183, 184, 210], "metadata": 128, "succe": 128, "suitabl": [128, 194, 206, 234], "rawmemoryallocationfailur": [128, 129], "thrown": [128, 136], "memadvis": [128, 129, 186], "tool": [128, 132, 146, 147, 148, 194, 201, 216, 217, 243], "kokkosp": 128, "On": [128, 129, 193, 195, 200, 209, 217, 241], "avoid": [128, 129, 130, 194, 200, 209, 210, 211, 218, 226, 228, 241], "leak": [128, 129, 210], "freed": [129, 200, 210], "new_siz": 129, "invalid": [129, 210], "rare": [130, 137], "offload": 130, "talk": [130, 137, 149, 204, 241], "theoret": [130, 137, 149], "treatment": [130, 137, 149], "disclaim": [130, 137, 149, 219], "term": [130, 137, 149, 205, 210, 213, 219, 226, 239], "anyon": [130, 137, 149, 213], "who": [130, 137, 149, 203, 210, 226, 227, 229, 235, 238], "knew": [130, 137, 149], "confus": [130, 137, 149, 210], "often": [130, 137, 149, 186, 193, 200, 202, 203, 205, 206, 208, 210, 230, 235], "shini": [130, 137, 149], "pramet": 130, "surpris": 130, "answer": [130, 200, 210], "ll": [130, 204, 210, 241], "nowher": 130, "intermedi": [130, 206], "static_assert": [130, 179, 209, 236], "incompat": [130, 195], "prefer": [130, 194, 201, 206, 210, 211, 217, 218, 219, 242], "explicit": [130, 140, 146, 180, 181, 182, 200, 206, 207, 218, 226], "simpli": [130, 195, 200, 202, 204, 208, 211, 233, 234, 235, 239, 241], "mental": 130, "exercis": [130, 219, 230], "translat": [130, 204, 219, 241], "tend": [130, 193, 207], "verbos": 130, "much": [130, 146, 194, 199, 203, 205, 206, 208, 210], "risk": [130, 194, 219], "lose": 130, "caution": [130, 195], "necessarili": [130, 179, 200, 202, 207, 210, 219], "strengthen": 130, "unspecifi": [130, 166, 186, 207], "care": [130, 194, 208], "print": [130, 132, 165, 174, 182, 201, 217], "arraylayout": 130, "recommend": [130, 154, 200, 206, 208, 210, 222, 230], "scratchmemoryspac": 130, "ex2": 130, "ex1": 130, "usabl": [130, 138, 210], "shorthand": [130, 137], "lh": [130, 190, 191], "typetrait": [130, 137], "num_numa": 131, "ndevic": 131, "skip_devic": 131, "disable_warn": [131, 132], "favor": [131, 204, 241], "One": [131, 154, 193, 195, 197, 200, 202, 208, 210, 234, 235, 239, 241], "distinguish": [131, 141, 206], "kokkoscor": 132, "set_num_thread": [132, 133, 135, 201], "set_device_id": [132, 201], "set_disable_warn": [132, 135], "initializ": 132, "introduc": [132, 200, 206, 207, 229, 236], "unset": 132, "let": [132, 153, 195, 200, 202, 204, 205, 206, 209, 210, 235, 241], "tabl": [132, 195, 201, 210, 230], "set_parameter_nam": 132, "parameter_typ": 132, "parameter_nam": 132, "has_parameter_nam": 132, "get_parameter_nam": 132, "summar": 132, "id": [132, 161, 169, 172, 173, 200, 201, 202], "minu": 132, "map_device_id_bi": 132, "mpi_rank": [132, 201], "round": [132, 140, 201, 205], "robin": [132, 201], "mpi": [132, 134, 135, 193, 195, 201, 203, 209, 211, 231, 238, 243], "disabl": [132, 195, 201, 206], "messag": [132, 201, 203, 209, 226, 228, 230], "configur": [132, 201, 208, 215, 217, 219, 226, 228, 229, 230, 236], "tune_intern": 132, "autotun": [132, 201], "heurist": [132, 201], "tools_lib": 132, "full": [132, 188, 190, 193, 201, 202, 204, 207, 208, 241], "ld_library_path": [132, 201], "tools_help": 132, "command": [132, 133, 135, 195, 211, 230], "line": [132, 133, 135, 137, 193, 195, 210, 229, 242], "tools_arg": 132, "set_print_configur": 132, "set_map_device_id_bi": [132, 133, 135], "environ": [132, 134, 135, 136, 137, 169, 172, 173, 195, 202, 206, 210, 211, 218, 228, 230], "thats": 133, "correctli": [133, 195, 206, 211], "presenc": [133, 141, 218], "unhandl": 133, "charact": [133, 219], "uncondition": 133, "precondit": [133, 150, 152], "is_initi": [133, 134, 135, 167], "unique_ptr": 133, "make_opt": 133, "nullopt": 133, "regardless": [133, 205], "clean": [134, 228], "is_fin": [134, 135, 148, 167], "detroi": 134, "ill": 134, "mpi_fin": [134, 201], "push_finalize_hook": 134, "regist": [134, 136, 174, 192, 193, 200, 208, 215], "invoc": 134, "erron": 135, "pars": [135, 195, 201], "whenev": 135, "seen": [135, 194, 203, 230], "decrement": [135, 186, 193, 210], "implicitli": [135, 178], "multibyt": 135, "backward": [135, 221], "mpi_init": [135, 201], "enter": [136, 202, 203, 210, 240], "exit": [136, 162, 201], "iostream": [136, 172], "my_hook": 136, "cruel": 136, "world": [136, 174], "goodby": 136, "side": [137, 145, 167, 186, 200, 206, 207, 209, 227], "virtual": [137, 210, 221, 231], "xnack": 137, "unit": [137, 195, 200, 202, 203, 205, 227], "movement": 137, "os": 137, "driver": [137, 230, 236], "moment": [137, 195, 210], "preprocessor": [137, 195, 211, 242], "kokkos_has_shared_spac": 137, "has_shared_spac": [137, 236], "correspoind": 137, "stai": 137, "availab": 137, "event": [137, 151, 200, 219, 230], "nevertheless": [137, 200, 205, 210, 241], "kokkos_has_shared_host_pinned_spac": 137, "has_shared_host_pinned_spac": 137, "bit_cast": 138, "byteswap": 138, "has_single_bit": 138, "bit_ceil": 138, "bit_floor": 138, "bit_width": 138, "rotl": 138, "rotr": 138, "countl_zero": 138, "countl_on": 138, "countr_zero": 138, "countr_on": 138, "popcount": 138, "reinterpret": 138, "represent": [138, 208, 210], "counterpart": 138, "_builtin": 138, "suffix": [138, 140], "magic": 138, "log2": [139, 140], "log10": [139, 140, 190], "inv_pi": 139, "inv_sqrtpi": 139, "ln2": 139, "ln10": 139, "sqrt3": 139, "inv_sqrt3": 139, "egamma": 139, "toolchain": [139, 195, 218], "henc": [139, 206, 218], "pi_v": 139, "motiv": [140, 203, 208, 238], "borrow": 140, "llvm": [140, 219], "compilecudawithllvm": 140, "clang": [140, 195, 211, 222, 228, 229, 243], "ok": [140, 155, 157, 159, 186, 210, 218], "everyth": [140, 208, 210], "__device__": [140, 202, 218], "nvcc": [140, 195, 222, 228], "overrid": [140, 195, 211, 241], "sinf": 140, "goal": [140, 200, 202, 203, 226, 230, 234, 238], "cmath": 140, "sqrtf": 140, "sqrtl": 140, "integraltyp": 140, "arithmet": [140, 141, 163], "reader": [140, 194, 195, 203, 205], "cpprefer": 140, "com": [140, 212, 215, 216, 227, 228, 229], "fmod": 140, "remaind": 140, "remquo": 140, "fma": [140, 190], "fmax": 140, "fmin": 140, "fdim": 140, "nan": 140, "exp": [140, 190], "exp2": [140, 190], "expm1": 140, "log": [140, 190, 228], "log1p": 140, "exponenti": 140, "pow": [140, 190], "cbrt": [140, 190], "hypot": [140, 190], "co": [140, 190, 194, 226], "tan": [140, 190], "asin": [140, 190], "aco": [140, 190], "atan": [140, 190], "atan2": [140, 190], "trigonometr": 140, "sinh": [140, 190], "cosh": [140, 190], "tanh": [140, 190], "asinh": [140, 190], "acosh": [140, 190], "atanh": [140, 190], "hyperbol": 140, "erf": [140, 190], "erfc": [140, 190], "tgamma": [140, 190], "lgamma": [140, 190], "gamma": 140, "ceil": 140, "floor": 140, "trunc": 140, "lround": 140, "llround": 140, "nearbyint": 140, "rint": 140, "lrint": 140, "llrint": 140, "frexp": 140, "ldexp": 140, "modf": 140, "scalbn": 140, "scalbln": 140, "ilog": 140, "logb": 140, "nextaft": 140, "nexttoward": 140, "copysign": [140, 190], "fpclassifi": 140, "isfinit": 140, "isinf": 140, "isnan": 140, "isnorm": 140, "signbit": 140, "isgreat": 140, "isgreaterequ": 140, "isless": 140, "islessequ": 140, "islessgreat": 140, "isunord": 140, "classif": 140, "4767": 140, "feel": [140, 212], "keep": [140, 209, 210, 238], "track": [140, 219, 226, 227], "bewar": 140, "unqualifi": [140, 218], "qualif": [140, 218], "exeriment": 140, "p1841": 141, "break": [141, 186, 194, 204, 211, 241], "monolith": 141, "apart": [141, 193, 194, 210], "denot": [141, 154, 186], "infin": 141, "finite_min": 141, "finite_max": 141, "epsilon": 141, "round_error": 141, "norm_min": 141, "denorm_min": 141, "reciprocal_overflow_threshold": 141, "quiet_nan": 141, "signaling_nan": 141, "characterist": [141, 205, 207, 210, 230, 240], "digit": 141, "digits10": 141, "max_digits10": 141, "radix": 141, "min_expon": 141, "min_exponent10": 141, "max_expon": 141, "max_exponent10": 141, "finite_min_v": 141, "floatingpoint": 141, "norm_min_v": 141, "finite_max_v": 141, "epsilon_v": 141, "round_error_v": 141, "infinity_v": 141, "quiet_nan_v": 141, "signaling_nan_v": 141, "denorm_min_v": 141, "digits_v": 141, "digits10_v": 141, "max_digits10_v": 141, "radix_v": 141, "min_exponent_v": 141, "min_exponent10_v": 141, "max_exponent_v": 141, "max_exponent10_v": 141, "absenc": 141, "has_infin": 141, "enable_if_t": 141, "legacy_std_numeric_limits_infin": 141, "kokkos_execpolici": [142, 143, 144], "policytyp": [142, 143, 144], "recommended_team_s": [142, 143, 144], "outstand": [145, 179, 205, 219], "exec1": 145, "exec2": 145, "stuff": [145, 172, 208], "touch": [145, 210], "wait": [145, 153, 163, 200, 206, 240], "finish": [145, 146, 179, 193, 206, 210], "asynchron": [146, 147, 179, 205, 210, 237, 243], "calle": 146, "execpolici": [146, 147, 148], "functortyp": [146, 147, 148, 154], "hook": [146, 147, 148, 201], "integertyp": [146, 147, 148], "work_tag": [146, 147, 148, 152, 154], "iN": [146, 147], "captur": [146, 200, 206, 210, 233, 239], "loop1": [146, 147, 148], "greet": 146, "taga": 146, "implicit": [146, 151, 156, 158, 160, 186, 200, 206, 233, 237], "tagb": 146, "thread_rank": 146, "loop2": [146, 147], "deduc": [147, 177, 209, 238, 241], "reducerargu": 147, "reducerargumentnonconst": 147, "fulfil": [147, 198, 199], "handletyp": [147, 148], "reducervaluetyp": 147, "value_count": [147, 206], "length": [147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 183, 184, 186, 197, 202, 210, 238], "overwritten": [147, 148, 153, 210], "neutral": [147, 148], "lsum": [147, 151, 156, 158, 160, 200], "lf": [147, 197], "lmin": [147, 197], "tagmax": 147, "tagmin": 147, "lmax": 147, "team_rank": [147, 153, 200, 202], "post": [148, 226, 239], "returntyp": 148, "return_valu": 148, "postfix_sum": 148, "prefix_sum": 148, "partial_sum": 148, "li": 148, "domin": [149, 203], "elsewher": 149, "parallel_pattern": 149, "hand": [149, 193, 200, 208, 217, 241], "wavi": 149, "beginn": 149, "tile": [150, 210, 234], "interv": [150, 152, 154], "outer": [150, 200, 210, 234], "inner": [150, 200, 210], "ot": 150, "IT": 150, "tt": 150, "policy_1": [150, 152, 154, 200], "policy_2": [150, 152, 154, 200], "t0": 150, "t1": [150, 164, 168], "t2": [150, 164, 168, 175], "teammembertyp": [151, 156, 158, 160], "threadvectorrangeboundariesstruct": 151, "threadsinglestruct": 151, "vectorsinglestruct": 151, "team_barri": [151, 153, 155, 156, 157, 158, 159, 160, 200], "encount": [151, 182, 218, 240], "thread_sum": 151, "team_sum": [151, 156, 158, 160, 200], "a_rowsum": [151, 155, 156, 157, 158, 160], "inherit": [152, 179, 230], "policytrait": 152, "schedule_typ": [152, 154], "iteration_pattern": [152, 154], "launch_bound": [152, 154], "work_spac": 152, "work_begin": 152, "work_end": 152, "discret": [152, 163, 197, 234], "chunk_size_": 152, "init_arg": 152, "chunksiz": 152, "workgroup": 152, "policy_3": [152, 154, 200], "policy_4": [152, 154], "policy_6": 152, "policy_7": 152, "teamtask": 153, "subject": [153, 170, 194, 210, 219], "leagu": [153, 154, 200, 207, 240], "league_s": [153, 154, 200], "workitem": 153, "team_shmem": [153, 200], "team_scratch": [153, 200], "thread_scratch": 153, "lexic": [153, 194], "arriv": [153, 200], "team_broadcast": 153, "source_team_rank": 153, "var": 153, "broadcast": [153, 200], "reducertyp": 153, "team_reduc": 153, "accross": [153, 208], "team_scan": 153, "teampolcii": 153, "policy_typ": 153, "set_scratch_s": [153, 154, 200], "4096": 153, "tid": 153, "lid": 153, "scratch_memory_typ": 153, "vector_length": [154, 214], "auto_t": 154, "lazili": 154, "perteamvalu": 154, "per_team": 154, "perthreadvalu": 154, "per_thread": 154, "closest": 154, "bandwidth": [154, 200, 207, 208, 210], "twice": [154, 210], "overwrit": [154, 195, 206], "scratch_size_max": 154, "maxim": [154, 202], "scratch_siz": 154, "team_size_": 154, "team_scratch_s": 154, "thread_scratch_s": 154, "policy_5": 154, "extent_1": [155, 157, 159], "extent_2": [155, 157, 159, 210], "extent_i": [155, 157, 159], "violat": [155, 157, 159, 200, 206, 210, 241], "num": [155, 157, 159, 201, 230], "leaguerank": [155, 157, 159], "teamsum": [155, 157, 159], "threadsum": [155, 159, 160], "leaguesum": [155, 157], "itype1": [156, 158, 160], "itype2": [156, 158, 160], "teamtyp": 157, "vectorsum": [157, 159], "tsum": 160, "kokkos_profiling_profilesect": [161, 214], "stop": 161, "raii": [161, 162], "stringand": 161, "leav": [161, 202, 210, 237], "destroi": [161, 210, 223], "sectionnam": 161, "createprofilesect": 161, "sectionid": 161, "destroyprofilesect": 161, "startsect": 161, "stopsect": 161, "scopedregion": 161, "ownership": [161, 162, 219], "kokkos_profiling_scopedregion": 162, "push": [162, 202, 222, 228], "pop": 162, "flow": [162, 230], "earli": [162, 205, 229], "regionnam": 162, "pushregion": 162, "popregion": 162, "do_work_v1": 162, "myapp": 162, "do_work": 162, "cond": 162, "rememb": [162, 204, 206, 210, 230, 241], "do_work_v2": 162, "profilingsect": [162, 214], "weigth": 163, "weight": 163, "fraction": 163, "is_arithmetic_v": 163, "n_partit": 163, "3rd": 163, "stream": [163, 179, 207, 210, 243], "otherparam": 163, "param": [163, 223], "f1": [163, 240], "f2": [163, 240], "functor1": 163, "functor2": 163, "f3": 163, "functor3": 163, "kokkos_pair": [164, 214], "fulli": [164, 235, 241], "std_pair": 164, "int_float": 164, "converted_std_pair": 164, "converted_kokkos_pair": 164, "to_std_pair": 164, "first_typ": 164, "second_typ": 164, "kokkos_defaulted_funct": [164, 241], "kokkos_forceinline_funct": [164, 198], "wise": [164, 180, 181, 182], "whose": [164, 194, 206, 209, 210, 234, 238], "msg": 165, "kokkos_abort": 165, "ndebug": 167, "endif": [167, 195, 202], "assert": [167, 185, 208, 219], "diagnost": 167, "text": [167, 219], "predefin": [167, 200], "__file__": 167, "__line__": 167, "imag": 168, "real": [168, 233], "imaginari": 168, "im": 168, "convers": [168, 186, 202, 208, 219, 226, 233, 239], "realtyp": 168, "nodiscard": [169, 172, 173], "anounc": 170, "clamp": [171, 214], "boundari": [171, 209], "kokkos_clamp": 171, "kokkos_minmax": 171, "cerr": 172, "kokkos_printf": 174, "format": [174, 202, 210, 229], "stdout": 174, "across": [174, 203, 205, 207, 208, 216], "hello": 174, "is_nothrow_move_constructible_v": 175, "is_nothrow_move_assignable_v": 175, "resolut": [175, 198, 226, 227, 239], "unless": [175, 194, 195, 206, 208, 210, 219, 242], "is_move_constructible_v": 175, "is_move_assignable_v": 175, "swappabl": 175, "yield": [175, 186, 242], "ambigu": [175, 218], "situat": [175, 193, 196, 205, 208, 226, 239], "adl": 175, "measur": [176, 205], "time1": 176, "time2": 176, "impl_detail": [177, 185], "view_arg": 177, "subviewhold": 177, "deal": [178, 204, 209, 241, 242, 243], "host_mirror": 178, "a_view": 178, "host_mirror_view": 178, "host_mirror_view_spac": 178, "withoutiniti": [178, 183, 184, 187, 210, 214], "implmirrortyp": 178, "viewctorarg": [178, 183, 184], "conduct": [178, 226, 229], "circumst": [179, 226], "viewdest": 179, "viewsrc": [179, 186, 223], "copy_spac": 179, "submit": [179, 200, 219, 230], "cudamemcpyasync": 179, "d_a": [179, 202], "d_a_2": 179, "d_a_5": 179, "h_a": [179, 202, 237], "h_a_2": 179, "d_a_2_5": 179, "deviceview": 179, "temporari": [179, 197, 207, 210, 218], "h_view_tmp": 179, "kokkos_layout": [180, 181, 182], "lai": [180, 181, 182], "convent": [180, 181, 207, 210, 217], "signifi": [180, 181, 182], "is_extent_construct": [180, 181, 182], "full_mesh": 182, "mesh": [182, 232], "mesh_subcompon": 182, "z": [182, 190, 208], "frequent": 182, "noncontigu": [182, 210], "array_layout_max_rank": 182, "s0": 182, "s4": 182, "s5": 182, "s6": 182, "s7": 182, "order_dimens": 182, "itypeord": 182, "itypedimen": 182, "dimen": 182, "3d": [182, 202, 233], "grow": [183, 184, 203], "subext": 184, "191": 185, "subset": [185, 192, 193, 195, 209, 230], "arg_r": 185, "remove_const_t": [185, 209], "s3415": 185, "star": 186, "bracket": 186, "2d": [186, 197, 202, 233], "5d": 186, "Their": [186, 238], "integral_const": [186, 190, 191], "nullari": 186, "encourag": [186, 195, 200, 211, 213, 229], "akin": [186, 234], "_dynam": 186, "sign": [186, 201, 210], "msvc": [186, 195, 222], "i7": 186, "is_assign": 186, "assign_data": 186, "arg_data": 186, "anywai": [186, 202], "viewdst": [186, 223], "dynamic_rank": 186, "a1": [186, 210, 240], "a2": [186, 217, 240], "a3": [186, 240], "a4": 186, "a5": 186, "a6": 186, "a7": 186, "a8": 186, "a9": 186, "a10": [186, 217], "a11": 186, "a12": 186, "a13": 186, "kokkos_view": 187, "viewstr": 187, "view_wrap": 187, "pointer_to_wrapping_memori": 187, "bypass": 187, "allowpad": 187, "impl_defin": 187, "notabl": 188, "simd_mask": [189, 190, 192, 208], "where_express": 189, "kokkos_simd": [190, 191, 192, 208], "abi": [190, 191, 192, 208], "simd_abi": [190, 191], "fallback": [190, 191], "nativ": [190, 191, 210], "extract": [190, 191, 202, 234], "mask_typ": [190, 191, 208], "abi_typ": [190, 191], "element_aligned_tag": [190, 192, 208], "copy_from": [190, 192, 208], "copy_to": [190, 192, 208], "mag": 190, "sgn": 190, "native_simd": [190, 192, 208], "simd_typ": [190, 191, 192, 208], "zu": [190, 241], "simd": [191, 192, 216, 221, 243], "iff": 191, "native_simd_mask": [191, 208], "basi": [192, 195, 219, 234], "const_where_express": 192, "scatter_to": 192, "gather_from": 192, "safer": 192, "domain": [192, 212], "chapter": [193, 195, 200, 202, 205, 206, 207, 209, 210, 230], "understand": [193, 195, 202, 204, 205, 209, 210, 241], "resolv": [193, 226], "histogram": 193, "create_histogram": 193, "try": [193, 201, 205, 210, 211, 213, 226], "lost": 193, "race": [193, 202, 205, 232], "particl": [193, 238, 239], "neighbour": 193, "forc": [193, 195, 200, 205, 207, 208, 239], "compute_forc": 193, "forceloop": 193, "neighbor": [193, 239], "particle_id": 193, "neighbour_id": 193, "some_contribut": 193, "colour": 193, "ii": [193, 202, 219, 233], "iii": [193, 219], "disadvantag": 193, "transfer": [193, 210, 219], "fall": [193, 200, 203, 210, 229, 240], "uninterrupt": 193, "cycl": [193, 195, 226, 227, 230], "hinder": 193, "throughput": [193, 203], "createhistogram": 193, "scheme": 193, "find_indici": 193, "findindici": 193, "div": 193, "lshift": 193, "mod": 193, "mul": 193, "rshift": 193, "sub": [193, 209], "xor": 193, "histogram_atom": 193, "transpar": 193, "clever": 194, "constitut": [194, 200, 219, 230], "tension": 194, "freedom": 194, "frustrat": [194, 208], "pain": 194, "deliber": [194, 219], "accident": [194, 226], "breakag": [194, 226], "kokkos_": [194, 217], "chanc": 194, "inadvert": 194, "broken": 194, "kokkos_impl_": 194, "notic": [194, 219, 235, 236, 241], "period": [194, 226], "hous": 194, "prime": 194, "incomplet": 194, "newer": [194, 195, 222], "particularli": [194, 234], "problemat": [194, 242], "obei": 194, "interfer": [194, 205], "collison": 194, "prefac": 194, "myproject_": 194, "disambigu": 194, "cap": 194, "usual": [194, 195, 202, 205, 206, 210, 228], "syntact": 194, "revis": [194, 219, 226], "behind": [194, 208, 233, 237], "publish": 194, "drive": [194, 208], "advantag": [194, 208, 237, 239], "workaround": [194, 228], "older": [194, 226], "recompil": 194, "against": [194, 195, 200, 211, 213, 219, 228, 229, 242], "occasion": [194, 222], "overal": [194, 210, 230, 237], "migratori": 194, "evolutionari": 194, "ideal": [194, 226], "wrong": [194, 209, 210], "wast": [194, 210], "continu": [194, 195, 202, 203, 211, 226, 230, 235], "subdirectori": [194, 195], "union": [194, 219], "fashion": [194, 209], "sole": [194, 203, 219], "invok": [194, 205, 210, 217], "explain": [195, 200, 205, 210], "embed": [195, 203, 219], "mix": [195, 202, 205, 210, 211, 222], "advic": 195, "mainli": [195, 210], "directori": [195, 219, 226, 228, 230], "protect": [195, 200, 202, 203, 205, 208, 242], "prevent": [195, 200, 202, 210, 232], "kokkoscore_config": 195, "h": [195, 212, 231, 237], "mention": [195, 230], "compliant": [195, 241], "date": [195, 219, 226, 228], "nightli": [195, 230], "readm": [195, 213, 228, 230], "repositori": [195, 226, 228, 229], "At": [195, 201, 204, 206, 208, 210, 226, 230, 241], "88": [195, 222], "nvc": [195, 222, 229], "rocm": [195, 222, 241], "xl": [195, 222, 228], "fujitsu": [195, 222], "arm": [195, 222], "linkag": [195, 222], "fopenmp": 195, "hwloc": [195, 201, 217, 230], "As": [195, 196, 200, 203, 205, 206, 208, 211, 219, 230, 235, 241], "robust": [195, 211, 226], "strongli": [195, 210, 211], "cmakelist": [195, 211], "txt": [195, 201, 211, 219], "find_packag": [195, 211, 217], "target_link_librari": [195, 211], "mytarget": [195, 211], "processor": [195, 200, 203, 205, 207, 230], "dkokkos_root": [195, 211], "lib64": 195, "especi": [195, 205, 206, 208, 227, 230, 236], "nvcc_wrapper": 195, "dcmake_cxx_compil": [195, 211], "bin": 195, "cmake_cxx_flag": 195, "propag": [195, 211], "illustr": [195, 200, 210, 211, 233], "add_subdirectori": [195, 211], "dir": [195, 217], "include_directori": 195, "kokkos_include_dirs_ret": 195, "arch": [195, 217], "mkdir": [195, 228], "cd": [195, 228], "srcdir": [195, 211], "dcmake_install_prefix": [195, 211], "my_install_fold": 195, "dkokkos_enable_openmp": [195, 211], "parti": [195, 202, 205, 211, 219], "altern": [195, 202, 208, 211, 217, 230], "download": [195, 211, 230], "env": [195, 211], "folder": [195, 211], "setup": [195, 211, 230, 237], "sh": [195, 211, 230], "variant": [195, 206, 210, 211, 226], "deactiv": [195, 211], "chosen": [195, 211], "exact": [195, 211], "info": [195, 211, 216, 217], "hash": [195, 210, 211], "human": [195, 211], "readabl": [195, 208, 211, 219], "spec": [195, 211], "dii": 195, "wish": [195, 201], "downstream": [195, 211, 215], "almost": [195, 203, 208, 232], "myproject": 195, "myvers": 195, "idiosyncrasi": 195, "annoi": 195, "dspack_workaround": 195, "spack_workaround": 195, "spack_cxx": 195, "cmake_cxx_compil": 195, "cxx": [195, 233], "technolog": [195, 203, 219], "orient": [195, 239], "softwar": [195, 203, 208, 219, 226, 229], "framework": [195, 205, 212], "solut": [195, 203, 204, 208, 219, 226, 230, 234, 241], "larg": [195, 208, 210, 211, 217, 234, 240], "multiphys": 195, "scientif": [195, 203, 210], "problem": [195, 202, 203, 227, 230, 236], "organ": [195, 215, 217, 226, 227, 239], "stand": 195, "trilinos_enable_kokko": 195, "tpetra": 195, "infer": [195, 209], "trilinos_enable_openmp": 195, "ON": [195, 211, 217, 219], "autogener": 195, "cmake_c_compil": 195, "cmake_fortran_compil": 195, "kokkos_arch_": [195, 217], "archcod": 195, "kokkos_arch_hsw": [195, 217], "haswel": [195, 230], "uvm": [195, 202, 204, 207, 210, 235, 241], "export": 195, "cuda_launch_block": [195, 211], "cuda_managed_force_device_alloc": [195, 211], "aris": [195, 219], "stabil": 195, "symbol": 195, "ln": 195, "kokkos_source_dir_overrid": 195, "kokkoskernel": 195, "kokkoskernels_source_dir_overrid": 195, "script": [195, 211, 228, 229], "ompi_cxx": 195, "openmpi": [195, 201], "digest": 195, "matter": [195, 205], "kokkos_link_depend": 195, "kokkos_cpp_depend": 195, "kokkos_cppflag": 195, "kokkos_cxxflag": 195, "kokkos_ldflag": 195, "kokkos_lib": 195, "tutori": [195, 203, 216], "kokkos_path": [195, 228], "IN": [195, 219], "root": [195, 208, 217], "cuda_path": 195, "toolkit": [195, 228], "kokkos_devic": 195, "kokkos_arch": [195, 208], "knl": [195, 217, 228], "knc": [195, 217], "snb": [195, 217], "hsw": [195, 217], "bdw": [195, 217], "kepler30": 195, "kepler35": 195, "kepler37": 195, "maxwell50": 195, "pascal60": 195, "pascal61": 195, "armv81": [195, 217], "kokkos_use_tpl": 195, "kokkos_opt": 195, "aggressive_vector": 195, "kokkos_cuda_opt": [195, 206], "force_uvm": 195, "use_ldg": 195, "rdc": [195, 217], "enable_lambda": [195, 206], "hwloc_path": 195, "ye": [195, 201], "kokkos_cxx_standard": 195, "lib": [195, 201], "cxxflag": [195, 230], "emb": 195, "metaprogram": [195, 210], "shortcom": 195, "prepend": 195, "xcompil": 195, "shell": [195, 211, 230], "analyz": [195, 230], "ccbin": 195, "edit": [195, 205, 224, 226, 228, 230], "nvcc_wrapper_default_compil": 195, "peopl": [195, 204, 241], "modul": [195, 207, 228, 230, 233, 243], "icpc": 195, "pgc": 195, "attach": [195, 201, 219, 225, 230, 240], "degrad": 195, "accommod": 196, "click": [196, 224], "head": [196, 240], "summat": 197, "parabl": 197, "minreduc": 197, "min_reduc": 197, "minloc_typ": 197, "minlocreduc": 197, "lminloc": 197, "reducer_typ": 197, "team_typ": 197, "team_minmaxloc": 197, "row_minmaxloc": 197, "thread_minmaxloc": 197, "gui": [197, 206, 243], "hurt": 197, "team_minmax": 197, "the_arrai": 198, "tr": [198, 199], "upd": [198, 199], "ndx": [198, 199], "myarrai": 199, "summyarrai": 199, "references_scalar": 199, "arraysumresult": 199, "exploit": [200, 234], "syntax": [200, 206, 209, 210, 217], "parallel_": [200, 207, 210, 214], "node": [200, 203, 207, 216, 230, 231, 240], "modern": [200, 211], "character": [200, 207], "higher": [200, 203], "orthogon": [200, 205], "heterogen": [200, 201, 207, 230, 238], "cluster": [200, 235], "multicor": [200, 203, 205, 207], "hyper": 200, "instruct": [200, 208, 213], "socket": [200, 211], "network": [200, 230], "llc": [200, 219], "l1": 200, "l2": 200, "sm": 200, "warp": [200, 202, 210], "wave": 200, "collabor": [200, 203], "adapt": [200, 204, 207, 241], "suggest": [200, 230], "tightli": [200, 234, 243], "gather": 200, "choic": [200, 202, 205, 210, 211], "sometim": [200, 210, 211, 227, 228], "flat": [200, 240], "grid": [200, 202, 209], "inter": [200, 205], "guess": 200, "n_workset": 200, "choos": [200, 201, 206, 207, 210, 219], "sometag": 200, "action": [200, 226, 227, 229, 230], "team_memb": [200, 240], "coordin": 200, "everyon": 200, "consum": 200, "indirect": [200, 219], "workset": 200, "lifetim": 200, "recycl": 200, "cell": [200, 234], "team_shmem_s": 200, "double_s": 200, "team_shared_a": 200, "get_shmem": 200, "team_shared_b": 200, "160": 200, "kilobyt": 200, "gigabyt": 200, "mostli": [200, 202], "raw": [200, 206, 214], "shared_int_2d": 200, "shared_s": 200, "shmem_siz": 200, "layer": [200, 202, 203, 208, 233], "teamthreadloop": 200, "threadvectorloop": 200, "consciou": 200, "difficult": [200, 208, 234], "claus": [200, 206, 213, 239], "catch": [200, 210, 226, 229], "loop_count": 200, "emploi": [200, 203, 205], "prepar": [200, 219, 228], "stage": 200, "innermost": 200, "compris": [200, 205], "workset_s": 200, "vectoriz": 200, "decor": 200, "pragma": [200, 202, 206], "ivdep": 200, "repetit": [200, 208], "bodi": [200, 210, 222, 240], "shared_arrai": 200, "somefunct": [200, 202], "global_arrai": 200, "my_offset": 200, "inner_lsum": 200, "inner_": 200, "_finalize_": 201, "subpackag": [201, 210], "alphabet": [201, 216], "interpret": 201, "primarili": [201, 226, 227], "openacc": [201, 203], "sup": 201, "str": 201, "quot": [201, 208], "whitespac": 201, "delimit": [201, 210], "insensit": 201, "promis": [201, 205, 206, 207], "conflict": [201, 210, 219], "mvapich": 201, "slurm": 201, "deriv": [201, 203, 204, 219, 241], "mpich": 201, "dash": 201, "underscor": 201, "kokkos_num_thread": 201, "set_xxx": 201, "xxx": 201, "has_xxx": 201, "get_xxx": 201, "setting": 201, "shut": 201, "down": [201, 204, 236, 241], "atexit": 201, "mpi_comm_self": 201, "adopt": [202, 207], "facilit": 202, "lift": 202, "inde": [202, 210, 239], "cumbersom": 202, "__host__": [202, 218], "__cuda_arch__": 202, "blockidx": 202, "threadidx": 202, "blockdim": 202, "omp_set_num_thread": 202, "bookkeep": 202, "ask": [202, 205, 207, 210, 226, 229], "princip": 202, "insur": 202, "app": 202, "placement": [202, 204, 241], "150": 202, "2d_arrai": 202, "200": [202, 210], "scenario": [202, 207, 208], "receiv": [202, 219, 230], "straight": 202, "mykokkosfunct": 202, "host_spac": 202, "t_1d_device_view": 202, "t_2d_device_view": 202, "d_b": 202, "h_b": 202, "t_team": 202, "t_1d_view": 202, "t_3d_view": 202, "had": [202, 239], "whatev": 202, "a_old": 202, "unfortun": [202, 239, 241], "unrestrict": 202, "bring": [202, 206, 233], "massiv": 202, "penalti": [202, 210], "1000": [202, 206, 210], "uneven": 202, "polymorph": [202, 207, 212], "bla": [202, 210, 243], "matric": [202, 210], "dot": 202, "cubla": 202, "kokkos_have_cuda": 202, "call_cublas_dot": 202, "ptr_on_devic": 202, "extent_0": [202, 210], "cbla": 202, "call_cblas_dot": 202, "field": [203, 204, 226, 228, 234, 238, 241], "hpc": [203, 216, 217, 226, 239], "verg": 203, "era": [203, 212], "angl": 203, "rate": 203, "flop": 203, "poor": 203, "workload": 203, "challeng": 203, "energi": 203, "mid": 203, "1990": [203, 206], "enjoi": 203, "seemingli": 203, "homogen": [203, 205, 230, 238], "decad": 203, "commun": [203, 209, 219, 226, 227, 235, 237], "realiz": 203, "review": [203, 226, 229, 230], "broad": 203, "latenc": [203, 205, 210], "medium": [203, 219], "graphic": [203, 205, 217], "gp": 203, "toler": 203, "degre": [203, 207], "divers": 203, "interest": [203, 208, 223, 226], "heritag": 203, "offer": [203, 219], "guidelin": [203, 218], "todai": [203, 205], "cilk": 203, "tbb": 203, "linux": 203, "contemporari": [203, 205], "opencl": 203, "Such": [203, 233, 234], "varieti": [203, 230, 238], "pose": 203, "reminisc": 203, "becam": 203, "invest": [203, 210], "seek": 203, "isol": 203, "fluctuat": 203, "coverag": 203, "supplementari": 203, "gradual": 203, "odditi": [204, 241], "face": [204, 209, 241], "subtl": [204, 241], "classwithvirtualfunct": [204, 241], "somebas": [204, 241], "virtualfunct": [204, 241], "hostclassinst": [204, 241], "deviceclassinst": [204, 241], "cudamalloc": [204, 241], "cudamemcpi": [204, 241], "cudamemcpyhosttodevic": [204, 241], "devicekernel": [204, 241], "somecudapolici": [204, 241], "glanc": [204, 241], "fine": [204, 210, 241], "crash": [204, 241], "nomin": [204, 241], "vpointer": [204, 241], "vtabl": [204, 241], "among": [204, 230, 241], "okai": [204, 241], "amongst": [204, 241], "hidden": [204, 210, 241], "derefer": [204, 241], "credit": [204, 241], "pablo": [204, 241], "aria": [204, 229, 241], "intro": [204, 241, 243], "faithfulli": [204, 241], "merrili": [204, 241], "pseudocod": [204, 241], "hostinst": [204, 241], "deviceinst": [204, 241], "deivc": [204, 241], "techniqu": [204, 241], "ugli": [204, 241], "repo": [204, 216, 241], "setafield": [204, 241], "somehostvalu": [204, 241], "naiv": [204, 208, 241], "wit": [204, 241], "said": [204, 209, 241], "solv": 204, "educ": [204, 241], "slack": [204, 215, 216, 226, 227, 229, 241], "aspect": [205, 207, 208, 230], "programm": [205, 206, 208, 210, 235], "distinct": 205, "exascal": [205, 212], "consult": [205, 210], "ang": 205, "elect": 205, "show": [205, 206, 207, 210, 228], "die": [205, 207], "acceler": [205, 206, 230, 237, 239], "reachabl": 205, "et": [205, 226], "al": [205, 212], "proxi": 205, "sandia": [205, 219, 230], "nation": [205, 219], "laboratori": 205, "lawrenc": 205, "berkelei": 205, "consider": 205, "finit": [205, 232, 234], "packag": [205, 212, 226, 228, 229, 234], "slower": [205, 210], "dram": 205, "volatil": [205, 207, 210, 214], "routin": [205, 233, 234], "collis": 205, "gain": 205, "topic": [205, 206, 226], "coher": [205, 210], "hennessi": 205, "paterson": 205, "weak": 205, "therebi": 205, "fifth": [205, 209], "quantit": 205, "morgan": 205, "kaufmann": 205, "tempt": 205, "author": [205, 212, 219], "background": 205, "scientist": 205, "stick": 205, "proof": 205, "forbid": [205, 210], "implic": 205, "filesystem": 205, "overlap": [205, 231], "reproduc": [205, 219, 227], "awai": [205, 208, 209], "wonder": 205, "great": 205, "markup": 206, "unnecessari": [206, 210], "harmless": [206, 219], "anonym": 206, "suppli": 206, "outermost": 206, "turn": [206, 208, 210], "surround": 206, "stack": [206, 210, 226, 229], "secondli": 206, "circumvent": 206, "harder": 206, "interoper": [206, 208, 221, 233, 243], "omp": [206, 230], "prior": [206, 210, 211, 226, 227, 233, 237], "faster": 206, "trip": 206, "fewer": 206, "encapsul": [206, 207, 209], "semir": 206, "maxplu": 206, "x_": 206, "inf": 206, "columnsum": 206, "Be": 206, "convinc": 206, "numrow": 206, "numcol": 206, "cs": 206, "sequenti": [206, 210, 234], "blelloch": 206, "book": 206, "hi": [206, 227], "phd": 206, "dissert": [206, 208], "val_i": 206, "mit": 206, "press": 206, "necess": 206, "unus": [206, 239], "differenti": 206, "bartag": 206, "rabtag": 206, "foobar": [206, 223], "formul": 207, "vari": [207, 210], "figur": 207, "hybrid": 207, "pim": 207, "principl": [207, 210], "remot": [207, 216, 230, 243], "send": 207, "undetermin": 207, "prescript": 207, "primit": 207, "spin": 207, "dead": 207, "persist": 207, "diverg": 207, "inspir": 207, "vocabulari": [207, 230], "comfort": 207, "reflect": [207, 210], "rewrit": 207, "unoptim": 207, "optimis": 207, "histori": [208, 230], "struggl": 208, "blog": 208, "insight": 208, "drawback": [208, 239], "stanford": 208, "tim": 208, "folei": 208, "heart": 208, "black": 208, "box": 208, "matthia": 208, "kretz": 208, "deliv": 208, "vendor": [208, 226, 243], "fairli": 208, "pictur": 208, "clearli": [208, 219], "odd": 208, "quirk": 208, "tag_typ": 208, "sx": 208, "sy": 208, "sz": 208, "sr": 208, "squar": 208, "emit": [208, 209], "4x": 208, "speedup": [208, 237], "skip": [208, 210], "troublesom": 208, "pitfal": [208, 210], "evenli": 208, "divis": 208, "cleaner": 208, "wide": [208, 210, 226, 230], "reach": [208, 210], "throughout": 208, "slight": 208, "quadratic_formula": 208, "x1": 208, "x2": 208, "discrimin": 208, "sqrt_discrimin": 208, "classic": [208, 222], "familiar": [208, 210, 226], "quadrat": 208, "formula": 208, "liter": 208, "mimic": 208, "roadmap": [208, 226], "regard": [208, 219], "very_expensive_funct": 208, "statement": [208, 219], "spend": [208, 210], "lot": [208, 210, 228], "pick": [209, 210, 226], "notat": 209, "vice": 209, "versa": 209, "cross": [209, 219, 229], "plane": 209, "cube": 209, "n_0": 209, "n_1": 209, "n_": 209, "a_0": 209, "a_1": 209, "a_": 209, "a_j": 209, "n_j": 209, "handi": 209, "matlab": 209, "python": [209, 216, 228, 230, 243], "colon": 209, "fourth": 209, "elabor": [209, 219], "a_sub": 209, "won": [209, 210], "cheaper": 209, "keyword": [209, 211, 214, 216], "easiest": [209, 211], "dens": [209, 216, 243], "inconveni": 209, "my_view_typ": 209, "my_subview_typ": 209, "my_subview_type_deduc": 209, "fast": [210, 228], "intim": 210, "factor": 210, "coder": 210, "tie": 210, "hard": 210, "evolv": 210, "reliev": 210, "burden": [210, 226], "ty": 210, "expert": 210, "easi": [210, 211], "ellips": 210, "asterisk": 210, "typecast": 210, "a_ptr": 210, "malloc": 210, "a0": 210, "arbitrarili": 210, "unprotect": 210, "badli": 210, "therefor": [210, 242], "advis": [210, 219], "deconstructor": 210, "disallow": 210, "indirectli": 210, "novic": 210, "THE": [210, 219, 228], "FOR": [210, 219], "IS": [210, 219], "NO": [210, 219], "rag": 210, "reorgan": 210, "v_outer": 210, "assigne": 210, "wors": 210, "yourself": [210, 228], "rid": 210, "inner_view_typ": 210, "outer_view_typ": 210, "numout": 210, "numinn": 210, "to_str": 210, "device_out": 210, "dispos": 210, "nonown": 210, "a_nonconst": 210, "nonconst": 210, "a_const": 210, "readonlyfunct": 210, "skew": 210, "parenthes": 210, "enclos": 210, "comma": 210, "a_ijk": 210, "rest": 210, "slow": 210, "leftmost": 210, "exempt": 210, "unwind": 210, "incorrect": 210, "100x50x4": 210, "50": [210, 219], "200x50x4": 210, "300x60x4": 210, "300": 210, "java": 210, "s_1": 210, "s_2": 210, "s_3": 210, "dim1": 210, "extent_n": 210, "conserv": 210, "benefici": [210, 219], "heavi": 210, "stringent": 210, "overflow": 210, "lapack": [210, 243], "idea": 210, "lda": 210, "morton": 210, "thereof": [210, 219], "viewmap": 210, "renam": 210, "coalesc": 210, "callbla": 210, "callsomeblasfunct": 210, "invalid_argu": 210, "100000": 210, "biject": 210, "accessspac": 210, "viewallocatewithoutiniti": 210, "affin": 210, "memcopi": 210, "discourag": [210, 218], "circumv": 210, "defeat": 210, "polymorp": 210, "legaci": [210, 221], "legacyfunct": 210, "x_raw": 210, "len": 210, "myfunct": 210, "somelibraryfunct": 210, "reference_is_lvalu": 210, "sometrait": 210, "someothertrait": 210, "ca": 210, "a_atom": 210, "irregularli": 210, "a_ra": 210, "shorter": 210, "fault": 210, "prolifer": 210, "csr": 210, "spmatvec": 210, "ind": 210, "x_ra": 210, "y_i": 210, "accordingli": 210, "x_view": 210, "functionthattakeskokkosview": 210, "safest": 210, "tree": [211, 219, 228, 240], "exceedingli": 211, "devil": 211, "kokkos_install_prefix": 211, "compiler_used_to_build_kokko": 211, "cmake_polici": 211, "cmp0074": 211, "cmake_build_instal": 211, "cmake_build_in_tre": 211, "kokkos_install_fold": 211, "craype_link_typ": 211, "miss": 211, "benchmark": [211, 217, 230], "bytes_and_flop": 211, "nvlink": [211, 235], "displai": [211, 219], "dev": [211, 228, 230], "articl": 212, "9485033": 212, "trott": [212, 219], "christian": [212, 219, 226], "lebrun": [212, 219], "grandi\u00e9": 212, "damien": [212, 219, 226], "arndt": 212, "daniel": 212, "ciesko": 212, "jan": 212, "dang": 212, "vinh": 212, "ellingwood": 212, "nathan": 212, "gayatri": 212, "rahulkumar": 212, "harvei": 212, "evan": 212, "hollman": 212, "daisi": 212, "ibanez": 212, "dan": 212, "liber": 212, "nevin": 212, "madsen": 212, "jonathan": 212, "mile": 212, "jeff": 212, "poliakoff": 212, "david": 212, "powel": 212, "ami": 212, "rajamanickam": 212, "sivasankaran": 212, "simberg": 212, "mikael": 212, "sunderland": 212, "turcksin": 212, "bruno": 212, "wilk": 212, "jeremiah": 212, "journal": 212, "ieee": 212, "transact": 212, "titl": [212, 219], "2022": [212, 219, 222], "volum": 212, "805": 212, "817": 212, "doi": 212, "1109": 212, "tpd": 212, "2021": [212, 222], "3097283": 212, "ecosystem": [212, 216], "9502936": 212, "berger": 212, "vergiat": 212, "luc": 212, "grandi": [212, 219], "nader": 212, "gligor": 212, "milo": 212, "shipman": 212, "galen": 212, "womeldorff": 212, "geoff": 212, "scienc": [212, 229], "comprehens": [212, 222, 228], "mcse": 212, "3098509": 212, "carteredwards20143202": 212, "manycor": 212, "3202": 212, "3216": 212, "issn": 212, "0743": 212, "7315": 212, "1016": 212, "jpdc": 212, "07": [212, 228], "003": 212, "url": 212, "sciencedirect": 212, "pii": 212, "s0743731514001257": 212, "carter": 212, "edward": 212, "pull": [213, 226, 228, 230, 240], "licens": [213, 215, 216], "bsd": 213, "commerci": [213, 219], "req": 213, "activeexecutionmemoryspac": 214, "host_execution_spac": 214, "host_memory_spac": 214, "kokkos_restrict_execution_to_": 214, "data_spac": 214, "hip_safe_cal": 214, "create_inst": 214, "partition_mast": 214, "num_partit": 214, "partition_s": 214, "kokkos_openmp_inst": 214, "access_error": 214, "kokkos_hip_spac": 214, "hip_internal_safe_call_deprec": 214, "kokkos_hip_error": 214, "kokkos_openmp": 214, "openmpintern": 214, "validate_partit": 214, "getnam": 214, "getsectionid": 214, "kokkos_hip_parallel_team": 214, "kokkos_sycl_parallel_team": 214, "kokkos_openmptarget_exec": 214, "kokkos_cuda_parallel_team": 214, "kokkos_cudaspac": 214, "number_of_alloc": 214, "kokkos_hpx": 214, "masterlock": 214, "kokkos_attribute_nodiscard": 214, "amathfunct": 214, "is_reducer_typ": 214, "index_list_typ": 214, "always_use_kokkos_sort": 214, "finalize_al": 214, "withoutinitializing_t": 214, "wi": 214, "kokkos_thread_loc": 214, "thread_loc": 214, "is_view": 214, "cuda_internal_safe_call_deprec": 214, "cuda_safe_cal": 214, "trail": 214, "kokkosviewlabel": 214, "kokkos_macro": 214, "kokkos_atom": 214, "kokkos_arrai": 214, "kokkos_half": 214, "kokkos_tim": 214, "kokkos_sort": 214, "kokkos_bit": 214, "kokkos_errorreport": 214, "channel": [215, 226, 227, 229], "kokkosteam": [215, 216, 227], "email": 215, "whitelist": 215, "contact": [215, 219], "cmake": [215, 216, 222, 236], "dcmake_cxx_standard": 215, "batch": [216, 243], "pykokko": 216, "checkpoint": 216, "mdspan": 216, "p0009": 216, "stdbla": 216, "p1673": 216, "instal": [216, 217, 230, 235], "video": 216, "lectur": 216, "slide": 216, "faq": 216, "cite": 216, "sensit": 217, "recal": 217, "dkeyword_nam": 217, "kokkos_enable_benchmark": 217, "kokkos_enable_exampl": 217, "kokkos_enable_test": 217, "kokkos_enable_deprecated_code_4": [217, 236], "kokkos_enable_compiler_warn": 217, "kokkos_enable_header_self_containment_test": 217, "kokkos_enable_large_mem_test": 217, "relax": 217, "kokkos_enable_cuda_ldg_intrins": 217, "um": 217, "kokkos_enable_rocthrust": 217, "rocthrust": 217, "kokkos_cuda_dir": 217, "cuda_root": 217, "kokkos_hwloc_dir": 217, "hwloc_root": 217, "kokkos_libdl_dir": 217, "libdl_root": 217, "hpx_dir": 217, "hpx_root": 217, "config": [217, 228, 230], "kokkos_arch_n": 217, "kokkos_arch_a64fx": 217, "sve": 217, "kokkos_arch_amdavx": 217, "amdavx": 217, "armv80": 217, "armv8_thunderx": 217, "armv8_thunderx2": 217, "kokkos_arch_bdw": 217, "kokkos_arch_knl": 217, "kokkos_arch_skx": 217, "skx": 217, "kokkos_arch_snb": 217, "kokkos_arch_spr": 217, "sapphir": 217, "kokkos_arch_zen": 217, "kokkos_arch_zen2": 217, "kokkos_arch_zen3": 217, "eponym": 217, "microarchitectur": 217, "compute_cap": 217, "autodetect": 217, "h100": 217, "lovelac": 217, "l4": 217, "l40": 217, "a40": 217, "a16": 217, "a100": 217, "a30": 217, "t4": 217, "v100": 217, "p40": 217, "p4": 217, "p100": [217, 230], "m60": 217, "m40": 217, "k80": [217, 230], "k40": [217, 230], "k20": 217, "k10": 217, "kokkos_arch_amd_gfx90a": 217, "kokkos_arch_amd_gfx908": 217, "kokkos_arch_amd_gfx906": 217, "kokkos_arch_amd_gfx1100": 217, "7900xt": 217, "gfx1100": 217, "kokkos_arch_amd_gfx1030": 217, "amd_gfx1100": 217, "amd_gfx906": 217, "amd_gfx908": 217, "mi210": 217, "mi250": 217, "mi250x": 217, "amd_gfx90a": 217, "amd_gfx1030": 217, "center": 217, "1550": 217, "dg1": 217, "uhd": 217, "770": 217, "hd": 217, "510": 217, "pro": 217, "580": 217, "wherea": 217, "ahead": [217, 226], "jit": 217, "aot": 217, "hsa_xnack": 218, "explan": 218, "compatibilti": 218, "do_math": 218, "sqrt5": 218, "highli": 218, "z1": 218, "z2": 218, "z3": 218, "copyright": 219, "ntess": 219, "contract": [219, 237], "de": [219, 226], "na0003525": 219, "govern": 219, "retain": 219, "apach": 219, "januari": 219, "2004": 219, "reproduct": [219, 229], "shall": [219, 227], "licensor": 219, "owner": [219, 228, 230, 235], "fifti": 219, "percent": 219, "permiss": [219, 228, 230], "media": 219, "authorship": 219, "appendix": 219, "editori": 219, "annot": 219, "mere": 219, "intention": 219, "behalf": 219, "electron": 219, "verbal": 219, "sent": [219, 235], "mail": 219, "conspicu": 219, "contributor": 219, "whom": 219, "incorpor": 219, "herebi": 219, "perpetu": 219, "worldwid": 219, "charg": 219, "royalti": 219, "irrevoc": 219, "publicli": [219, 229], "sublicens": 219, "patent": 219, "sell": 219, "claim": 219, "infring": 219, "institut": [219, 229], "litig": 219, "counterclaim": 219, "lawsuit": 219, "alleg": 219, "contributori": 219, "redistribut": 219, "recipi": 219, "carri": [219, 238], "promin": 219, "trademark": 219, "pertain": 219, "wherev": [219, 226], "alongsid": 219, "addendum": 219, "constru": 219, "compli": 219, "submiss": [219, 230], "notwithstand": 219, "herein": 219, "supersed": 219, "agreement": 219, "trade": 219, "servic": 219, "customari": 219, "warranti": 219, "law": 219, "AS": 219, "OF": 219, "merchant": 219, "liabil": 219, "theori": [219, 237], "tort": 219, "neglig": 219, "grossli": 219, "liabl": 219, "damag": 219, "incident": 219, "consequenti": 219, "inabl": 219, "loss": 219, "goodwil": 219, "stoppag": 219, "malfunct": 219, "fee": 219, "indemn": 219, "oblig": 219, "indemnifi": 219, "defend": 219, "incur": 219, "gplv2": 219, "court": 219, "compet": 219, "jurisdict": 219, "provis": 219, "retroact": 219, "prospect": 219, "deem": 219, "waiv": 219, "entireti": 219, "BY": 219, "BUT": 219, "exemplari": 219, "procur": [219, 226], "substitut": 219, "profit": 219, "busi": 219, "interrupt": 219, "strict": 219, "IF": 219, "SUCH": 219, "crtrott": 219, "gov": 219, "lebrungrandt": 219, "ornl": [219, 229], "introduct": [221, 230, 243], "unawar": 222, "appleclang": 222, "intelllvm": 222, "2023": 222, "pthread": [222, 228, 230], "wall": [222, 228], "wunus": 222, "wshadow": [222, 228], "pedant": [222, 228], "werror": [222, 228], "wsign": [222, 228], "wtype": [222, 228], "wignor": 222, "wempti": 222, "wclobber": 222, "wuniniti": 222, "master": [222, 228, 230], "rigor": 222, "some_var": 223, "frobrnic": 223, "foobat": 223, "frobnic": 223, "pencil": 224, "button": 224, "feedback": [225, 226, 229], "workflow": [225, 229, 232], "ramp": 226, "overarch": 226, "outdat": 226, "anymor": 226, "facto": 226, "month": [226, 228], "phase": [226, 229], "defect": 226, "upcom": 226, "seamless": 226, "anticip": 226, "soon": 226, "deploy": [226, 229], "engag": 226, "fund": [226, 229], "agenc": [226, 229], "monitor": 226, "hpe": 226, "kit": 226, "research": 226, "hackathon": 226, "chanel": 226, "bi": 226, "annual": 226, "usergroup": [226, 227], "influenc": 226, "sustain": 226, "mainten": [226, 230], "proven": 226, "audienc": 226, "committe": 226, "greatest": 226, "matur": 226, "train": 226, "bump": 226, "leadership": 226, "prioriti": [226, 227], "thrust": 226, "person": [226, 230], "refin": 226, "unassign": 226, "aren": 226, "weekli": [226, 227], "reassign": 226, "obsolet": 226, "changelog": [226, 228], "avenu": 226, "week": [226, 229], "mondai": 226, "urgent": 226, "triag": 226, "preliminari": 226, "agenda": 226, "kept": 226, "nucleu": 226, "ongo": 226, "ephemer": 226, "dai": [226, 228], "unpaid": 226, "longer": 226, "nda": 226, "held": 226, "wednesdai": 226, "2pm": 226, "pm": 226, "mt": 226, "00": [226, 228], "utc": 226, "zoom": 226, "six": 226, "candid": [226, 229], "cherri": 226, "nearing": 226, "delai": 226, "creation": 226, "ship": 226, "partner": [226, 227], "announc": 226, "invit": [226, 229], "onto": 226, "regress": 226, "unaddress": 226, "approxim": 226, "overview": [226, 234], "enhanc": [227, 228, 239], "priorit": 227, "mileston": 227, "slot": 227, "15feb18": 228, "x86": [228, 230], "043": 228, "196": 228, "128": 228, "pgi": 228, "103": 228, "174": 228, "cygwin": 228, "64bit": 228, "test_all_sandia": [228, 230], "trilino": [228, 229, 230, 234], "atdm": 228, "lammp": [228, 229], "sparc": 228, "master_histori": 228, "snapshot": [228, 230], "clone": [228, 230], "git": 228, "nohup": 228, "tail": 228, "watch": 228, "white": [228, 230], "shepard": [228, 230], "shepard_jenkins_run_script_serial_intel": [228, 230], "pristin": [228, 230], "rerun": 228, "token": [228, 243], "oldtag": 228, "newtag": 228, "04": 228, "rubi": 228, "gitthub_changelog_gener": 228, "indevelop": 228, "cat": 228, "md": 228, "cleanup": 228, "commit": [228, 230], "clariti": [228, 239], "noteworthi": 228, "checkout": [228, 230], "majornumb": 228, "minornumb": 228, "weekssinceminornumberupd": 228, "sha1": 228, "append": [228, 240], "03": 228, "27": 228, "da314444": 228, "29ccb58a": 228, "amend": 228, "mm": [228, 233], "dd": 228, "yyyi": 228, "sem": [228, 230], "checkin": [228, 230], "disk": [228, 237], "ram": 228, "ceerws1113": 228, "trilinos_path": 228, "pwd": 228, "untrack": 228, "py": [228, 230], "backtrack": 228, "server": [229, 230], "approv": [229, 230], "jenkin": [229, 230], "travi": 229, "durat": 229, "pipelin": 229, "verif": 229, "offici": [229, 230], "judg": 229, "thorough": 229, "wider": 229, "poc": 229, "arborx": 229, "million": 229, "nnsa": 229, "offic": 229, "snl": 229, "empir": 229, "sparta": 229, "sierra": 229, "cabana": [229, 231], "anl": 229, "petsc": 229, "advertis": 229, "role": 230, "databas": 230, "fork": 230, "privileg": 230, "865": 230, "begun": 230, "conclus": 230, "haap": 230, "secondari": 230, "outag": 230, "scroll": 230, "ohpc": 230, "srn": 230, "apollo": 230, "bowman": 230, "elli": 230, "hansen": 230, "e5": 230, "2698": 230, "kokkos_dev": 230, "ride": 230, "p8": 230, "tuleta": 230, "fireston": 230, "garrison": 230, "tesla": 230, "36": 230, "sullivan": 230, "mac": 230, "bed": 230, "connect": 230, "webcar": 230, "intranet": 230, "staff": 230, "leader": 230, "assist": 230, "csri": 230, "csu": 230, "administ": 230, "daili": 230, "regimen": 230, "suit": 230, "job": 230, "dashboard": 230, "identif": 230, "terminolog": 230, "joint": 230, "simul": [230, 235, 238, 239], "qthread": 230, "briefli": 230, "generate_makefil": 230, "bash": 230, "makefil": 230, "spot": 230, "jenkins_test_driv": 230, "testing_script": 230, "sha": 230, "accomplish": [230, 234], "prepare_trilinos_repo": 230, "shepard_jenkins_run_script_pthread_intel": 230, "workspac": 230, "white_run_jenkins_script_cuda": 230, "white_run_jenkins_script_omp": 230, "test_kokkos_master_develop_promot": 230, "checkintest": 230, "flavor": 230, "speed": 230, "central": 230, "equat": 230, "viz": 230, "accuraci": 230, "replica": 230, "nearli": 230, "hundr": 230, "unit_test": 230, "performance_test": 230, "perf_test": 230, "scrutini": 230, "inadequaci": 230, "defici": 230, "halo": 231, "averag": 231, "interop": [231, 243], "window": 231, "demonstr": [232, 233, 234, 237], "quantiti": 232, "ratio": 232, "ultim": 232, "count_adjacent_el": 232, "elements_to_nod": 232, "number_of_nod": 232, "elements_per_nod": 232, "scatter_elements_per_nod": 232, "create_scatter_view": 232, "access_elements_per_nod": 232, "node_of_el": 232, "sum_to_nod": 232, "element_valu": 232, "node_valu": 232, "scatter_node_valu": 232, "access_node_valu": 232, "average_to_nod": 232, "flcl": 233, "daxpi": 233, "ndarrai": 233, "flcl_ndarray_t": 233, "dope": 233, "flatten": [233, 234], "_flcl_nd_array_t": 233, "flcl_ndarray_max_rank": 233, "f90": 233, "nd_array_t": 233, "c_size_t": 233, "nd_array_max_rank": 233, "c_ptr": 233, "procedur": 233, "to_nd_arrai": 233, "to_nd_array_l_1d": 233, "to_nd_array_i32_1d": 233, "to_nd_array_i64_1d": 233, "to_nd_array_r32_1d": 233, "to_nd_array_r64_1d": 233, "to_nd_array_l_2d": 233, "to_nd_array_i32_2d": 233, "to_nd_array_i64_2d": 233, "to_nd_array_r32_2d": 233, "to_nd_array_r64_2d": 233, "to_nd_array_l_3d": 233, "to_nd_array_i32_3d": 233, "to_nd_array_i64_3d": 233, "to_nd_array_r32_3d": 233, "to_nd_array_r64_3d": 233, "view_from_ndarrai": 233, "axpi": 233, "flcl_mod": 233, "c_doubl": 233, "allocat": 233, "f_y": 233, "c_y": 233, "alpha": 233, "subroutin": 233, "iso_c_bind": 233, "inout": 233, "f_axpi": 233, "nd_arrai": 233, "earlier": 233, "c_axpi": 233, "nd_array_i": 233, "nd_array_x": 233, "tensor": 234, "pde": 234, "inputdata": 234, "inputfield": 234, "outputfield": 234, "tripl": 234, "paral": 234, "for_all_cel": 234, "merit": 234, "notion": 234, "natur": 234, "mdr_for_all_cel": 234, "wiki": 234, "intrepid2": 234, "intrepid2_arraytoolsdef": 234, "intrepid": 234, "complementari": 235, "scalabl": 235, "walk": 235, "source_rank": 235, "destination_rank": 235, "number_of_doubl": 235, "my_rank": 235, "mpi_comm": 235, "comm": 235, "mpi_comm_world": 235, "mpi_comm_rank": 235, "mpi_send": 235, "mpi_doubl": 235, "mpi_recv": 235, "quit": 235, "pcie": 235, "unstructur": 235, "redudantli": 235, "filter": 235, "subset_scann": 235, "keys_in": 235, "desired_key_in": 235, "subset_indices_in": 235, "m_kei": 235, "m_desired_kei": 235, "m_subset_indic": 235, "final_pass": 235, "is_in": 235, "find_subset": 235, "desired_kei": 235, "subset_s": 235, "local_sum": 235, "subset_indic": 235, "transmit": 235, "pack_messag": 235, "all_element_data": 235, "tediou": 236, "appar": 236, "acess": 236, "spell": [236, 241], "myview": 236, "c_style_memori": 236, "c_style_alloc": 236, "concur": 237, "stagger": 237, "littl": 237, "hostexecspac": 237, "deviceexecspac": 237, "device_range_polici": 237, "host_range_polici": 237, "viewvectortyp": 237, "viewmatrixtyp": 237, "xval": 237, "init_src_view": 237, "p_x": 237, "p_a": 237, "init_a": 237, "init_x": 237, "h_x": 237, "h_y": 237, "nrepeat": 237, "synch": 237, "yax": 237, "temp2": 237, "ini_src_view": 237, "occupi": 237, "attent": 237, "paid": 237, "opportun": [237, 239], "range_polici": 237, "v_r": 237, "v_r1": 237, "h_v": 237, "get_initial_st": 237, "get_rhs_func": 237, "serialize_st": 237, "view_r": 237, "exhibit": 238, "cabana_soa": 238, "vectorlength": 238, "membertyp": 238, "cabana_aosoa": 238, "memorymanag": 238, "evolut": 239, "particleinteract": 239, "particleposit": 239, "po": 239, "particleforc": 239, "particleneighbor": 239, "pairforc": 239, "parallelis": 239, "rectifi": 239, "qualiti": 239, "plai": 239, "tagphase1": 239, "tagphase2": 239, "compute1": 239, "compute2": 239, "prescrib": 240, "predetermin": 240, "surrog": 240, "roll": 240, "b1": 240, "b2": 240, "b3": 240, "fib": 240, "wait_list": 240, "a_f1": 240, "b_f1": 240, "b_f2": 240, "a_f2": 240, "tm": 240, "vertex": 240, "subteam": 240, "visit": 240, "vertic": 240, "exce": 240, "threshold": 240, "unvisit": 240, "frontier": 240, "st": 240, "edg": 240, "greatli": 240, "neccessari": 241, "myloop": 241, "kokkos_class_lambda": 241, "implementationptr": 241, "make_shar": 241, "oh": 241, "strictli": 241, "nominmax": 242, "uninterpret": 242, "redefin": 242, "dnominmax": 242, "multidim": 243, "safeti": 243, "pga": 243, "analysi": 243, "linear": 243, "algebra": 243, "solver": 243}, "objects": {"": [[74, 0, 1, "_CPPv4I0E6Bitset", "Bitset"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_FORWARD_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_FORWARD_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_FORWARD"], [74, 1, 1, "_CPPv4N6Bitset16BIT_SCAN_REVERSEE", "Bitset::BIT_SCAN_REVERSE"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_REVERSE_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_REVERSE_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_FORWARD"], [74, 2, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset"], [74, 3, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset::arg_size"], [74, 4, 1, "_CPPv4I0E6Bitset", "Bitset::Device"], [74, 1, 1, "_CPPv4N6Bitset18MOVE_HINT_BACKWARDE", "Bitset::MOVE_HINT_BACKWARD"], [74, 2, 1, "_CPPv4N6Bitset5clearEv", "Bitset::clear"], [74, 2, 1, "_CPPv4NK6Bitset5countEv", "Bitset::count"], [74, 2, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset12is_allocatedEv", "Bitset::is_allocated"], [74, 2, 1, "_CPPv4NK6Bitset8max_hintEv", "Bitset::max_hint"], [74, 2, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset"], [74, 2, 1, "_CPPv4N6Bitset5resetEv", "Bitset::reset"], [74, 3, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset::i"], [74, 2, 1, "_CPPv4N6Bitset3setEj", "Bitset::set"], [74, 2, 1, "_CPPv4N6Bitset3setEv", "Bitset::set"], [74, 3, 1, "_CPPv4N6Bitset3setEj", "Bitset::set::i"], [74, 2, 1, "_CPPv4NK6Bitset4sizeEv", "Bitset::size"], [74, 2, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test"], [74, 3, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test::i"], [74, 0, 1, "_CPPv4I0E11ConstBitset", "ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetEv", "ConstBitset::ConstBitset"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset::rhs"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset::rhs"], [74, 4, 1, "_CPPv4I0E11ConstBitset", "ConstBitset::Device"], [74, 2, 1, "_CPPv4NK11ConstBitset5countEv", "ConstBitset::count"], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator="], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator="], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator=::rhs"], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator=::rhs"], [74, 2, 1, "_CPPv4NK11ConstBitset4sizeEv", "ConstBitset::size"], [74, 2, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test"], [74, 3, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test::i"], [186, 5, 1, "_CPPv410HostMirror", "HostMirror"], [146, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [146, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [146, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [146, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [146, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::name"], [146, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [146, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [148, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [148, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [148, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [148, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [148, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [148, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [148, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [148, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [148, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [148, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [148, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [148, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [148, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [148, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [148, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [148, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [148, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [148, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [148, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::name"], [148, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::name"], [148, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [148, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [148, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [148, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [148, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [148, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [182, 0, 1, "_CPPv412LayoutStride", "LayoutStride"], [133, 0, 1, "_CPPv410ScopeGuard", "ScopeGuard"], [133, 2, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK10ScopeGuard", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERR10ScopeGuard", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard"], [133, 4, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::Args"], [133, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argc"], [133, 3, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::args"], [133, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard::arguments"], [133, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argv"], [133, 2, 1, "_CPPv4N10ScopeGuardaSERK10ScopeGuard", "ScopeGuard::operator="], [133, 2, 1, "_CPPv4N10ScopeGuardaSERR10ScopeGuard", "ScopeGuard::operator="], [133, 2, 1, "_CPPv4N10ScopeGuardD0Ev", "ScopeGuard::~ScopeGuard"], [186, 5, 1, "_CPPv412array_layout", "array_layout"], [186, 5, 1, "_CPPv415const_data_type", "const_data_type"], [186, 5, 1, "_CPPv423const_scalar_array_type", "const_scalar_array_type"], [186, 5, 1, "_CPPv410const_type", "const_type"], [186, 5, 1, "_CPPv416const_value_type", "const_value_type"], [186, 5, 1, "_CPPv49data_type", "data_type"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::src"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::src"], [186, 5, 1, "_CPPv411device_type", "device_type"], [186, 5, 1, "_CPPv49dimension", "dimension"], [186, 5, 1, "_CPPv415execution_space", "execution_space"], [186, 5, 1, "_CPPv417host_mirror_space", "host_mirror_space"], [186, 5, 1, "_CPPv412memory_space", "memory_space"], [186, 5, 1, "_CPPv413memory_traits", "memory_traits"], [186, 5, 1, "_CPPv419non_const_data_type", "non_const_data_type"], [186, 5, 1, "_CPPv427non_const_scalar_array_type", "non_const_scalar_array_type"], [186, 5, 1, "_CPPv414non_const_type", "non_const_type"], [186, 5, 1, "_CPPv420non_const_value_type", "non_const_value_type"], [186, 5, 1, "_CPPv412pointer_type", "pointer_type"], [186, 5, 1, "_CPPv414reference_type", "reference_type"], [186, 5, 1, "_CPPv417scalar_array_type", "scalar_array_type"], [186, 5, 1, "_CPPv49size_type", "size_type"], [186, 5, 1, "_CPPv410specialize", "specialize"], [186, 5, 1, "_CPPv410value_type", "value_type"], [109, 6, 1, "_CPPv4I00E4BAnd", "BAnd"], [109, 7, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd"], [109, 7, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd"], [109, 8, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd::value_"], [109, 8, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd::value_"], [109, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Scalar"], [109, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Space"], [109, 7, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init"], [109, 8, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init::val"], [109, 7, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join"], [109, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::dest"], [109, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::src"], [109, 10, 1, "_CPPv4N4BAnd7reducerE", "BAnd::reducer"], [109, 7, 1, "_CPPv4NK4BAnd9referenceEv", "BAnd::reference"], [109, 10, 1, "_CPPv4N4BAnd16result_view_typeE", "BAnd::result_view_type"], [109, 10, 1, "_CPPv4N4BAnd10value_typeE", "BAnd::value_type"], [109, 7, 1, "_CPPv4NK4BAnd4viewEv", "BAnd::view"], [110, 6, 1, "_CPPv4I00E3BOr", "BOr"], [110, 7, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr"], [110, 7, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr"], [110, 8, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr::value_"], [110, 8, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr::value_"], [110, 9, 1, "_CPPv4I00E3BOr", "BOr::Scalar"], [110, 9, 1, "_CPPv4I00E3BOr", "BOr::Space"], [110, 7, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init"], [110, 8, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init::val"], [110, 7, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join"], [110, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::dest"], [110, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::src"], [110, 10, 1, "_CPPv4N3BOr7reducerE", "BOr::reducer"], [110, 7, 1, "_CPPv4NK3BOr9referenceEv", "BOr::reference"], [110, 10, 1, "_CPPv4N3BOr16result_view_typeE", "BOr::result_view_type"], [110, 10, 1, "_CPPv4N3BOr10value_typeE", "BOr::value_type"], [110, 7, 1, "_CPPv4NK3BOr4viewEv", "BOr::view"], [223, 6, 1, "_CPPv4I0DpE10CoolerView", "CoolerView"], [223, 11, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView"], [223, 8, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView::rhs"], [223, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::DataType"], [223, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::Traits"], [223, 10, 1, "_CPPv4N10CoolerView9data_typeE", "CoolerView::data_type"], [223, 11, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo"], [223, 9, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::U"], [223, 8, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::x"], [223, 10, 1, "_CPPv4N10CoolerView6foobarE", "CoolerView::foobar"], [223, 10, 1, "_CPPv4N10CoolerView6foobatE", "CoolerView::foobat"], [223, 12, 1, "_CPPv4N10CoolerView8some_varE", "CoolerView::some_var"], [223, 11, 1, "_CPPv4N10CoolerViewD0Ev", "CoolerView::~CoolerView"], [75, 6, 1, "_CPPv4I0000E8DualView", "DualView"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg1Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg2Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg3Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::DataType"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewEv", "DualView::DualView"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::arg0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::arg_prop"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::args"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::d_view_"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::h_view_"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::label"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::src"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView::src"], [75, 11, 1, "_CPPv4N8DualView16clear_sync_stateEv", "DualView::clear_sync_state"], [75, 12, 1, "_CPPv4N8DualView6d_viewE", "DualView::d_view"], [75, 7, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent"], [75, 9, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::r"], [75, 7, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int"], [75, 9, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::r"], [75, 11, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side"], [75, 9, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side::Device"], [75, 12, 1, "_CPPv4N8DualView6h_viewE", "DualView::h_view"], [75, 10, 1, "_CPPv4N8DualView17host_mirror_spaceE", "DualView::host_mirror_space"], [75, 11, 1, "_CPPv4NK8DualView12is_allocatedEv", "DualView::is_allocated"], [75, 12, 1, "_CPPv4N8DualView15modified_deviceE", "DualView::modified_device"], [75, 12, 1, "_CPPv4N8DualView14modified_flagsE", "DualView::modified_flags"], [75, 12, 1, "_CPPv4N8DualView13modified_hostE", "DualView::modified_host"], [75, 11, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify"], [75, 9, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify::Device"], [75, 11, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync"], [75, 9, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync::Device"], [75, 11, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n0"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n1"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n2"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n3"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n4"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n5"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n6"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n7"], [75, 11, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n0"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n1"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n2"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n3"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n4"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n5"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n6"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n7"], [75, 7, 1, "_CPPv4NK8DualView4spanEv", "DualView::span"], [75, 7, 1, "_CPPv4N8DualView18span_is_contiguousEv", "DualView::span_is_contiguous"], [75, 11, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride"], [75, 9, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::stride_"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 10, 1, "_CPPv4N8DualView5t_devE", "DualView::t_dev"], [75, 10, 1, "_CPPv4N8DualView11t_dev_constE", "DualView::t_dev_const"], [75, 10, 1, "_CPPv4N8DualView22t_dev_const_randomreadE", "DualView::t_dev_const_randomread"], [75, 10, 1, "_CPPv4N8DualView25t_dev_const_randomread_umE", "DualView::t_dev_const_randomread_um"], [75, 10, 1, "_CPPv4N8DualView14t_dev_const_umE", "DualView::t_dev_const_um"], [75, 10, 1, "_CPPv4N8DualView8t_dev_umE", "DualView::t_dev_um"], [75, 10, 1, "_CPPv4N8DualView6t_hostE", "DualView::t_host"], [75, 10, 1, "_CPPv4N8DualView12t_host_constE", "DualView::t_host_const"], [75, 10, 1, "_CPPv4N8DualView23t_host_const_randomreadE", "DualView::t_host_const_randomread"], [75, 10, 1, "_CPPv4N8DualView26t_host_const_randomread_umE", "DualView::t_host_const_randomread_um"], [75, 10, 1, "_CPPv4N8DualView15t_host_const_umE", "DualView::t_host_const_um"], [75, 10, 1, "_CPPv4N8DualView9t_host_umE", "DualView::t_host_um"], [75, 10, 1, "_CPPv4N8DualView15t_modified_flagE", "DualView::t_modified_flag"], [75, 10, 1, "_CPPv4N8DualView16t_modified_flagsE", "DualView::t_modified_flags"], [75, 10, 1, "_CPPv4N8DualView6traitsE", "DualView::traits"], [75, 7, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view"], [75, 9, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view::Device"], [76, 6, 1, "_CPPv4I0000E11DynRankView", "DynRankView"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::DataType"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewEv", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::args"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::name"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::name"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::prop"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::prop"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::ptr"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::ptr"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::space"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::space"], [76, 10, 1, "_CPPv4N11DynRankView10HostMirrorE", "DynRankView::HostMirror"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::LayoutType"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemorySpace"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemoryTraits"], [76, 11, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i0"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i1"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i2"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i3"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i4"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i5"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i6"], [76, 10, 1, "_CPPv4N11DynRankView12array_layoutE", "DynRankView::array_layout"], [76, 10, 1, "_CPPv4N11DynRankView15const_data_typeE", "DynRankView::const_data_type"], [76, 10, 1, "_CPPv4N11DynRankView23const_scalar_array_typeE", "DynRankView::const_scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView10const_typeE", "DynRankView::const_type"], [76, 10, 1, "_CPPv4N11DynRankView16const_value_typeE", "DynRankView::const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankView4dataEv", "DynRankView::data"], [76, 10, 1, "_CPPv4N11DynRankView9data_typeE", "DynRankView::data_type"], [76, 10, 1, "_CPPv4N11DynRankView11device_typeE", "DynRankView::device_type"], [76, 10, 1, "_CPPv4N11DynRankView9dimensionE", "DynRankView::dimension"], [76, 10, 1, "_CPPv4N11DynRankView15execution_spaceE", "DynRankView::execution_space"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::iType"], [76, 11, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int"], [76, 8, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::iType"], [76, 10, 1, "_CPPv4N11DynRankView17host_mirror_spaceE", "DynRankView::host_mirror_space"], [76, 11, 1, "_CPPv4NK11DynRankView12is_allocatedEv", "DynRankView::is_allocated"], [76, 11, 1, "_CPPv4NK11DynRankView5labelEv", "DynRankView::label"], [76, 11, 1, "_CPPv4NK11DynRankView6layoutEv", "DynRankView::layout"], [76, 10, 1, "_CPPv4N11DynRankView12memory_spaceE", "DynRankView::memory_space"], [76, 10, 1, "_CPPv4N11DynRankView13memory_traitsE", "DynRankView::memory_traits"], [76, 10, 1, "_CPPv4N11DynRankView19non_const_data_typeE", "DynRankView::non_const_data_type"], [76, 10, 1, "_CPPv4N11DynRankView27non_const_scalar_array_typeE", "DynRankView::non_const_scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView14non_const_typeE", "DynRankView::non_const_type"], [76, 10, 1, "_CPPv4N11DynRankView20non_const_value_typeE", "DynRankView::non_const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()"], [76, 8, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()::indices"], [76, 10, 1, "_CPPv4N11DynRankView12pointer_typeE", "DynRankView::pointer_type"], [76, 11, 1, "_CPPv4NK11DynRankView4rankEv", "DynRankView::rank"], [76, 10, 1, "_CPPv4N11DynRankView14reference_typeE", "DynRankView::reference_type"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N0"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N1"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N2"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N3"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N4"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N5"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N6"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N7"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N8"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size::layout"], [76, 10, 1, "_CPPv4N11DynRankView17scalar_array_typeE", "DynRankView::scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView9size_typeE", "DynRankView::size_type"], [76, 11, 1, "_CPPv4NK11DynRankView4spanEv", "DynRankView::span"], [76, 11, 1, "_CPPv4NK11DynRankView18span_is_contiguousEv", "DynRankView::span_is_contiguous"], [76, 10, 1, "_CPPv4N11DynRankView10specializeE", "DynRankView::specialize"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::iType"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_0Ev", "DynRankView::stride_0"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_1Ev", "DynRankView::stride_1"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_2Ev", "DynRankView::stride_2"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_3Ev", "DynRankView::stride_3"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_4Ev", "DynRankView::stride_4"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_5Ev", "DynRankView::stride_5"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_6Ev", "DynRankView::stride_6"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_7Ev", "DynRankView::stride_7"], [76, 11, 1, "_CPPv4NK11DynRankView9use_countEv", "DynRankView::use_count"], [76, 10, 1, "_CPPv4N11DynRankView10value_typeE", "DynRankView::value_type"], [77, 6, 1, "_CPPv4I0DpE11DynamicView", "DynamicView"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::DataType"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewEv", "DynamicView::DynamicView"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::arg_label"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::max_extent"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::min_chunk_size"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView::rhs"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView::rhs"], [77, 10, 1, "_CPPv4N11DynamicView10HostMirrorE", "DynamicView::HostMirror"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::P"], [77, 7, 1, "_CPPv4NK11DynamicView17allocation_extentEv", "DynamicView::allocation_extent"], [77, 10, 1, "_CPPv4N11DynamicView10array_typeE", "DynamicView::array_type"], [77, 7, 1, "_CPPv4NK11DynamicView10chunk_sizeEv", "DynamicView::chunk_size"], [77, 10, 1, "_CPPv4N11DynamicView10const_typeE", "DynamicView::const_type"], [77, 7, 1, "_CPPv4NK11DynamicView4dataEv", "DynamicView::data"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::iType"], [77, 7, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int"], [77, 8, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::iType"], [77, 11, 1, "_CPPv4NK11DynamicView12is_allocatedEv", "DynamicView::is_allocated"], [77, 11, 1, "_CPPv4N11DynamicView5labelEv", "DynamicView::label"], [77, 10, 1, "_CPPv4N11DynamicView14non_const_typeE", "DynamicView::non_const_type"], [77, 7, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::args"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::i0"], [77, 10, 1, "_CPPv4N11DynamicView12pointer_typeE", "DynamicView::pointer_type"], [77, 10, 1, "_CPPv4N11DynamicView14reference_typeE", "DynamicView::reference_type"], [77, 12, 1, "_CPPv4N11DynamicView34reference_type_is_lvalue_referenceE", "DynamicView::reference_type_is_lvalue_reference"], [77, 11, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial"], [77, 9, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::IntType"], [77, 8, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::n"], [77, 7, 1, "_CPPv4NK11DynamicView4sizeEv", "DynamicView::size"], [77, 7, 1, "_CPPv4NK11DynamicView4spanEv", "DynamicView::span"], [77, 7, 1, "_CPPv4NK11DynamicView18span_is_contiguousEv", "DynamicView::span_is_contiguous"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::iType"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_0Ev", "DynamicView::stride_0"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_1Ev", "DynamicView::stride_1"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_2Ev", "DynamicView::stride_2"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_3Ev", "DynamicView::stride_3"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_4Ev", "DynamicView::stride_4"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_5Ev", "DynamicView::stride_5"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_6Ev", "DynamicView::stride_6"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_7Ev", "DynamicView::stride_7"], [77, 10, 1, "_CPPv4N11DynamicView6traitsE", "DynamicView::traits"], [77, 7, 1, "_CPPv4NK11DynamicView9use_countEv", "DynamicView::use_count"], [131, 6, 1, "_CPPv413InitArguments", "InitArguments"], [131, 11, 1, "_CPPv4N13InitArguments13InitArgumentsEv", "InitArguments::InitArguments"], [131, 12, 1, "_CPPv4N13InitArguments9device_idE", "InitArguments::device_id"], [131, 12, 1, "_CPPv4N13InitArguments16disable_warningsE", "InitArguments::disable_warnings"], [131, 12, 1, "_CPPv4N13InitArguments8ndevicesE", "InitArguments::ndevices"], [131, 12, 1, "_CPPv4N13InitArguments8num_numaE", "InitArguments::num_numa"], [131, 12, 1, "_CPPv4N13InitArguments11num_threadsE", "InitArguments::num_threads"], [131, 12, 1, "_CPPv4N13InitArguments11skip_deviceE", "InitArguments::skip_device"], [132, 6, 1, "_CPPv422InitializationSettings", "InitializationSettings"], [132, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings"], [132, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsEv", "InitializationSettings::InitializationSettings"], [132, 8, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings::arguments"], [132, 11, 1, "_CPPv4NK22InitializationSettings18get_PARAMETER_NAMEEv", "InitializationSettings::get_PARAMETER_NAME"], [132, 11, 1, "_CPPv4NK22InitializationSettings18has_PARAMETER_NAMEEv", "InitializationSettings::has_PARAMETER_NAME"], [132, 11, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME"], [132, 8, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME::value"], [179, 11, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [179, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [179, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [179, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [179, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [179, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [179, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [179, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ExecSpace"], [179, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [179, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [179, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [179, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [179, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [179, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [179, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [179, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [179, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [179, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [179, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [179, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [179, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [179, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [179, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [179, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::exec_space"], [179, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::exec_space"], [179, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::exec_space"], [179, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [179, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [179, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [179, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [179, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [179, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [111, 6, 1, "_CPPv4I00E4LAnd", "LAnd"], [111, 7, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd"], [111, 7, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd"], [111, 8, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd::value_"], [111, 8, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd::value_"], [111, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Scalar"], [111, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Space"], [111, 7, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init"], [111, 8, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init::val"], [111, 7, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join"], [111, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::dest"], [111, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::src"], [111, 10, 1, "_CPPv4N4LAnd7reducerE", "LAnd::reducer"], [111, 7, 1, "_CPPv4NK4LAnd9referenceEv", "LAnd::reference"], [111, 10, 1, "_CPPv4N4LAnd16result_view_typeE", "LAnd::result_view_type"], [111, 10, 1, "_CPPv4N4LAnd10value_typeE", "LAnd::value_type"], [111, 7, 1, "_CPPv4NK4LAnd4viewEv", "LAnd::view"], [112, 6, 1, "_CPPv4I00E3LOr", "LOr"], [112, 7, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr"], [112, 7, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr"], [112, 8, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr::value_"], [112, 8, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr::value_"], [112, 9, 1, "_CPPv4I00E3LOr", "LOr::Scalar"], [112, 9, 1, "_CPPv4I00E3LOr", "LOr::Space"], [112, 7, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init"], [112, 8, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init::val"], [112, 7, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join"], [112, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::dest"], [112, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::src"], [112, 10, 1, "_CPPv4N3LOr7reducerE", "LOr::reducer"], [112, 7, 1, "_CPPv4NK3LOr9referenceEv", "LOr::reference"], [112, 10, 1, "_CPPv4N3LOr16result_view_typeE", "LOr::result_view_type"], [112, 10, 1, "_CPPv4N3LOr10value_typeE", "LOr::value_type"], [112, 7, 1, "_CPPv4NK3LOr4viewEv", "LOr::view"], [180, 6, 1, "_CPPv410LayoutLeft", "LayoutLeft"], [180, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERK10LayoutLeft", "LayoutLeft::LayoutLeft"], [180, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERR10LayoutLeft", "LayoutLeft::LayoutLeft"], [180, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft"], [180, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N0"], [180, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N1"], [180, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N2"], [180, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N3"], [180, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N4"], [180, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N5"], [180, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N6"], [180, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N7"], [180, 10, 1, "_CPPv4N10LayoutLeft12array_layoutE", "LayoutLeft::array_layout"], [180, 12, 1, "_CPPv4N10LayoutLeft9dimensionE", "LayoutLeft::dimension"], [180, 12, 1, "_CPPv4N10LayoutLeft23is_extent_constructibleE", "LayoutLeft::is_extent_constructible"], [180, 11, 1, "_CPPv4N10LayoutLeftaSERK10LayoutLeft", "LayoutLeft::operator="], [180, 11, 1, "_CPPv4N10LayoutLeftaSERR10LayoutLeft", "LayoutLeft::operator="], [181, 6, 1, "_CPPv411LayoutRight", "LayoutRight"], [181, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERK11LayoutRight", "LayoutRight::LayoutRight"], [181, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERR11LayoutRight", "LayoutRight::LayoutRight"], [181, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight"], [181, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N0"], [181, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N1"], [181, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N2"], [181, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N3"], [181, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N4"], [181, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N5"], [181, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N6"], [181, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N7"], [181, 10, 1, "_CPPv4N11LayoutRight12array_layoutE", "LayoutRight::array_layout"], [181, 12, 1, "_CPPv4N11LayoutRight9dimensionE", "LayoutRight::dimension"], [181, 12, 1, "_CPPv4N11LayoutRight23is_extent_constructibleE", "LayoutRight::is_extent_constructible"], [181, 11, 1, "_CPPv4N11LayoutRightaSERK11LayoutRight", "LayoutRight::operator="], [181, 11, 1, "_CPPv4N11LayoutRightaSERR11LayoutRight", "LayoutRight::operator="], [182, 11, 1, "_CPPv412LayoutStrideRK12LayoutStride", "LayoutStride"], [182, 11, 1, "_CPPv412LayoutStrideRR12LayoutStride", "LayoutStride"], [182, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N0"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N1"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N2"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N3"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N4"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N5"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N6"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N7"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S0"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S1"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S2"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S3"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S4"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S5"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S6"], [182, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S7"], [150, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [150, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [150, 11, 1, "_CPPv413MDRangePolicyv", "MDRangePolicy"], [150, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy"], [150, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy"], [150, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::IT"], [150, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::IT"], [150, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::OT"], [150, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::OT"], [150, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::TT"], [150, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::TT"], [150, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [150, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [150, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::begin"], [150, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::begin"], [150, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [150, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [150, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::end"], [150, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::end"], [150, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::tiling"], [150, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::tiling"], [113, 6, 1, "_CPPv4I00E3Max", "Max"], [113, 7, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max"], [113, 7, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max"], [113, 8, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max::value_"], [113, 8, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max::value_"], [113, 9, 1, "_CPPv4I00E3Max", "Max::Scalar"], [113, 9, 1, "_CPPv4I00E3Max", "Max::Space"], [113, 7, 1, "_CPPv4NK3Max4initER10value_type", "Max::init"], [113, 8, 1, "_CPPv4NK3Max4initER10value_type", "Max::init::val"], [113, 7, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join"], [113, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::dest"], [113, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::src"], [113, 10, 1, "_CPPv4N3Max7reducerE", "Max::reducer"], [113, 7, 1, "_CPPv4NK3Max9referenceEv", "Max::reference"], [113, 10, 1, "_CPPv4N3Max16result_view_typeE", "Max::result_view_type"], [113, 10, 1, "_CPPv4N3Max10value_typeE", "Max::value_type"], [113, 7, 1, "_CPPv4NK3Max4viewEv", "Max::view"], [114, 6, 1, "_CPPv4I000E6MaxLoc", "MaxLoc"], [114, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Index"], [114, 7, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc"], [114, 7, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc"], [114, 8, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc::value_"], [114, 8, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc::value_"], [114, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Scalar"], [114, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Space"], [114, 7, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init"], [114, 8, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init::val"], [114, 7, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join"], [114, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::dest"], [114, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::src"], [114, 10, 1, "_CPPv4N6MaxLoc7reducerE", "MaxLoc::reducer"], [114, 7, 1, "_CPPv4NK6MaxLoc9referenceEv", "MaxLoc::reference"], [114, 10, 1, "_CPPv4N6MaxLoc16result_view_typeE", "MaxLoc::result_view_type"], [114, 10, 1, "_CPPv4N6MaxLoc10value_typeE", "MaxLoc::value_type"], [114, 7, 1, "_CPPv4NK6MaxLoc4viewEv", "MaxLoc::view"], [115, 6, 1, "_CPPv4I00E3Min", "Min"], [115, 7, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min"], [115, 7, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min"], [115, 8, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min::value_"], [115, 8, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min::value_"], [115, 9, 1, "_CPPv4I00E3Min", "Min::Scalar"], [115, 9, 1, "_CPPv4I00E3Min", "Min::Space"], [115, 7, 1, "_CPPv4NK3Min4initER10value_type", "Min::init"], [115, 8, 1, "_CPPv4NK3Min4initER10value_type", "Min::init::val"], [115, 7, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join"], [115, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::dest"], [115, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::src"], [115, 10, 1, "_CPPv4N3Min7reducerE", "Min::reducer"], [115, 7, 1, "_CPPv4NK3Min9referenceEv", "Min::reference"], [115, 10, 1, "_CPPv4N3Min16result_view_typeE", "Min::result_view_type"], [115, 10, 1, "_CPPv4N3Min10value_typeE", "Min::value_type"], [115, 7, 1, "_CPPv4NK3Min4viewEv", "Min::view"], [116, 6, 1, "_CPPv4I000E6MinLoc", "MinLoc"], [116, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Index"], [116, 7, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc"], [116, 7, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc"], [116, 8, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc::value_"], [116, 8, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc::value_"], [116, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Scalar"], [116, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Space"], [116, 7, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init"], [116, 8, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init::val"], [116, 7, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join"], [116, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::dest"], [116, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::src"], [116, 10, 1, "_CPPv4N6MinLoc7reducerE", "MinLoc::reducer"], [116, 7, 1, "_CPPv4NK6MinLoc9referenceEv", "MinLoc::reference"], [116, 10, 1, "_CPPv4N6MinLoc16result_view_typeE", "MinLoc::result_view_type"], [116, 10, 1, "_CPPv4N6MinLoc10value_typeE", "MinLoc::value_type"], [116, 7, 1, "_CPPv4NK6MinLoc4viewEv", "MinLoc::view"], [117, 6, 1, "_CPPv4I00E6MinMax", "MinMax"], [117, 7, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax"], [117, 7, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax"], [117, 8, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax::value_"], [117, 8, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax::value_"], [117, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Scalar"], [117, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Space"], [117, 7, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init"], [117, 8, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init::val"], [117, 7, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join"], [117, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::dest"], [117, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::src"], [117, 10, 1, "_CPPv4N6MinMax7reducerE", "MinMax::reducer"], [117, 7, 1, "_CPPv4NK6MinMax9referenceEv", "MinMax::reference"], [117, 10, 1, "_CPPv4N6MinMax16result_view_typeE", "MinMax::result_view_type"], [117, 10, 1, "_CPPv4N6MinMax10value_typeE", "MinMax::value_type"], [117, 7, 1, "_CPPv4NK6MinMax4viewEv", "MinMax::view"], [118, 6, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc"], [118, 7, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc"], [118, 7, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc"], [118, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc::value_"], [118, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc::value_"], [118, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Scalar"], [118, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Space"], [118, 7, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init"], [118, 8, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init::val"], [118, 7, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join"], [118, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::dest"], [118, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::src"], [118, 10, 1, "_CPPv4N9MinMaxLoc7reducerE", "MinMaxLoc::reducer"], [118, 7, 1, "_CPPv4NK9MinMaxLoc9referenceEv", "MinMaxLoc::reference"], [118, 10, 1, "_CPPv4N9MinMaxLoc16result_view_typeE", "MinMaxLoc::result_view_type"], [118, 10, 1, "_CPPv4N9MinMaxLoc10value_typeE", "MinMaxLoc::value_type"], [118, 7, 1, "_CPPv4NK9MinMaxLoc4viewEv", "MinMaxLoc::view"], [119, 6, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar"], [119, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Index"], [119, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Scalar"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7max_locE", "MinMaxLocScalar::max_loc"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7max_valE", "MinMaxLocScalar::max_val"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7min_locE", "MinMaxLocScalar::min_loc"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7min_valE", "MinMaxLocScalar::min_val"], [119, 11, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator="], [119, 8, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator=::rhs"], [120, 6, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar"], [120, 9, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar::Scalar"], [120, 12, 1, "_CPPv4N12MinMaxScalar7max_valE", "MinMaxScalar::max_val"], [120, 12, 1, "_CPPv4N12MinMaxScalar7min_valE", "MinMaxScalar::min_val"], [120, 11, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator="], [120, 8, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator=::rhs"], [151, 11, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam"], [151, 8, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam::team"], [151, 11, 1, "_CPPv49PerThread14TeamMemberType", "PerThread"], [151, 8, 1, "_CPPv49PerThread14TeamMemberType", "PerThread::team"], [121, 6, 1, "_CPPv4I00E4Prod", "Prod"], [121, 7, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod"], [121, 7, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod"], [121, 8, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod::value_"], [121, 8, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod::value_"], [121, 9, 1, "_CPPv4I00E4Prod", "Prod::Scalar"], [121, 9, 1, "_CPPv4I00E4Prod", "Prod::Space"], [121, 7, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init"], [121, 8, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init::val"], [121, 7, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join"], [121, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::dest"], [121, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::src"], [121, 10, 1, "_CPPv4N4Prod7reducerE", "Prod::reducer"], [121, 7, 1, "_CPPv4NK4Prod9referenceEv", "Prod::reference"], [121, 10, 1, "_CPPv4N4Prod16result_view_typeE", "Prod::result_view_type"], [121, 10, 1, "_CPPv4N4Prod10value_typeE", "Prod::value_type"], [121, 7, 1, "_CPPv4NK4Prod4viewEv", "Prod::view"], [161, 11, 1, "_CPPv416ProfilingSectionRKNSt6stringE", "ProfilingSection"], [161, 8, 1, "_CPPv416ProfilingSectionRKNSt6stringE", "ProfilingSection::sectionName"], [152, 11, 1, "_CPPv411RangePolicyv", "RangePolicy"], [152, 11, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [152, 11, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [152, 9, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [152, 9, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [152, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [152, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [152, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [152, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [152, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [152, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [152, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::space"], [122, 7, 1, "_CPPv47ReducerR10value_type", "Reducer"], [122, 7, 1, "_CPPv47ReducerRK16result_view_type", "Reducer"], [122, 8, 1, "_CPPv47ReducerR10value_type", "Reducer::value_"], [122, 8, 1, "_CPPv47ReducerRK16result_view_type", "Reducer::value_"], [79, 6, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::DataType"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::ExecSpace"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Layout"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Op"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERK4ViewI2RTDp2RPE", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewEv", "ScatterView::ScatterView"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::arg_prop"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::dims"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::dims"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::name"], [79, 11, 1, "_CPPv4NK11ScatterView6accessEv", "ScatterView::access"], [79, 11, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into"], [79, 8, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into::dest"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::contribution"], [79, 10, 1, "_CPPv4N11ScatterView14data_type_infoE", "ScatterView::data_type_info"], [79, 10, 1, "_CPPv4N11ScatterView18internal_data_typeE", "ScatterView::internal_data_type"], [79, 10, 1, "_CPPv4N11ScatterView18internal_view_typeE", "ScatterView::internal_view_type"], [79, 11, 1, "_CPPv4NK11ScatterView12is_allocatedEv", "ScatterView::is_allocated"], [79, 10, 1, "_CPPv4N11ScatterView23original_reference_typeE", "ScatterView::original_reference_type"], [79, 10, 1, "_CPPv4N11ScatterView19original_value_typeE", "ScatterView::original_value_type"], [79, 10, 1, "_CPPv4N11ScatterView18original_view_typeE", "ScatterView::original_view_type"], [79, 11, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n0"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n1"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n2"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n3"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n4"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n5"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n6"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n7"], [79, 11, 1, "_CPPv4N11ScatterView5resetEv", "ScatterView::reset"], [79, 11, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except"], [79, 8, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except::view"], [79, 11, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n0"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n1"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n2"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n3"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n4"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n5"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n6"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n7"], [79, 11, 1, "_CPPv4NK11ScatterView7subviewEv", "ScatterView::subview"], [162, 11, 1, "_CPPv412ScopedRegionRKNSt6stringE", "ScopedRegion"], [162, 8, 1, "_CPPv412ScopedRegionRKNSt6stringE", "ScopedRegion::regionName"], [124, 6, 1, "_CPPv4I00E3Sum", "Sum"], [124, 9, 1, "_CPPv4I00E3Sum", "Sum::Scalar"], [124, 9, 1, "_CPPv4I00E3Sum", "Sum::Space"], [124, 7, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum"], [124, 7, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum"], [124, 8, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum::value_"], [124, 8, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum::value_"], [124, 7, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init"], [124, 8, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init::val"], [124, 7, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join"], [124, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::dest"], [124, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::src"], [124, 10, 1, "_CPPv4N3Sum7reducerE", "Sum::reducer"], [124, 7, 1, "_CPPv4NK3Sum9referenceEv", "Sum::reference"], [124, 10, 1, "_CPPv4N3Sum16result_view_typeE", "Sum::result_view_type"], [124, 10, 1, "_CPPv4N3Sum10value_typeE", "Sum::value_type"], [124, 7, 1, "_CPPv4NK3Sum4viewEv", "Sum::view"], [153, 6, 1, "_CPPv417TeamHandleConcept", "TeamHandleConcept"], [153, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERK17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [153, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERR17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [153, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptEv", "TeamHandleConcept::TeamHandleConcept"], [153, 10, 1, "_CPPv4N17TeamHandleConcept15execution_spaceE", "TeamHandleConcept::execution_space"], [153, 7, 1, "_CPPv4NK17TeamHandleConcept11league_rankEv", "TeamHandleConcept::league_rank"], [153, 7, 1, "_CPPv4NK17TeamHandleConcept11league_sizeEv", "TeamHandleConcept::league_size"], [153, 11, 1, "_CPPv4N17TeamHandleConceptaSERK17TeamHandleConcept", "TeamHandleConcept::operator="], [153, 11, 1, "_CPPv4N17TeamHandleConceptaSERR17TeamHandleConcept", "TeamHandleConcept::operator="], [153, 10, 1, "_CPPv4N17TeamHandleConcept20scratch_memory_spaceE", "TeamHandleConcept::scratch_memory_space"], [153, 7, 1, "_CPPv4NK17TeamHandleConcept12team_barrierEv", "TeamHandleConcept::team_barrier"], [153, 7, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast"], [153, 7, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast"], [153, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::Closure"], [153, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::T"], [153, 9, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::T"], [153, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::f"], [153, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [153, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [153, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::value"], [153, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::value"], [153, 7, 1, "_CPPv4NK17TeamHandleConcept9team_rankEv", "TeamHandleConcept::team_rank"], [153, 7, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce"], [153, 9, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::ReducerType"], [153, 8, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::reducer"], [153, 7, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan"], [153, 9, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::T"], [153, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::global"], [153, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::value"], [153, 7, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch"], [153, 8, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch::level"], [153, 7, 1, "_CPPv4NK17TeamHandleConcept10team_shmemEv", "TeamHandleConcept::team_shmem"], [153, 7, 1, "_CPPv4NK17TeamHandleConcept9team_sizeEv", "TeamHandleConcept::team_size"], [153, 7, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch"], [153, 8, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch::level"], [153, 11, 1, "_CPPv4N17TeamHandleConceptD0Ev", "TeamHandleConcept::~TeamHandleConcept"], [154, 6, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy"], [154, 9, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy::Args"], [154, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [154, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [154, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [154, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [154, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERK10TeamPolicy", "TeamPolicy::TeamPolicy"], [154, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERR10TeamPolicy", "TeamPolicy::TeamPolicy"], [154, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyEv", "TeamPolicy::TeamPolicy"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::space"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::space"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [154, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [154, 11, 1, "_CPPv4NK10TeamPolicy10chunk_sizeEv", "TeamPolicy::chunk_size"], [154, 10, 1, "_CPPv4N10TeamPolicy15execution_spaceE", "TeamPolicy::execution_space"], [154, 10, 1, "_CPPv4N10TeamPolicy10index_typeE", "TeamPolicy::index_type"], [154, 10, 1, "_CPPv4N10TeamPolicy17iteration_patternE", "TeamPolicy::iteration_pattern"], [154, 10, 1, "_CPPv4N10TeamPolicy13launch_boundsE", "TeamPolicy::launch_bounds"], [154, 11, 1, "_CPPv4NK10TeamPolicy11league_sizeEv", "TeamPolicy::league_size"], [154, 10, 1, "_CPPv4N10TeamPolicy11member_typeE", "TeamPolicy::member_type"], [154, 10, 1, "_CPPv4N10TeamPolicy13schedule_typeE", "TeamPolicy::schedule_type"], [154, 11, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size"], [154, 8, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::level"], [154, 8, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::team_size_"], [154, 11, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max"], [154, 8, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max::level"], [154, 11, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size"], [154, 8, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size::chunk"], [154, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [154, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [154, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [154, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [154, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [154, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [154, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [154, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [154, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [154, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_team"], [154, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [154, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [154, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [154, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_thread"], [154, 11, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size"], [154, 8, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size::level"], [154, 11, 1, "_CPPv4NK10TeamPolicy9team_sizeEv", "TeamPolicy::team_size"], [154, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max"], [154, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max"], [154, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::FunctorType"], [154, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::FunctorType"], [154, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::f"], [154, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::f"], [154, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended"], [154, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended"], [154, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::FunctorType"], [154, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::FunctorType"], [154, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::f"], [154, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::f"], [154, 11, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size"], [154, 8, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size::level"], [154, 11, 1, "_CPPv4N10TeamPolicy17vector_length_maxEv", "TeamPolicy::vector_length_max"], [154, 10, 1, "_CPPv4N10TeamPolicy8work_tagE", "TeamPolicy::work_tag"], [155, 6, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange"], [155, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::Rank"], [155, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::TeamHandle"], [155, 11, 1, "_CPPv4N17TeamThreadMDRange17TeamThreadMDRangeE4team8extent_18extent_2z", "TeamThreadMDRange::TeamThreadMDRange"], [151, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange"], [151, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange"], [151, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::begin"], [151, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::count"], [151, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::end"], [151, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::team"], [151, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::team"], [157, 6, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange"], [157, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::Rank"], [157, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::TeamHandle"], [157, 11, 1, "_CPPv4N17TeamVectorMDRange17TeamVectorMDRangeE4team8extent_18extent_2z", "TeamVectorMDRange::TeamVectorMDRange"], [159, 6, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange"], [159, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::Rank"], [159, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::TeamHandle"], [159, 11, 1, "_CPPv4N19ThreadVectorMDRange19ThreadVectorMDRangeE4team8extent_18extent_2z", "ThreadVectorMDRange::ThreadVectorMDRange"], [151, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange"], [151, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange"], [151, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::begin"], [151, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::count"], [151, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::end"], [151, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::team"], [151, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::team"], [81, 6, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Device"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Key"], [81, 11, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap"], [81, 8, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap::capacity_hint"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Value"], [81, 7, 1, "_CPPv4NK12UnorderedMap8capacityEv", "UnorderedMap::capacity"], [81, 11, 1, "_CPPv4N12UnorderedMap5clearEv", "UnorderedMap::clear"], [81, 7, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists"], [81, 8, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists::key"], [81, 7, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find"], [81, 8, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find::key"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3key", "UnorderedMap::insert"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::key"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::op"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::value"], [81, 7, 1, "_CPPv4NK12UnorderedMap12is_allocatedEv", "UnorderedMap::is_allocated"], [81, 7, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at::index"], [81, 11, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash"], [81, 8, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash::requested_capacity"], [81, 11, 1, "_CPPv4NK12UnorderedMap4sizeEv", "UnorderedMap::size"], [81, 7, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at::index"], [81, 7, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at::index"], [81, 6, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes"], [81, 6, 1, "_CPPv4N25UnorderedMapInsertOpTypes9AtomicAddE", "UnorderedMapInsertOpTypes::AtomicAdd"], [81, 6, 1, "_CPPv4N25UnorderedMapInsertOpTypes4NoOpE", "UnorderedMapInsertOpTypes::NoOp"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValueTypeView"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValuesIdxType"], [81, 6, 1, "_CPPv424UnorderedMapInsertResult", "UnorderedMapInsertResult"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult8existingEv", "UnorderedMapInsertResult::existing"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult6failedEv", "UnorderedMapInsertResult::failed"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult5indexEv", "UnorderedMapInsertResult::index"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult7successEv", "UnorderedMapInsertResult::success"], [186, 11, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View"], [186, 11, 1, "_CPPv44View12pointer_typeRK12array_layout", "View"], [186, 11, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View"], [186, 11, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View"], [186, 11, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View"], [186, 11, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View"], [186, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View"], [186, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View"], [186, 11, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View"], [186, 11, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View"], [186, 11, 1, "_CPPv44ViewRR4View", "View"], [186, 11, 1, "_CPPv44Viewv", "View"], [186, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::args"], [186, 8, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::indices"], [186, 8, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::indices"], [186, 8, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::indices"], [186, 8, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::indices"], [186, 8, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::layout"], [186, 8, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::layout"], [186, 8, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::layout"], [186, 8, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::layout"], [186, 8, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::name"], [186, 8, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::name"], [186, 8, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::prop"], [186, 8, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::prop"], [186, 8, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::ptr"], [186, 8, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::ptr"], [186, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View::rhs"], [186, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::rhs"], [186, 8, 1, "_CPPv44ViewRR4View", "View::rhs"], [186, 8, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::space"], [186, 8, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::space"], [186, 11, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access"], [186, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i0"], [186, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i1"], [186, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i2"], [186, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i3"], [186, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i4"], [186, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i5"], [186, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i6"], [186, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i7"], [182, 10, 1, "_CPPv412array_layout", "array_layout"], [186, 11, 1, "_CPPv411assign_data12pointer_type", "assign_data"], [186, 8, 1, "_CPPv411assign_data12pointer_type", "assign_data::arg_data"], [105, 11, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add"], [105, 9, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::T"], [105, 8, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::ptr_to_value"], [105, 8, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::value"], [106, 11, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::value"], [105, 11, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and"], [105, 9, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::T"], [105, 8, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::ptr_to_value"], [105, 8, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::value"], [106, 11, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::value"], [105, 11, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign"], [105, 9, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::T"], [105, 8, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::ptr_to_value"], [105, 8, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::value"], [100, 11, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange"], [100, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::T"], [100, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::comparison_value"], [100, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::new_value"], [100, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::ptr_to_value"], [101, 11, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong"], [101, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::T"], [101, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::comparison_value"], [101, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::new_value"], [101, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::ptr_to_value"], [105, 11, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement"], [105, 9, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::T"], [105, 8, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::ptr_to_value"], [106, 11, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::value"], [102, 11, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange"], [102, 9, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::T"], [102, 8, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::new_value"], [102, 8, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::ptr_to_value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::value"], [103, 11, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift"], [103, 9, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::T"], [103, 8, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::ptr_to_value"], [103, 8, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::shift"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::value"], [103, 11, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or"], [103, 9, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::T"], [103, 8, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::ptr_to_value"], [103, 8, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::value"], [103, 11, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift"], [103, 9, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::T"], [103, 8, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::ptr_to_value"], [103, 8, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::shift"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::value"], [105, 11, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment"], [105, 9, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::T"], [105, 8, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::ptr_to_value"], [104, 11, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load"], [104, 9, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::T"], [104, 8, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::ptr_to_value"], [106, 11, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch"], [106, 9, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::T"], [106, 8, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::shift"], [105, 11, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max"], [105, 9, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::T"], [105, 8, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::ptr_to_value"], [105, 8, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::value"], [106, 11, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::value"], [105, 11, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min"], [105, 9, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::T"], [105, 8, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::ptr_to_value"], [105, 8, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::value"], [106, 11, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::value"], [106, 11, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::value"], [106, 11, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::value"], [105, 11, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or"], [105, 9, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::T"], [105, 8, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::ptr_to_value"], [105, 8, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::value"], [106, 11, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch"], [106, 9, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::T"], [106, 8, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::value"], [106, 11, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch"], [106, 9, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::T"], [106, 8, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::shift"], [107, 11, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store"], [107, 9, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::T"], [107, 8, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::new_value"], [107, 8, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::ptr_to_value"], [105, 11, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub"], [105, 9, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::T"], [105, 8, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::ptr_to_value"], [105, 8, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::value"], [106, 11, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::value"], [106, 11, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::value"], [4, 7, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::DataType"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::Properties"], [4, 8, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::view"], [4, 7, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::DataType"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::Properties"], [4, 8, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::view"], [4, 7, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::DataType"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::Properties"], [4, 8, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::view"], [168, 6, 1, "_CPPv4I0E7complex", "complex"], [168, 9, 1, "_CPPv4I0E7complex", "complex::Scalar"], [168, 11, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex"], [168, 7, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex"], [168, 7, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex"], [168, 7, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex"], [168, 7, 1, "_CPPv4N7complex7complexEv", "complex::complex"], [168, 9, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::T"], [168, 9, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::T"], [168, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T1"], [168, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T2"], [168, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::imag"], [168, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::real"], [168, 8, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::real"], [168, 8, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::src"], [168, 8, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex::src"], [168, 12, 1, "_CPPv4N7complex2imE", "complex::im"], [168, 7, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag"], [168, 7, 1, "_CPPv4N7complex4imagEv", "complex::imag"], [168, 7, 1, "_CPPv4NK7complex4imagEv", "complex::imag"], [168, 8, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag::v"], [168, 11, 1, "_CPPv4NK7complexcvNSt7complexI10value_typeEEEv", "complex::operator std::complex&lt;value_type&gt;"], [168, 11, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!="], [168, 7, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!="], [168, 7, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!="], [168, 9, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::T"], [168, 9, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::T"], [168, 9, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::T"], [168, 8, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::real"], [168, 8, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::src"], [168, 8, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::src"], [168, 11, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*="], [168, 7, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*="], [168, 7, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*="], [168, 9, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::T"], [168, 9, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::T"], [168, 9, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::T"], [168, 8, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::real"], [168, 8, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::src"], [168, 8, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::src"], [168, 11, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+="], [168, 7, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+="], [168, 7, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+="], [168, 9, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::T"], [168, 9, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::T"], [168, 9, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::T"], [168, 8, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::real"], [168, 8, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::src"], [168, 8, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::src"], [168, 11, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-="], [168, 7, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-="], [168, 7, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-="], [168, 9, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::T"], [168, 9, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::T"], [168, 9, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::T"], [168, 8, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::real"], [168, 8, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::src"], [168, 8, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::src"], [168, 11, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/="], [168, 7, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/="], [168, 7, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/="], [168, 9, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::T"], [168, 9, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::T"], [168, 9, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::T"], [168, 8, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::real"], [168, 8, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::src"], [168, 8, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::src"], [168, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator="], [168, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator="], [168, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator="], [168, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::T"], [168, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::T"], [168, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::T"], [168, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::re"], [168, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::src"], [168, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::src"], [168, 11, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator=="], [168, 7, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator=="], [168, 7, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator=="], [168, 9, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::T"], [168, 9, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::T"], [168, 9, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::T"], [168, 8, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::real"], [168, 8, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::src"], [168, 8, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::src"], [168, 12, 1, "_CPPv4N7complex2reE", "complex::re"], [168, 7, 1, "_CPPv4N7complex4realE8RealType", "complex::real"], [168, 7, 1, "_CPPv4N7complex4realEv", "complex::real"], [168, 7, 1, "_CPPv4NK7complex4realEv", "complex::real"], [168, 8, 1, "_CPPv4N7complex4realE8RealType", "complex::real::v"], [168, 10, 1, "_CPPv4N7complex10value_typeE", "complex::value_type"], [79, 11, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute"], [79, 8, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::dest"], [79, 8, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::src"], [178, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror"], [178, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror"], [178, 11, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror"], [178, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror"], [178, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror"], [178, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::Space"], [178, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::Space"], [178, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewCtorArgs"], [178, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::ViewType"], [178, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::ViewType"], [178, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewType"], [178, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::ViewType"], [178, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::ViewType"], [178, 8, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::arg_prop"], [178, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::space"], [178, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::space"], [178, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::src"], [178, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::src"], [178, 8, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::v"], [178, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view"], [178, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view"], [178, 11, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view"], [178, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view"], [178, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view"], [178, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::Space"], [178, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::Space"], [178, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewCtorArgs"], [178, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [178, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [178, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewType"], [178, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::ViewType"], [178, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::ViewType"], [178, 8, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::arg_prop"], [178, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::space"], [178, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::space"], [178, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::src"], [178, 8, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::src"], [178, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::src"], [178, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::src"], [178, 11, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy"], [178, 11, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy"], [178, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::Space"], [178, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewCtorArgs"], [178, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::ViewType"], [178, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewType"], [178, 8, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::arg_prop"], [178, 8, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::space"], [178, 8, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::src"], [186, 11, 1, "_CPPv4NK4dataEv", "data"], [182, 12, 1, "_CPPv49dimension", "dimension"], [4, 7, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance"], [4, 9, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::IteratorType"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::first"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::last"], [4, 7, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::DataType"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::Properties"], [4, 8, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::view"], [186, 11, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent"], [186, 8, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::dim"], [186, 9, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::iType"], [186, 11, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int"], [186, 8, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::dim"], [186, 9, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::iType"], [223, 11, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator"], [223, 8, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator::v"], [122, 7, 1, "_CPPv4NK4initER10value_type", "init"], [122, 8, 1, "_CPPv4NK4initER10value_type", "init::val"], [186, 11, 1, "_CPPv4NK12is_allocatedEv", "is_allocated"], [186, 11, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable"], [186, 8, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable::rhs"], [182, 12, 1, "_CPPv423is_extent_constructible", "is_extent_constructible"], [4, 11, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap"], [4, 9, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::IteratorType"], [4, 8, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::first"], [4, 8, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::last"], [122, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [122, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [122, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [127, 11, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free"], [127, 9, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::MemorySpace"], [127, 8, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::ptr"], [128, 11, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc"], [128, 11, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc"], [128, 9, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::MemorySpace"], [128, 9, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::MemorySpace"], [128, 8, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::label"], [128, 8, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::size"], [128, 8, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::size"], [129, 11, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc"], [129, 9, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::MemorySpace"], [129, 8, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::new_size"], [129, 8, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::ptr"], [186, 11, 1, "_CPPv4NK5labelEv", "label"], [186, 11, 1, "_CPPv4NK6layoutEv", "layout"], [186, 11, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!="], [186, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewDst"], [186, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewSrc"], [186, 11, 1, "_CPPv4NKclEDpRK7IntType", "operator()"], [186, 8, 1, "_CPPv4NKclEDpRK7IntType", "operator()::indices"], [182, 11, 1, "_CPPv4aSRK12LayoutStride", "operator="], [182, 11, 1, "_CPPv4aSRR12LayoutStride", "operator="], [186, 11, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator=="], [223, 11, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator=="], [186, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewDst"], [186, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewSrc"], [223, 9, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator==::ViewSrc"], [182, 7, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions"], [182, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::dimen"], [182, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::order"], [182, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::rank"], [163, 11, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space"], [163, 11, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space"], [163, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::Args"], [163, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::ExecSpace"], [163, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::ExecSpace"], [163, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::T"], [163, 8, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::args"], [163, 8, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::space"], [163, 8, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::space"], [163, 8, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::weigths"], [136, 11, 1, "_CPPv418push_finalize_hookNSt8functionIFvvEEE", "push_finalize_hook"], [136, 8, 1, "_CPPv418push_finalize_hookNSt8functionIFvvEEE", "push_finalize_hook::func"], [186, 11, 1, "_CPPv44rankv", "rank"], [186, 11, 1, "_CPPv412rank_dynamicv", "rank_dynamic"], [122, 7, 1, "_CPPv4NK9referenceEv", "reference"], [186, 11, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size"], [186, 11, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size"], [186, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N0"], [186, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N1"], [186, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N2"], [186, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N3"], [186, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N4"], [186, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N5"], [186, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N6"], [186, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N7"], [186, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N8"], [186, 8, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size::layout"], [186, 11, 1, "_CPPv4NK4sizeEv", "size"], [186, 11, 1, "_CPPv4NK4spanEv", "span"], [186, 11, 1, "_CPPv4NK18span_is_contiguousEv", "span_is_contiguous"], [161, 11, 1, "_CPPv45startv", "start"], [161, 11, 1, "_CPPv44stopv", "stop"], [186, 11, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride"], [186, 11, 1, "_CPPv4I0ENK6strideEvP5iType", "stride"], [182, 12, 1, "_CPPv46stride", "stride"], [186, 8, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::dim"], [186, 9, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::iType"], [186, 9, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::iType"], [186, 8, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::strides"], [186, 11, 1, "_CPPv4NK8stride_0Ev", "stride_0"], [186, 11, 1, "_CPPv4NK8stride_1Ev", "stride_1"], [186, 11, 1, "_CPPv4NK8stride_2Ev", "stride_2"], [186, 11, 1, "_CPPv4NK8stride_3Ev", "stride_3"], [186, 11, 1, "_CPPv4NK8stride_4Ev", "stride_4"], [186, 11, 1, "_CPPv4NK8stride_5Ev", "stride_5"], [186, 11, 1, "_CPPv4NK8stride_6Ev", "stride_6"], [186, 11, 1, "_CPPv4NK8stride_7Ev", "stride_7"], [185, 11, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview"], [185, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::Args"], [185, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::ViewType"], [185, 8, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::args"], [185, 8, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::v"], [186, 11, 1, "_CPPv4NK9use_countEv", "use_count"], [82, 6, 1, "_CPPv4I00E6vector", "vector"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Arg1Type"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Scalar"], [82, 11, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign"], [82, 8, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::n"], [82, 8, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::val"], [82, 11, 1, "_CPPv4N6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector5beginEv", "vector::begin"], [82, 11, 1, "_CPPv4N6vector5clearEv", "vector::clear"], [82, 10, 1, "_CPPv4N6vector14const_iteratorE", "vector::const_iterator"], [82, 10, 1, "_CPPv4N6vector13const_pointerE", "vector::const_pointer"], [82, 10, 1, "_CPPv4N6vector15const_referenceE", "vector::const_reference"], [82, 11, 1, "_CPPv4NK6vector4dataEv", "vector::data"], [82, 11, 1, "_CPPv4N6vector14device_to_hostEv", "vector::device_to_host"], [82, 11, 1, "_CPPv4NK6vector5emptyEv", "vector::empty"], [82, 11, 1, "_CPPv4NK6vector3endEv", "vector::end"], [82, 11, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find"], [82, 8, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find::val"], [82, 11, 1, "_CPPv4N6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector14host_to_deviceEv", "vector::host_to_device"], [82, 11, 1, "_CPPv4NK6vector12is_allocatedEv", "vector::is_allocated"], [82, 11, 1, "_CPPv4N6vector9is_sortedEv", "vector::is_sorted"], [82, 10, 1, "_CPPv4N6vector8iteratorE", "vector::iterator"], [82, 11, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::comp_val"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::start"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::theEnd"], [82, 11, 1, "_CPPv4NK6vector8max_sizeEv", "vector::max_size"], [82, 11, 1, "_CPPv4N6vector9on_deviceEv", "vector::on_device"], [82, 11, 1, "_CPPv4N6vector7on_hostEv", "vector::on_host"], [82, 7, 1, "_CPPv4NK6vectorclEi", "vector::operator()"], [82, 8, 1, "_CPPv4NK6vectorclEi", "vector::operator()::i"], [82, 7, 1, "_CPPv4NK6vectorixEi", "vector::operator[]"], [82, 8, 1, "_CPPv4NK6vectorixEi", "vector::operator[]::i"], [82, 10, 1, "_CPPv4N6vector7pointerE", "vector::pointer"], [82, 11, 1, "_CPPv4N6vector8pop_backEv", "vector::pop_back"], [82, 11, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back"], [82, 8, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back::val"], [82, 10, 1, "_CPPv4N6vector9referenceE", "vector::reference"], [82, 11, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve"], [82, 8, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve::n"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize::n"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::n"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::val"], [82, 11, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation"], [82, 8, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation::extra"], [82, 11, 1, "_CPPv4NK6vector4sizeEv", "vector::size"], [82, 11, 1, "_CPPv4NK6vector4spanEv", "vector::span"], [82, 10, 1, "_CPPv4N6vector10value_typeE", "vector::value_type"], [82, 11, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector"], [82, 11, 1, "_CPPv4N6vector6vectorEv", "vector::vector"], [82, 8, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::n"], [82, 8, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::val"], [122, 7, 1, "_CPPv4NK4viewEv", "view"], [187, 11, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc"], [187, 9, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::Args"], [187, 8, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::args"], [187, 11, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap"], [187, 9, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::Args"], [187, 8, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::args"], [161, 11, 1, "_CPPv4D0v", "~ProfilingSection"], [162, 11, 1, "_CPPv4D0v", "~ScopedRegion"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:templateParam", "5": "cpp:type", "6": "cppkokkos:class", "7": "cppkokkos:kokkosinlinefunction", "8": "cppkokkos:functionParam", "9": "cppkokkos:templateParam", "10": "cppkokkos:type", "11": "cppkokkos:function", "12": "cppkokkos:member"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cppkokkos", "class", "C++ class"], "7": ["cppkokkos", "kokkosinlinefunction", "C++ kokkosinlinefunction"], "8": ["cppkokkos", "functionParam", "C++ function parameter"], "9": ["cppkokkos", "templateParam", "C++ template parameter"], "10": ["cppkokkos", "type", "C++ type"], "11": ["cppkokkos", "function", "C++ function"], "12": ["cppkokkos", "member", "C++ member"]}, "titleterms": {"api": [0, 72, 73, 83, 84, 189, 194, 226], "algorithm": [0, 3, 72, 214, 240], "random": [1, 210], "number": [1, 232], "rand": 1, "gener": [1, 32, 88, 130, 195, 217, 229], "synopsi": [1, 2, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 130, 137, 142, 143, 144, 151, 152, 156, 158, 160, 164, 176], "exampl": [1, 2, 4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 53, 56, 76, 77, 79, 81, 84, 122, 131, 132, 133, 134, 135, 136, 139, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 166, 167, 172, 174, 176, 177, 179, 182, 183, 184, 185, 186, 190, 191, 192, 198, 199, 201, 205, 206, 208, 223, 231, 237, 240], "sort": [2, 10], "nest": [2, 84, 85, 200], "polici": [2, 85, 90, 95, 150, 152, 200, 207], "team": [2, 12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 90, 194, 200, 207], "thread": [2, 200, 202, 205], "level": [2, 85], "addit": [2, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124], "inform": [2, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 195], "sampl": 2, "output": 2, "std": [3, 202], "iter": [4, 81], "kokko": [4, 86, 87, 91, 95, 130, 137, 151, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 194, 195, 202, 204, 205, 210, 211, 212, 214, 216, 217, 222, 225, 226, 228, 229, 230, 233, 234, 240, 242], "experiment": [4, 130, 137, 170, 190, 191, 192], "begin": 4, "cbegin": 4, "end": 4, "cend": 4, "note": [4, 87, 133, 138, 139, 140, 165, 167, 171, 172, 174, 175], "paramet": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 135, 145, 146, 147, 148, 150, 152, 179, 186, 190, 191, 192, 238], "requir": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 122, 134, 135, 145, 146, 147, 148, 163, 177, 179, 222, 226, 227, 236], "distanc": 4, "return": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "iter_swap": 4, "minimum": [5, 171], "maximum": [5, 171], "modifi": [6, 7], "sequenc": [6, 7, 240], "non": [7, 74, 130, 137, 202, 223, 238], "numer": [8, 89, 141], "partit": 9, "adjacent_differ": 11, "descript": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 81, 82, 100, 101, 102, 103, 104, 105, 106, 107, 127, 128, 129, 133, 151, 153, 154, 155, 156, 157, 158, 159, 160, 168, 177, 178, 180, 181, 182, 183, 184, 185, 187, 223], "adjacent_find": 12, "interfac": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 74, 78, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 131, 132, 134, 135, 136, 145, 146, 147, 148, 150, 155, 157, 159, 163, 177, 179, 186, 190, 191, 192, 223], "overload": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65], "set": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 88], "accept": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65], "execut": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 85, 88, 90, 130, 150, 152, 195, 200, 205, 206, 207, 210, 237], "space": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 88, 93, 94, 130, 137, 195, 205, 206, 207, 210], "handl": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65], "valu": [12, 13, 14, 19, 20, 33, 43, 44, 45, 57, 58, 65, 190, 191, 232], "all_of": 13, "any_of": 14, "copi": [15, 130, 145, 179, 210], "copy_backward": 16, "copy_if": 17, "copy_n": 18, "count": [19, 210], "count_if": 20, "equal": 21, "exclusive_scan": 22, "fill": 23, "fill_n": 24, "find": 25, "find_end": 26, "find_first_of": 27, "find_if": 28, "find_if_not": 29, "for_each": 30, "for_each_n": 31, "generate_n": 33, "inclusive_scan": 34, "is_partit": 35, "is_sort": 36, "is_sorted_until": 37, "lexicographical_compar": 38, "max_el": 39, "min_el": 40, "minmax_el": 41, "mismatch": 42, "move": [43, 236], "move_backward": 44, "none_of": 45, "partition_copi": 46, "partition_point": 47, "reduc": [48, 108, 122, 197, 198, 199, 206], "remov": 49, "remove_copi": 50, "remove_copy_if": 51, "remove_if": 52, "replac": 53, "replace_copi": 54, "replace_copy_if": 55, "replace_if": 56, "revers": 57, "reverse_copi": 58, "rotat": 59, "rotate_copi": 60, "search": 61, "search_n": 62, "shift_left": 63, "shift_right": 64, "swap_rang": 65, "transform": 66, "transform_exclusive_scan": 67, "transform_inclusive_scan": 68, "transform_reduc": 69, "uniqu": 70, "unique_copi": 71, "alphabet": 72, "order": 72, "contain": [72, 73, 210, 214], "core": [72, 83, 214], "bitset": 74, "class": [74, 122, 142, 143, 144, 150, 152, 164, 176, 186, 214], "constbitset": 74, "member": [74, 122, 125, 130, 137, 142, 143, 144, 150, 152, 164, 176, 186, 214, 223, 238], "function": [74, 122, 126, 130, 137, 140, 142, 143, 144, 149, 164, 186, 190, 192, 193, 204, 206, 210, 214, 218, 223, 238, 241], "dualview": 75, "usag": [75, 76, 80, 82, 95, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 133, 136, 142, 143, 144, 147, 148, 150, 151, 152, 154, 156, 158, 161, 162, 163, 168, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 234, 237, 240], "dynrankview": 76, "assign": [76, 125, 164, 186, 192, 208], "rule": [76, 186, 210], "dynamicview": 77, "offsetview": 78, "construct": [78, 130, 210], "scatterview": [79, 193, 232], "staticcrsgraph": 80, "unorderedmap": 81, "insert": 81, "us": [81, 130, 145, 195, 206, 210, 211, 231, 233, 234, 236, 240], "default": [81, 130, 210], "unorderedmapinsertoptyp": 81, "noop": 81, "atomicadd": 81, "vector": [82, 200, 202, 208], "detect": [84, 130], "idiom": [84, 210], "an": [84, 87, 149, 206, 208, 227], "express": 84, "typedef": [84, 122, 130, 137, 142, 143, 144, 164, 186, 190, 191], "top": [85, 240], "common": [85, 140, 150, 152], "argument": [85, 150, 152, 201], "all": [85, 130, 150, 152, 166], "initi": [86, 135, 201, 210, 234], "final": [86, 134, 201], "scopeguard": [86, 133], "concept": 87, "introduct": [87, 203], "approach": 87, "overview": 87, "The": [87, 204, 208, 216, 236, 241], "executionspac": 87, "implement": [87, 234], "deviceexecutionspac": 87, "some": [87, 179], "de": 87, "facto": 87, "design": 87, "thought": 87, "memoryspac": 87, "executionpolici": [87, 149], "teammemb": 87, "functor": [87, 95, 206, 240], "A": [87, 209, 228], "deleg": 87, "macro": [88, 194, 214], "version": [88, 222], "backend": [88, 217, 230], "option": [88, 152, 217], "c": [88, 126, 194, 202, 209, 216, 226, 239], "standard": [88, 210, 216], "third": [88, 217], "parti": [88, 217], "librari": [88, 202, 208, 216, 217], "architectur": [88, 217], "parallel": [90, 95, 200, 206, 217, 234], "dispatch": [90, 206], "pattern": [90, 95, 207, 237, 240], "tag": [90, 206, 239], "calcul": 90, "profil": [91, 161, 162], "scopedregion": [91, 162], "profilingsect": [91, 161], "stl": 92, "compat": [92, 194, 226], "issu": [92, 211, 218, 226, 227], "access": [93, 186, 190, 191, 210], "task": [95, 240], "Will": 95, "work": [95, 204, 216, 237, 240, 241], "my": [95, 204, 241], "problem": [95, 204, 210, 234, 241], "basic": [95, 200, 208], "predecessor": 95, "schedul": 95, "wait": 95, "aggreg": 95, "prioriti": 95, "trait": [96, 141, 193, 207, 210], "is_array_layout": 96, "is_execution_polici": 96, "is_memory_spac": 96, "is_memory_trait": 96, "is_reduc": 96, "is_spac": 96, "util": 97, "view": [98, 179, 186, 188, 202, 209, 210], "relat": [98, 216], "atom": [99, 193, 210], "atomic_compare_exchang": 100, "atomic_compare_exchange_strong": 101, "atomic_exchang": 102, "atomic_fetch_": 103, "op": [103, 105, 106], "atomic_load": 104, "atomic_": [105, 106], "_fetch": 106, "atomic_stor": 107, "built": [108, 122, 197, 198], "band": 109, "bor": 110, "land": 111, "lor": 112, "max": [113, 190], "maxloc": 114, "min": [115, 190], "minloc": 116, "minmax": 117, "minmaxloc": 118, "minmaxlocscalar": 119, "minmaxscalar": 120, "prod": 121, "reducerconcept": 122, "public": [122, 125, 142, 143, 144, 150, 152, 164, 176, 186, 214], "constructor": [122, 130, 137, 142, 143, 144, 150, 152, 164, 176, 186, 190, 191], "In": [122, 197, 198], "reduct": [123, 191, 196, 206, 208], "scalar": [123, 198], "type": [123, 188, 198, 208, 209, 210, 214], "sum": [124, 232], "vallocscalar": 125, "variabl": [125, 201], "oper": [125, 171, 190, 191, 193, 208, 233, 234, 237, 239], "style": 126, "memori": [126, 137, 193, 200, 202, 205, 207, 210], "manag": [126, 202, 210, 230], "kokkos_fre": 127, "kokkos_malloc": 128, "kokkos_realloc": 129, "cuda": [130, 195, 202, 211, 235], "hip": [130, 218], "sycl": 130, "hpx": 130, "openmp": [130, 202], "openmptarget": 130, "serial": [130, 217, 234, 237], "executionspaceconcept": 130, "alias": [130, 214], "base": 130, "configur": [130, 195, 211], "defaultexecutionspac": 130, "defaulthostexecutionspac": 130, "veri": 130, "simplest": 130, "Not": 130, "Being": 130, "more": 130, "facil": [130, 137], "initargu": 131, "see": [131, 132, 133, 134, 135, 136, 139, 140, 167, 171], "also": [131, 132, 133, 134, 135, 136, 139, 140, 167, 171], "initializationset": 132, "semant": [134, 135, 145, 146, 147, 148, 163, 179], "push_finalize_hook": 136, "cudaspac": 137, "cudahostpinnedspac": 137, "cudauvmspac": 137, "hipspac": 137, "hiphostpinnedspac": 137, "hipmanagedspac": 137, "sycldeviceusmspac": 137, "syclhostusmspac": 137, "syclsharedusmspac": 137, "hostspac": 137, "sharedspac": [137, 236], "sharedhostpinnedspac": 137, "memoryspaceconcept": 137, "bit": 138, "manipul": 138, "mathemat": [139, 218], "constant": [139, 218], "math": 140, "parallelfortag": 142, "parallelreducetag": 143, "parallelscantag": 144, "fenc": 145, "time": 145, "kernel": [145, 200, 237], "asynchron": 145, "deep": [145, 210], "parallel_for": 146, "parallel_reduc": 147, "parallel_scan": 148, "what": [149, 210, 241], "mdrangepolici": [150, 234], "specif": [150, 217], "nestedpolici": 151, "list": [151, 195], "perteam": 151, "perthread": 151, "teamthreadrang": [151, 156], "teamthreadmdrang": [151, 155], "teamvectorrang": [151, 158], "teamvectormdrang": [151, 157], "threadvectorrang": [151, 160], "threadvectormdrang": [151, 159], "rangepolici": [152, 234], "initarg": 152, "teamhandleconcept": 153, "teampolici": 154, "partition_spac": 163, "pair": 164, "convers": [164, 210], "abort": 165, "kokkos_assert": 167, "complex": 168, "device_id": 169, "num_devic": 172, "num_thread": 173, "printf": 174, "kokkos_swap": 175, "timer": 176, "subview": [177, 185, 209], "create_mirror": 178, "_view": 178, "deep_copi": 179, "thing": 179, "you": [179, 210], "can": [179, 210], "cannot": 179, "do": [179, 210, 241], "how": [179, 204, 209, 210, 241], "get": [179, 210], "layout": [179, 186, 207, 210], "incompat": 179, "layoutleft": 180, "layoutright": 181, "layoutstrid": 182, "realloc": 183, "resiz": [184, 210], "enum": 186, "data": [186, 202, 210], "dimens": [186, 209, 210], "stride": [186, 210], "other": [186, 194, 210, 214], "nonmemb": 186, "view_alloc": 187, "like": 188, "simd": [189, 190, 208], "templat": [190, 191, 192, 224, 238, 239], "width": [190, 191], "load": [190, 192], "store": [190, 192], "method": [190, 191, 192], "arithmet": 190, "comparison": [190, 191], "cmath": 190, "global": [190, 191], "simd_mask": 191, "boolean": 191, "where_express": 192, "where": 192, "gather": [192, 226], "scatter": 192, "10": 193, "1": [193, 195, 197, 200, 201, 202, 203, 205, 206, 207, 209, 210, 237], "write": 193, "conflict": 193, "Their": 193, "resolut": 193, "With": 193, "2": [193, 195, 198, 200, 201, 202, 205, 206, 207, 209, 210, 237], "free": [193, 214], "3": [193, 195, 199, 200, 201, 202, 205, 206, 207, 209, 210, 214, 222, 240], "4": [193, 195, 200, 201, 202, 206, 207, 210, 222], "12": [194, 202], "backward": 194, "futur": [194, 205], "user": 194, "defin": 194, "abi": 194, "deprec": [194, 214], "header": [194, 201, 214], "right": 194, "reserv": 194, "miscellan": 194, "proof": 194, "compil": [195, 222, 228, 230], "cmake": [195, 211, 217], "build": [195, 211, 222], "system": [195, 222], "instal": [195, 211], "packag": [195, 211], "tree": 195, "spack": [195, 211], "develop": [195, 211, 226], "keyword": [195, 217], "trilino": 195, "branch": 195, "gnu": 195, "makefil": [195, 211], "5": [195, 201, 206, 207, 210], "6": [195, 207, 210], "restrict": [195, 200], "9": [196, 197, 198, 199], "custom": [196, 198, 199, 229], "8": 200, "hierarch": 200, "motiv": [200, 205], "creat": [200, 210], "instanc": [200, 205], "scratch": 200, "pad": 200, "loop": [200, 206], "barrier": 200, "singl": [200, 235], "executor": 200, "0": 201, "includ": 201, "command": 201, "line": 201, "environ": 201, "struct": 201, "code": [201, 202, 204, 208, 236, 237, 241], "13": 202, "interoper": 202, "legaci": 202, "structur": [202, 233, 238], "raw": [202, 210, 211], "alloc": [202, 233], "through": [202, 240], "extern": 202, "fundament": 202, "own": 202, "call": 202, "14": 204, "virtual": [204, 241], "v": [204, 241], "tabl": [204, 241], "pointer": [204, 210, 241], "eri": [204, 241], "annoi": [204, 241], "gpu": [204, 217, 241], "Then": [204, 241], "why": [204, 210, 241], "doesn": [204, 241], "t": [204, 210, 241], "fix": [204, 241], "thi": [204, 210, 226, 241], "complic": [204, 241], "question": [204, 216, 241], "follow": [204, 241], "up": [204, 241], "machin": 205, "model": [205, 207, 216, 226], "abstract": 205, "figur": 205, "conceptu": 205, "high": 205, "perform": [205, 208, 216, 230, 237], "comput": [205, 230, 232, 237], "node": [205, 232], "program": [205, 207, 216, 221, 226, 233], "safeti": 205, "7": [206, 210, 214], "specifi": [206, 210], "bodi": 206, "lambda": 206, "should": 206, "i": [206, 210, 241], "join": 206, "init": 206, "arrai": [206, 210, 233, 234, 238], "result": 206, "scan": 206, "name": [206, 211], "rang": 207, "15": 208, "background": 208, "idea": 208, "deal": [208, 239], "remaind": 208, "condit": [208, 240], "ternari": 208, "11": 209, "slice": 209, "take": 209, "deduct": 209, "degener": 209, "obtain": 209, "multidimension": [210, 233], "need": [210, 241], "mai": 210, "make": 210, "probabl": 210, "don": 210, "want": 210, "s": 210, "realli": [210, 241], "const": 210, "entri": 210, "index": 210, "refer": [210, 234], "lifetim": 210, "depend": 210, "explicitli": 210, "placement": 210, "hostmirror": 210, "unmanag": 210, "special": 210, "philosophi": 211, "known": [211, 218], "knownissu": 211, "crai": 211, "fortran": [211, 233], "inlin": 211, "vs": 211, "uvm": 211, "cite": 212, "contribut": 213, "document": [213, 224], "x": [214, 222], "namespac": 214, "updat": 214, "faq": 215, "portabl": [216, 241], "websit": 216, "content": 216, "host": [217, 237], "devic": [217, 237, 241], "tpl": 217, "cpu": 217, "nvidia": 217, "amd": 217, "intel": 217, "licens": 219, "guid": 221, "coolerview": 223, "plan": [225, 226], "test": [225, 229, 230], "project": 226, "stabil": 226, "activ": 226, "support": [226, 228], "platform": [226, 230], "capabl": 226, "iso": 226, "releas": [226, 229], "priorit": 226, "coordin": 226, "process": [226, 229], "feedback": 227, "report": 227, "attach": 228, "identif": 228, "b": 228, "file": 228, "promot": 228, "txt": 228, "chang": 229, "pull": 229, "request": 229, "nightli": 229, "integr": 229, "intern": 229, "prefer": 229, "commun": 229, "workflow": 230, "compon": 230, "softwar": 230, "git": 230, "repositori": 230, "batch": 230, "queue": 230, "account": 230, "script": 230, "unit": 230, "case": [231, 233, 234, 240, 241], "averag": 232, "element": 232, "adjac": 232, "full": 232, "interop": 233, "multi": 234, "dimension": 234, "formul": 234, "mpi": 235, "halo": 235, "exchang": 235, "send": 235, "messag": 235, "awar": 235, "separ": 235, "out": 235, "identifi": 235, "subset": 235, "indic": 235, "extract": 235, "from": 236, "kokkos_enable_cuda_uvm": 236, "altern": 236, "transit": 236, "overlap": 237, "actor": [237, 240], "subject": [237, 240], "assumpt": [237, 240], "constraint": [237, 240], "precondit": [237, 240], "while": 237, "cabana": 238, "soa": 238, "aosoa": 238, "pre": 239, "17": 239, "post": 240, "recurs": 240, "fibonacci": 240, "flow": 240, "n": 240, "divid": 240, "graph": 240, "down": 240, "bf": 240, "But": 241, "side": 241, "doe": 241, "nvcc": 241, "solv": 241, "window": 242, "h": 242, "video": 243, "lectur": 243, "slide": 243}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "cppkokkos": 6, "sphinx": 56}})